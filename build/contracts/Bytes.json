{
  "contractName": "Bytes",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{},\"title\":\"Bytes\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/libraries/Bytes.sol\":\"Bytes\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/libraries/Bytes.sol\":{\"keccak256\":\"0xaac87fcac1962e29a85f577dafccf09d06b413fcc5bf97e821dca0b25183c310\",\"urls\":[\"bzzr://e1a3e3f8d13a8009d505b4d20029adbbcaf4c20a92ee10a223767fbb6d093dd2\"]}},\"version\":1}",
  "bytecode": "0x604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f30073000000000000000000000000000000000000000030146080604052600080fd00a165627a7a72305820ba409365a5a5ace2b5ce9901897674d75102c4660d895420a331710aac7359f70029",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fd00a165627a7a72305820ba409365a5a5ace2b5ce9901897674d75102c4660d895420a331710aac7359f70029",
  "sourceMap": "116:1256:20:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24",
  "deployedSourceMap": "116:1256:20:-;;;;;;;;",
  "source": "pragma solidity 0.4.24;\n\n/**\n * @title Bytes\n * @dev Helper methods to transform bytes to other solidity types.\n */\nlibrary Bytes {\n    /**\n    * @dev Converts bytes array to bytes32.\n    * Truncates bytes array if its size is more than 32 bytes.\n    * NOTE: This function does not perform any checks on the received parameter.\n    * Make sure that the _bytes argument has a correct length, not less than 32 bytes.\n    * A case when _bytes has length less than 32 will lead to the undefined behaviour,\n    * since assembly will read data from memory that is not related to the _bytes argument.\n    * @param _bytes to be converted to bytes32 type\n    * @return bytes32 type of the firsts 32 bytes array in parameter.\n    */\n    function bytesToBytes32(bytes _bytes) internal pure returns (bytes32 result) {\n        assembly {\n            result := mload(add(_bytes, 32))\n        }\n    }\n\n    /**\n    * @dev Truncate bytes array if its size is more than 20 bytes.\n    * NOTE: Similar to the bytesToBytes32 function, make sure that _bytes is not shorter than 20 bytes.\n    * @param _bytes to be converted to address type\n    * @return address included in the firsts 20 bytes of the bytes array in parameter.\n    */\n    function bytesToAddress(bytes _bytes) internal pure returns (address addr) {\n        assembly {\n            addr := mload(add(_bytes, 20))\n        }\n    }\n}\n",
  "sourcePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/libraries/Bytes.sol",
  "ast": {
    "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/libraries/Bytes.sol",
    "exportedSymbols": {
      "Bytes": [
        1973
      ]
    },
    "id": 1974,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1954,
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:20"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@title Bytes\n@dev Helper methods to transform bytes to other solidity types.",
        "fullyImplemented": true,
        "id": 1973,
        "linearizedBaseContracts": [
          1973
        ],
        "name": "Bytes",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1962,
              "nodeType": "Block",
              "src": "804:81:20",
              "statements": [
                {
                  "externalReferences": [
                    {
                      "result": {
                        "declaration": 1959,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "837:6:20",
                        "valueSize": 1
                      }
                    },
                    {
                      "_bytes": {
                        "declaration": 1956,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "857:6:20",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 1961,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    result := mload(add(_bytes, 32))\n}",
                  "src": "814:71:20"
                }
              ]
            },
            "documentation": "@dev Converts bytes array to bytes32.\nTruncates bytes array if its size is more than 32 bytes.\nNOTE: This function does not perform any checks on the received parameter.\nMake sure that the _bytes argument has a correct length, not less than 32 bytes.\nA case when _bytes has length less than 32 will lead to the undefined behaviour,\nsince assembly will read data from memory that is not related to the _bytes argument.\n@param _bytes to be converted to bytes32 type\n@return bytes32 type of the firsts 32 bytes array in parameter.",
            "id": 1963,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "bytesToBytes32",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1957,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1956,
                  "name": "_bytes",
                  "nodeType": "VariableDeclaration",
                  "scope": 1963,
                  "src": "751:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1955,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "751:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "750:14:20"
            },
            "payable": false,
            "returnParameters": {
              "id": 1960,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1959,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 1963,
                  "src": "788:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1958,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "788:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "787:16:20"
            },
            "scope": 1973,
            "src": "727:158:20",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1971,
              "nodeType": "Block",
              "src": "1291:79:20",
              "statements": [
                {
                  "externalReferences": [
                    {
                      "addr": {
                        "declaration": 1968,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1324:4:20",
                        "valueSize": 1
                      }
                    },
                    {
                      "_bytes": {
                        "declaration": 1965,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1342:6:20",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 1970,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    addr := mload(add(_bytes, 20))\n}",
                  "src": "1301:69:20"
                }
              ]
            },
            "documentation": "@dev Truncate bytes array if its size is more than 20 bytes.\nNOTE: Similar to the bytesToBytes32 function, make sure that _bytes is not shorter than 20 bytes.\n@param _bytes to be converted to address type\n@return address included in the firsts 20 bytes of the bytes array in parameter.",
            "id": 1972,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "bytesToAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1966,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1965,
                  "name": "_bytes",
                  "nodeType": "VariableDeclaration",
                  "scope": 1972,
                  "src": "1240:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1964,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1240:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1239:14:20"
            },
            "payable": false,
            "returnParameters": {
              "id": 1969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1968,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 1972,
                  "src": "1277:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1967,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1277:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1276:14:20"
            },
            "scope": 1973,
            "src": "1216:154:20",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 1974,
        "src": "116:1256:20"
      }
    ],
    "src": "0:1373:20"
  },
  "legacyAST": {
    "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/libraries/Bytes.sol",
    "exportedSymbols": {
      "Bytes": [
        1973
      ]
    },
    "id": 1974,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1954,
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:20"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@title Bytes\n@dev Helper methods to transform bytes to other solidity types.",
        "fullyImplemented": true,
        "id": 1973,
        "linearizedBaseContracts": [
          1973
        ],
        "name": "Bytes",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1962,
              "nodeType": "Block",
              "src": "804:81:20",
              "statements": [
                {
                  "externalReferences": [
                    {
                      "result": {
                        "declaration": 1959,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "837:6:20",
                        "valueSize": 1
                      }
                    },
                    {
                      "_bytes": {
                        "declaration": 1956,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "857:6:20",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 1961,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    result := mload(add(_bytes, 32))\n}",
                  "src": "814:71:20"
                }
              ]
            },
            "documentation": "@dev Converts bytes array to bytes32.\nTruncates bytes array if its size is more than 32 bytes.\nNOTE: This function does not perform any checks on the received parameter.\nMake sure that the _bytes argument has a correct length, not less than 32 bytes.\nA case when _bytes has length less than 32 will lead to the undefined behaviour,\nsince assembly will read data from memory that is not related to the _bytes argument.\n@param _bytes to be converted to bytes32 type\n@return bytes32 type of the firsts 32 bytes array in parameter.",
            "id": 1963,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "bytesToBytes32",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1957,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1956,
                  "name": "_bytes",
                  "nodeType": "VariableDeclaration",
                  "scope": 1963,
                  "src": "751:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1955,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "751:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "750:14:20"
            },
            "payable": false,
            "returnParameters": {
              "id": 1960,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1959,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 1963,
                  "src": "788:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1958,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "788:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "787:16:20"
            },
            "scope": 1973,
            "src": "727:158:20",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1971,
              "nodeType": "Block",
              "src": "1291:79:20",
              "statements": [
                {
                  "externalReferences": [
                    {
                      "addr": {
                        "declaration": 1968,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1324:4:20",
                        "valueSize": 1
                      }
                    },
                    {
                      "_bytes": {
                        "declaration": 1965,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1342:6:20",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 1970,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    addr := mload(add(_bytes, 20))\n}",
                  "src": "1301:69:20"
                }
              ]
            },
            "documentation": "@dev Truncate bytes array if its size is more than 20 bytes.\nNOTE: Similar to the bytesToBytes32 function, make sure that _bytes is not shorter than 20 bytes.\n@param _bytes to be converted to address type\n@return address included in the firsts 20 bytes of the bytes array in parameter.",
            "id": 1972,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "bytesToAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1966,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1965,
                  "name": "_bytes",
                  "nodeType": "VariableDeclaration",
                  "scope": 1972,
                  "src": "1240:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1964,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1240:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1239:14:20"
            },
            "payable": false,
            "returnParameters": {
              "id": 1969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1968,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 1972,
                  "src": "1277:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1967,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1277:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1276:14:20"
            },
            "scope": 1973,
            "src": "1216:154:20",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 1974,
        "src": "116:1256:20"
      }
    ],
    "src": "0:1373:20"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-11-26T16:22:39.582Z",
  "devdoc": {
    "methods": {},
    "title": "Bytes"
  },
  "userdoc": {
    "methods": {}
  }
}