{
  "contractName": "HomeAMBErc677ToErc677",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_receiver",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "relayTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_messageId",
          "type": "bytes32"
        }
      ],
      "name": "fixFailedMessage",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_bridgeContract",
          "type": "address"
        }
      ],
      "name": "setBridgeContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "erc677token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_day",
          "type": "uint256"
        }
      ],
      "name": "totalSpentPerDay",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isInitialized",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_dailyLimit",
          "type": "uint256"
        }
      ],
      "name": "setExecutionDailyLimit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCurrentDay",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBridgeMode",
      "outputs": [
        {
          "name": "_data",
          "type": "bytes4"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "executionDailyLimit",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_day",
          "type": "uint256"
        }
      ],
      "name": "totalExecutedPerDay",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_messageId",
          "type": "bytes32"
        }
      ],
      "name": "messageFixed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "dailyLimit",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_mediatorContract",
          "type": "address"
        }
      ],
      "name": "setMediatorContractOnOtherSide",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "mediatorContractOnOtherSide",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withinExecutionLimit",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "executionMaxPerTx",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_recipient",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "handleBridgedTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "maxAvailablePerTx",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_messageId",
          "type": "bytes32"
        }
      ],
      "name": "requestFailedMessageFix",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBridgeInterfacesVersion",
      "outputs": [
        {
          "name": "major",
          "type": "uint64"
        },
        {
          "name": "minor",
          "type": "uint64"
        },
        {
          "name": "patch",
          "type": "uint64"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "outOfLimitAmount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_minPerTx",
          "type": "uint256"
        }
      ],
      "name": "setMinPerTx",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "onTokenTransfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "messageId",
          "type": "bytes32"
        },
        {
          "name": "unlockOnOtherSide",
          "type": "bool"
        },
        {
          "name": "valueToUnlock",
          "type": "uint256"
        }
      ],
      "name": "fixAssetsAboveLimits",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_dailyLimit",
          "type": "uint256"
        }
      ],
      "name": "setDailyLimit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "requestGasLimit",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_bridgeContract",
          "type": "address"
        },
        {
          "name": "_mediatorContract",
          "type": "address"
        },
        {
          "name": "_erc677token",
          "type": "address"
        },
        {
          "name": "_dailyLimitMaxPerTxMinPerTxArray",
          "type": "uint256[3]"
        },
        {
          "name": "_executionDailyLimitExecutionMaxPerTxArray",
          "type": "uint256[2]"
        },
        {
          "name": "_requestGasLimit",
          "type": "uint256"
        },
        {
          "name": "_decimalShift",
          "type": "int256"
        },
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_maxPerTx",
          "type": "uint256"
        }
      ],
      "name": "setMaxPerTx",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "bridgeContract",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimalShift",
      "outputs": [
        {
          "name": "",
          "type": "int256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "minPerTx",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withinLimit",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_maxPerTx",
          "type": "uint256"
        }
      ],
      "name": "setExecutionMaxPerTx",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_requestGasLimit",
          "type": "uint256"
        }
      ],
      "name": "setRequestGasLimit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "maxPerTx",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "messageId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "FailedMessageFixed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "messageId",
          "type": "bytes32"
        }
      ],
      "name": "TokensBridged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "newLimit",
          "type": "uint256"
        }
      ],
      "name": "DailyLimitChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "newLimit",
          "type": "uint256"
        }
      ],
      "name": "ExecutionDailyLimitChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "messageId",
          "type": "bytes32"
        }
      ],
      "name": "MediatorAmountLimitExceeded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "transactionHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "messageId",
          "type": "bytes32"
        }
      ],
      "name": "AmountLimitExceeded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "messageId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "remaining",
          "type": "uint256"
        }
      ],
      "name": "AssetAboveLimitsFixed",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "claimTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_receiver\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"relayTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_messageId\",\"type\":\"bytes32\"}],\"name\":\"fixFailedMessage\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_bridgeContract\",\"type\":\"address\"}],\"name\":\"setBridgeContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"erc677token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_day\",\"type\":\"uint256\"}],\"name\":\"totalSpentPerDay\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isInitialized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dailyLimit\",\"type\":\"uint256\"}],\"name\":\"setExecutionDailyLimit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCurrentDay\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBridgeMode\",\"outputs\":[{\"name\":\"_data\",\"type\":\"bytes4\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"executionDailyLimit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_day\",\"type\":\"uint256\"}],\"name\":\"totalExecutedPerDay\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_messageId\",\"type\":\"bytes32\"}],\"name\":\"messageFixed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dailyLimit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"claimTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_mediatorContract\",\"type\":\"address\"}],\"name\":\"setMediatorContractOnOtherSide\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mediatorContractOnOtherSide\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withinExecutionLimit\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"executionMaxPerTx\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_recipient\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"handleBridgedTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxAvailablePerTx\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_messageId\",\"type\":\"bytes32\"}],\"name\":\"requestFailedMessageFix\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBridgeInterfacesVersion\",\"outputs\":[{\"name\":\"major\",\"type\":\"uint64\"},{\"name\":\"minor\",\"type\":\"uint64\"},{\"name\":\"patch\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"outOfLimitAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_minPerTx\",\"type\":\"uint256\"}],\"name\":\"setMinPerTx\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"onTokenTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"messageId\",\"type\":\"bytes32\"},{\"name\":\"unlockOnOtherSide\",\"type\":\"bool\"},{\"name\":\"valueToUnlock\",\"type\":\"uint256\"}],\"name\":\"fixAssetsAboveLimits\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dailyLimit\",\"type\":\"uint256\"}],\"name\":\"setDailyLimit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"requestGasLimit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_bridgeContract\",\"type\":\"address\"},{\"name\":\"_mediatorContract\",\"type\":\"address\"},{\"name\":\"_erc677token\",\"type\":\"address\"},{\"name\":\"_dailyLimitMaxPerTxMinPerTxArray\",\"type\":\"uint256[3]\"},{\"name\":\"_executionDailyLimitExecutionMaxPerTxArray\",\"type\":\"uint256[2]\"},{\"name\":\"_requestGasLimit\",\"type\":\"uint256\"},{\"name\":\"_decimalShift\",\"type\":\"int256\"},{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_maxPerTx\",\"type\":\"uint256\"}],\"name\":\"setMaxPerTx\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bridgeContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimalShift\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minPerTx\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withinLimit\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_maxPerTx\",\"type\":\"uint256\"}],\"name\":\"setExecutionMaxPerTx\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_requestGasLimit\",\"type\":\"uint256\"}],\"name\":\"setRequestGasLimit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxPerTx\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"messageId\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"FailedMessageFixed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"messageId\",\"type\":\"bytes32\"}],\"name\":\"TokensBridged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newLimit\",\"type\":\"uint256\"}],\"name\":\"DailyLimitChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newLimit\",\"type\":\"uint256\"}],\"name\":\"ExecutionDailyLimitChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"messageId\",\"type\":\"bytes32\"}],\"name\":\"MediatorAmountLimitExceeded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"transactionHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"messageId\",\"type\":\"bytes32\"}],\"name\":\"AmountLimitExceeded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"messageId\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"remaining\",\"type\":\"uint256\"}],\"name\":\"AssetAboveLimitsFixed\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"bridgeContract()\":{\"details\":\"Get the AMB interface for the bridge contract address\",\"return\":\"AMB interface for the bridge contract address\"},\"claimTokens(address,address)\":{\"details\":\"Withdraws the erc20 tokens or native coins from this contract.\",\"params\":{\"_to\":\"address of the tokens/coins receiver.\",\"_token\":\"address of the claimed token or address(0) for native coins.\"}},\"decimalShift()\":{\"details\":\"Returns the value of foreign-to-home decimal shift.\",\"return\":\"decimal shift.\"},\"erc677token()\":{\"details\":\"Public getter for token contract.\",\"return\":\"address of the used token contract\"},\"fixAssetsAboveLimits(bytes32,bool,uint256)\":{\"details\":\"Fixes locked tokens, that were out of execution limits during the call to handleBridgedTokens\",\"params\":{\"messageId\":\"reference for bridge operation that was out of execution limits\",\"unlockOnOtherSide\":\"true if fixed tokens should be unlocked to the other side of the bridge\",\"valueToUnlock\":\"unlocked amount of tokens, should be less than saved txAboveLimitsValue. Should be less than maxPerTx(), if tokens need to be unlocked on the other side.\"}},\"fixFailedMessage(bytes32)\":{\"details\":\"Handles the request to fix transferred assets which bridged message execution failed on the other network. It uses the information stored by passMessage method when the assets were initially transferred\",\"params\":{\"_messageId\":\"id of the message which execution failed on the other network.\"}},\"handleBridgedTokens(address,uint256)\":{\"details\":\"Handles the bridged tokens. Checks that the value is inside the execution limits and invokes the method to execute the Mint or Unlock accordingly.\",\"params\":{\"_recipient\":\"address that will receive the tokens\",\"_value\":\"amount of tokens to be received\"}},\"maxAvailablePerTx()\":{\"details\":\"Retrieves maximum available bridge amount per one transaction taking into account maxPerTx() and dailyLimit() parameters.\",\"return\":\"minimum of maxPerTx parameter and remaining daily quota.\"},\"mediatorContractOnOtherSide()\":{\"details\":\"Tells the mediator contract address from the other network.\",\"return\":\"the address of the mediator contract.\"},\"messageFixed(bytes32)\":{\"details\":\"Tells if a message sent to the AMB bridge has been fixed.\",\"return\":\"bool indicating the status of the message.\"},\"outOfLimitAmount()\":{\"details\":\"Total amount coins/tokens that were bridged from the other side and are out of execution limits.\",\"return\":\"total amount of all bridge operations above limits.\"},\"owner()\":{\"details\":\"Tells the address of the owner\",\"return\":\"the address of the owner\"},\"relayTokens(address,uint256)\":{\"details\":\"Initiates the bridge operation that will lock the amount of tokens transferred and mint the tokens on the other network. The user should first call Approve method of the ERC677 token.\",\"params\":{\"_receiver\":\"address that will receive the minted tokens on the other network.\",\"_value\":\"amount of tokens to be transferred to the other network.\"}},\"requestFailedMessageFix(bytes32)\":{\"details\":\"Method to be called when a bridged message execution failed. It will generate a new message requesting to fix/roll back the transferred assets on the other network.\",\"params\":{\"_messageId\":\"id of the message which execution failed.\"}},\"requestGasLimit()\":{\"details\":\"Tells the gas limit to be used in the message execution by the AMB bridge on the other network.\",\"return\":\"the gas limit for the message execution.\"},\"setBridgeContract(address)\":{\"details\":\"Sets the AMB bridge contract address. Only the owner can call this method.\",\"params\":{\"_bridgeContract\":\"the address of the bridge contract.\"}},\"setMediatorContractOnOtherSide(address)\":{\"details\":\"Sets the mediator contract address from the other network. Only the owner can call this method.\",\"params\":{\"_mediatorContract\":\"the address of the mediator contract.\"}},\"setRequestGasLimit(uint256)\":{\"details\":\"Sets the gas limit to be used in the message execution by the AMB bridge on the other network. This value can't exceed the parameter maxGasPerTx defined on the AMB bridge. Only the owner can call this method.\",\"params\":{\"_requestGasLimit\":\"the gas limit for the message execution.\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"the address to transfer ownership to.\"}}},\"title\":\"HomeAMBErc677ToErc677\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/amb_erc677_to_erc677/HomeAMBErc677ToErc677.sol\":\"HomeAMBErc677ToErc677\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/interfaces/ERC677.sol\":{\"keccak256\":\"0xa4252d5b9e3d1b536b6a5edce1b712530827fcc792438ca17fa60fb64d4463ca\",\"urls\":[\"bzzr://ca1db6e12bc9753410003682a5cb6ebfc87ee238e78ba4a3033f915c66c3c72b\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/interfaces/ERC677Receiver.sol\":{\"keccak256\":\"0x1343ae44729d851f88868c8712a9e864316badd59f8dd0988d108c2c43927ac9\",\"urls\":[\"bzzr://f3f8ad86c8f5c7e213fd5811e4362d83cf611bef3fcfd4438a876556ffbb4f16\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/interfaces/IAMB.sol\":{\"keccak256\":\"0xd95469da5c2b895e9f8b23a864f931f053efd9b22a1c0af1928e5802df74c73f\",\"urls\":[\"bzzr://ba73b8e65499bb98dba6fbbceb818784cb8122d6901960e2ef61c7a5ab254a69\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/interfaces/IBurnableMintableERC677Token.sol\":{\"keccak256\":\"0x74fd1c41330140ddd6dc29037ca04ee13a23a44c5c5b3c4ce284a99cc78484a1\",\"urls\":[\"bzzr://dff872387b862977ce1b000a31d08aaccb1ea3e43bf9b7403911841d1e3aabef\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/interfaces/IUpgradeabilityOwnerStorage.sol\":{\"keccak256\":\"0xa6b5c96c8165d49676d227a9b7070faffdb7325906a598797fe66ca5917e76ef\",\"urls\":[\"bzzr://14c7b605baba9012f1386dce78e5b2665c682ec6a5bae3f4a6ec15f98ba40aa9\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/libraries/Address.sol\":{\"keccak256\":\"0x9d5d8f089aedf9dfa743c9bc66bc901db5da5be78892af178340800873e1c722\",\"urls\":[\"bzzr://97602c15f88d529b68d7929717afa75fd03cd0f23a1363c14cd263dbcc17599e\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/libraries/Bytes.sol\":{\"keccak256\":\"0xaac87fcac1962e29a85f577dafccf09d06b413fcc5bf97e821dca0b25183c310\",\"urls\":[\"bzzr://e1a3e3f8d13a8009d505b4d20029adbbcaf4c20a92ee10a223767fbb6d093dd2\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/libraries/SafeERC20.sol\":{\"keccak256\":\"0xb1f0a33f17fee9d600a2269fecce80d79377af3aeb2922e903fe4e3b57dc0c4f\",\"urls\":[\"bzzr://e3b6f5e2a1e88e69d403cbf2925c92c662b4fe6ea28dee292948187203ac6c98\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeability/EternalStorage.sol\":{\"keccak256\":\"0x8f2df79a1cda812d4be25da8f2b138f9b7492e76da1dfba21d87012e649cc51c\",\"urls\":[\"bzzr://0846d08e1b7a84e541ae31c91d2c0b34d88cf3abbd18891ec6eedeea7e958af2\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/BaseERC677Bridge.sol\":{\"keccak256\":\"0x68adcbc23fcaf31480b6cc15c929dd7f62aed7edf48f1b50e2b0e3658b261778\",\"urls\":[\"bzzr://8bba5f8eaae0e989a9899ca07a9df296e28ba67459aad85235112e777ec69fe2\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/BaseOverdrawManagement.sol\":{\"keccak256\":\"0x29dca32b0540208e6916d86e008cabd26717857c5ad6f27788a6461b054477b0\",\"urls\":[\"bzzr://067d7023ac80eb12e11a504b87a219aab2b99ee61ea7d325d2c95dc91c26919c\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/BasicAMBMediator.sol\":{\"keccak256\":\"0x817cdf39d46eed56fdf6fc124b7163d1dc296b8b02fbc0fd34ee1948d8816eab\",\"urls\":[\"bzzr://02cf31c071d2a58a929d0fa1dae4d647ae1ce881221695a0730b66f6098cfa4a\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/BasicTokenBridge.sol\":{\"keccak256\":\"0x0ad6a56603c8bc28ab384cbb7b51a6b4eb242264f23a0f0464224f77a85a19a5\",\"urls\":[\"bzzr://fdb04b2368b6ffab36560c9231b9a90ee1982eba8027d3f4a91e6c964bef5197\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/ChooseReceiverHelper.sol\":{\"keccak256\":\"0xed188cae33d353543654b085650def4bf4be21304b0380fa683fbe06dbc4d3ce\",\"urls\":[\"bzzr://6c4aa7785721d11c9c8c03400e24e0049de3359b9deb55a6d8db6443183b974c\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/Claimable.sol\":{\"keccak256\":\"0xfe020277ad01d6e42674c0906fb33eeec54964e928208fdd7fc0ab68c2967773\",\"urls\":[\"bzzr://2d1d90cdfb9e0917f83bdfcc4f8398e3f035c4c62da4e79e81ad4c4252b1d979\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/DecimalShiftBridge.sol\":{\"keccak256\":\"0x9ebdcd28b12565bdb6e87b631c1aa6d7927d3f4298e368acfdd86bbf71fc2a83\",\"urls\":[\"bzzr://9f2f39db4f4778334408a2a2baa2d97b517a76929c2f7ebb1efe0cb4c77cfd23\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/ERC677Storage.sol\":{\"keccak256\":\"0x4c7b3459083f9d776c523846d2ca45a1066c5295b16acba13877f600797f625f\",\"urls\":[\"bzzr://4b738fb49963baf92c55d2a15a9fdb90a731c3a549ec2f331aef1e7e1cdf5317\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/Initializable.sol\":{\"keccak256\":\"0xed94c4128ada87141d6c640d5bf4d0a5227cd68fad16be6304a121847fe6494f\",\"urls\":[\"bzzr://2dfbb776af73c3cfe3b6d3dd4545dc7cc55694d4636c0d1043d46ace7dd42ab2\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/Ownable.sol\":{\"keccak256\":\"0xa61d31759a177fc38a5dcf34387cfc9870bbe64f946c14c380d13ddcd9aa6113\",\"urls\":[\"bzzr://7d8b5611ce1d97b28de5d10d5569fe2bd710e851f55b02d628b7a881ca9a9b40\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/ReentrancyGuard.sol\":{\"keccak256\":\"0x8eeae0c6814a239234e23b741950407be18bf86ccca5b1e2a44f53c1c2e678eb\",\"urls\":[\"bzzr://c189a949f46ce94256fc611ef07a53648519f61d121b95466f4cb4a2ab397465\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/Sacrifice.sol\":{\"keccak256\":\"0x2c8f9b5e39d33552cd16d3fdd84e58f2138042166ae9b351e97fe674f7e3f337\",\"urls\":[\"bzzr://a438edd320ea1fa8141d54002897c3a50cf6cb13b07b4088d01ffb099bb9e859\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/TokenBridgeMediator.sol\":{\"keccak256\":\"0x7bcf6f7e97e77b19dc9c91ebc02a8e7b8210fc450338a5a549b4af0ff76b0254\",\"urls\":[\"bzzr://db9f6e263190a5b0681ed7e52308e112d218bb5881cb2a391da164c126a61f6e\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/TransferInfoStorage.sol\":{\"keccak256\":\"0xf284bf49c93b62b92ba14c5eb87c1f94b4893bf7c65499f254dd6a03363071f2\",\"urls\":[\"bzzr://6cdf94e9fd04016ed2a8d3ada76e413c0aefa1d2346259a4a4c60f5eff3dde1b\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/Upgradeable.sol\":{\"keccak256\":\"0xbfbec6c479103b324cc0c2ab115b3d9d3226abdfa0ab19fccbfdf223a38a6511\",\"urls\":[\"bzzr://fcde383760b302df8f3a6bf5bb8371d1138c2c7bf6d15e1abf972180c181af8b\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/VersionableBridge.sol\":{\"keccak256\":\"0x20e13a4da2277be92631581b29607b525a6d8a1868d5f0bf43d970408e9b2bc0\",\"urls\":[\"bzzr://a8c1f803d409d79319f4907066a1e38a811f758142243bef553ae9ad2516814d\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/amb_erc677_to_erc677/BasicAMBErc677ToErc677.sol\":{\"keccak256\":\"0x91e67c030b00e168dea1c80324f2d7474ad378489b08d338d51c610fb6d2a40f\",\"urls\":[\"bzzr://0b48150dc67d7884b4516f8b89a999c274de9828d6749952cf3ab5da5049c49d\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/amb_erc677_to_erc677/HomeAMBErc677ToErc677.sol\":{\"keccak256\":\"0xfd2d98039e81e6903ee258e28233c1012beffb167cbd4b259584b15a9bf6e94e\",\"urls\":[\"bzzr://9e6f81ecc0c78d7768737bb0f435c4301fd56c5dfa3b04b78300c376d20da6f0\"]},\"openzeppelin-solidity/contracts/AddressUtils.sol\":{\"keccak256\":\"0x5ed3dc711dbb34917afff3c753adf3b0580514d1339cfedaa5a73645d8ac9b56\",\"urls\":[\"bzzr://d597eeb695a3d64766453239e973ddd65994c258ab8d5cab0d90103033ce85fc\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xa1c5e1d9ebbf654d332ca8e7a5c04a6a6a9d142eeaab3b988c2c909c81a62bef\",\"urls\":[\"bzzr://d062fb4a1b6de1f036ee0e73364a2532c4757eb68e95dd8c5cbb2d17b8732c6a\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd5feb2643c87547e65b8d6f1af02539b1dee1ad53046945e237eaa8ba649c93b\",\"urls\":[\"bzzr://69768215a261b30a376a901b83b1e6716e3916c9fd791ac67450c283e62212ad\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol\":{\"keccak256\":\"0x516a17244073b518096ced7c8c94924cb29746ef0a4b6cc6cde125ac0406a419\",\"urls\":[\"bzzr://7addb1b5cad767651b9bcd688ba5b08769c1f3b70a470e34752a7717756d090d\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061338c806100206000396000f3006080604052600436106101c95763ffffffff60e060020a60003504166301e4f53a81146101ce5780630950d515146101f45780630b26cf661461020c57806318d8f9c91461022d5780632bd0bb051461025e578063392e53cd146102885780633dd95d1b146102b15780633e6968b6146102c9578063437764df146102de57806343b37dd3146103285780634fb3fef71461033d578063593399821461035557806367eeba0c1461036d57806369ffa08a146103825780636e5d6bea146103a9578063871c0760146103ca578063879ce676146103df5780638aa1949a146103f75780638b6c03541461040c5780638da5cb5b1461043057806395e54a17146104455780639a4a43951461045a5780639cb7595a14610472578063a0189345146104b3578063a2a6ca27146104c8578063a4c0ed36146104e0578063a7444c0d14610511578063b20d30a914610531578063be3b625b14610549578063c0b0d0221461055e578063c6f6f216146105f3578063cd5965831461060b578063dae5f0fd14610620578063df25f3f014610635578063ea9f49681461064a578063f20151e114610662578063f2fde38b1461067a578063f3b837911461069b578063f968adbe146106b3575b600080fd5b3480156101da57600080fd5b506101f2600160a060020a03600435166024356106c8565b005b34801561020057600080fd5b506101f2600435610814565b34801561021857600080fd5b506101f2600160a060020a03600435166108e3565b34801561023957600080fd5b5061024261090b565b60408051600160a060020a039092168252519081900360200190f35b34801561026a57600080fd5b5061027660043561091a565b60408051918252519081900360200190f35b34801561029457600080fd5b5061029d6109d7565b604080519115158252519081900360200190f35b3480156102bd57600080fd5b506101f2600435610a28565b3480156102d557600080fd5b50610276610ae8565b3480156102ea57600080fd5b506102f3610af1565b604080517fffffffff000000000000000000000000000000000000000000000000000000009092168252519081900360200190f35b34801561033457600080fd5b50610276610b15565b34801561034957600080fd5b50610276600435610b63565b34801561036157600080fd5b5061029d600435610bde565b34801561037957600080fd5b50610276610ca7565b34801561038e57600080fd5b506101f2600160a060020a0360043581169060243516610cf5565b3480156103b557600080fd5b506101f2600160a060020a0360043516610d81565b3480156103d657600080fd5b50610242610da6565b3480156103eb57600080fd5b5061029d600435610dfd565b34801561040357600080fd5b50610276610e47565b34801561041857600080fd5b506101f2600160a060020a0360043516602435610e95565b34801561043c57600080fd5b50610242610f15565b34801561045157600080fd5b50610276610f6c565b34801561046657600080fd5b506101f2600435610fc6565b34801561047e57600080fd5b50610487611317565b6040805167ffffffffffffffff9485168152928416602084015292168183015290519081900360600190f35b3480156104bf57600080fd5b50610276611322565b3480156104d457600080fd5b506101f2600435611370565b3480156104ec57600080fd5b5061029d60048035600160a060020a031690602480359160443591820191013561140c565b34801561051d57600080fd5b506101f260043560243515156044356114a9565b34801561053d57600080fd5b506101f260043561160c565b34801561055557600080fd5b506102766116cc565b34801561056a57600080fd5b5060408051606081810190925261029d91600160a060020a03600480358216936024358316936044359093169236929160c49160649060039083908390808284375050604080518082018252949796958181019594509250600291508390839080828437509396505083359450505060208201359160400135600160a060020a0316905061171a565b3480156105ff57600080fd5b506101f26004356118e6565b34801561061757600080fd5b5061024261197e565b34801561062c57600080fd5b506102766119d5565b34801561064157600080fd5b50610276611a23565b34801561065657600080fd5b5061029d600435611a71565b34801561066e57600080fd5b506101f2600435611abc565b34801561068657600080fd5b506101f2600160a060020a0360043516611b38565b3480156106a757600080fd5b506101f2600435611b5d565b3480156106bf57600080fd5b50610276611b82565b6000806106d3611bd0565b156106dd57600080fd5b6106e561090b565b91503090506106f383611a71565b15156106fe57600080fd5b61070f610709610ae8565b84611c21565b6107196001611cea565b604080517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152600160a060020a038381166024830152604482018690529151918416916323b872dd916064808201926020929091908290030181600087803b15801561078b57600080fd5b505af115801561079f573d6000803e3d6000fd5b505050506040513d60208110156107b557600080fd5b506107c290506000611cea565b61080e823385876040516020018082600160a060020a0316600160a060020a03166c01000000000000000000000000028152601401915050604051602081830303815290604052611d45565b50505050565b60008061081f61197e565b600160a060020a0316331461083357600080fd5b61083b610da6565b600160a060020a031661084c611dc8565b600160a060020a03161461085f57600080fd5b61086883610bde565b1561087257600080fd5b61087b83611e40565b915061088683611f0f565b905061089183611f92565b61089b8282612064565b60408051600160a060020a038416815260208101839052815185927f06297b0797e3363e96e454edd4ab62862051bf559a7a431ce09415306771d133928290030190a2505050565b6108eb610f15565b600160a060020a031633146108ff57600080fd5b610908816120f8565b50565b6000610915612183565b905090565b60008060008360405160200180807f746f74616c5370656e74506572446179000000000000000000000000000000008152506010018281526020019150506040516020818303038152906040526040518082805190602001908083835b602083106109965780518252601f199092019160209182019101610977565b51815160209384036101000a600019018019909216911617905260408051929094018290039091208652850195909552929092016000205495945050505050565b7f0a6f646cd611241d8073675e00d1a1ff700fbf1b53fcf473de56d1e6e4b714ba60005260046020527f078d888f9b66f3f8bfa10909e31f1e16240db73449f0500afdbbe3a70da457cc5460ff1690565b610a30610f15565b600160a060020a03163314610a4457600080fd5b610a4c610e47565b811180610a57575080155b1515610a6257600080fd5b7f21dbcab260e413c20dc13c28b7db95e2b423d1135f42bb8b7d5214a92270d237600090815260209081527fadd938dbd083a16bae12238cd914fca0afc7a30edb55b1cd5c7f1823f1b0e4218290556040805183815290517f9bebf928b90863f24cc31f726a3a7545efd409f1dcf552301b1ee3710da70d3b929181900390910190a150565b62015180420490565b7f76595b560000000000000000000000000000000000000000000000000000000090565b7f21dbcab260e413c20dc13c28b7db95e2b423d1135f42bb8b7d5214a92270d23760009081526020527fadd938dbd083a16bae12238cd914fca0afc7a30edb55b1cd5c7f1823f1b0e4215490565b60008060008360405160200180807f746f74616c457865637574656450657244617900000000000000000000000000815250601301828152602001915050604051602081830303815290604052604051808280519060200190808383602083106109965780518252601f199092019160209182019101610977565b6000600460008360405160200180807f6d65737361676546697865640000000000000000000000000000000000000000815250600c0182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b60208310610c635780518252601f199092019160209182019101610c44565b51815160209384036101000a600019018019909216911617905260408051929094018290039091208652850195909552929092016000205460ff1695945050505050565b7f4a6a899679f26b73530d8cf1001e83b6f7702e04b6fdb98f3c62dc7e47e041a560009081526020527f1ab29a5cca988aee50edccdd61c5bcaa7ad4b29a03b7ee50f298ceccfe14cc4e5490565b30600160a060020a0316636fde82026040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015610d3357600080fd5b505af1158015610d47573d6000803e3d6000fd5b505050506040513d6020811015610d5d57600080fd5b5051600160a060020a03163314610d7357600080fd5b610d7d82826121da565b5050565b610d89610f15565b600160a060020a03163314610d9d57600080fd5b6109088161221d565b7f98aa806e31e94a687a31c65769cb99670064dd7f5a87526da075c5fb4eab988060005260026020527f0c1206883be66049a02d4937078367c00b3d71dd1a9465df969363c6ddeac96d54600160a060020a031690565b600080610e2083610e14610e0f610ae8565b610b63565b9063ffffffff61229416565b905080610e2b610b15565b10158015610e405750610e3c610e47565b8311155b9392505050565b7fc0ed44c192c86d1cc1ba51340b032c2766b4a2b0041031de13c46dd7104888d560009081526020527ff8e983ee86e5e377e9e34c9131b266382c3f04113d20de077f9e12663c7a646b5490565b610e9d61197e565b600160a060020a03163314610eb157600080fd5b610eb9610da6565b600160a060020a0316610eca611dc8565b600160a060020a031614610edd57600080fd5b610ee681610dfd565b15610f0b57610efc610ef6610ae8565b826122a7565b610f06828261232d565b610d7d565b610d7d8282612421565b7f02016836a56b71f0d02689e69e326f4f4c1b9057164ef592671cf0d37c8040c060005260026020527fb7802e97e87ef2842a6cce7da7ffaeaedaa2f61a6a7870b23d9d01fc9b73712e54600160a060020a031690565b6000806000806000610f7c611b82565b9350610f86610ca7565b9250610f98610f93610ae8565b61091a565b9150818311610fa8576000610fac565b8183035b9050808410610fbb5780610fbd565b835b94505050505090565b60006060610fd261197e565b600160a060020a031663cb08a10c846040518263ffffffff1660e060020a028152600401808260001916600019168152602001915050602060405180830381600087803b15801561102257600080fd5b505af1158015611036573d6000803e3d6000fd5b505050506040513d602081101561104c57600080fd5b50511561105857600080fd5b3061106161197e565b600160a060020a0316633f9a8e7e856040518263ffffffff1660e060020a028152600401808260001916600019168152602001915050602060405180830381600087803b1580156110b157600080fd5b505af11580156110c5573d6000803e3d6000fd5b505050506040513d60208110156110db57600080fd5b5051600160a060020a0316146110f057600080fd5b6110f8610da6565b600160a060020a031661110961197e565b600160a060020a0316634a610b04856040518263ffffffff1660e060020a028152600401808260001916600019168152602001915050602060405180830381600087803b15801561115957600080fd5b505af115801561116d573d6000803e3d6000fd5b505050506040513d602081101561118357600080fd5b5051600160a060020a03161461119857600080fd5b50506040805160248082018490528251808303909101815260449091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f0950d515000000000000000000000000000000000000000000000000000000009081179091529061120c61197e565b600160a060020a031663dc8601b3611222610da6565b8361122b6116cc565b6040518463ffffffff1660e060020a0281526004018084600160a060020a0316600160a060020a0316815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b83811015611298578181015183820152602001611280565b50505050905090810190601f1680156112c55780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b1580156112e657600080fd5b505af11580156112fa573d6000803e3d6000fd5b505050506040513d602081101561131057600080fd5b5050505050565b600160036000909192565b7f145286dc85799b6fb9fe322391ba2d95683077b2adf34dd576dedc437e537ba760009081526020527fba10c7a68bf463c41368d64adcf7df23c0de931ea3b09f061e2dfec302fef95f5490565b611378610f15565b600160a060020a0316331461138c57600080fd5b6000811180156113a2575061139f610ca7565b81105b80156113b457506113b1611b82565b81105b15156113bf57600080fd5b7fbbb088c505d18e049d114c7c91f11724e69c55ad6c5397e2b929e68b41fa05d160009081526020527f8df5c48c6b6e11d97548adc824ba0c99103ec09830fa5d53a179984085e6eaa055565b60008061141761090b565b905033600160a060020a0382161461142e57600080fd5b611436611bd0565b15156114615761144585611a71565b151561145057600080fd5b61146161145b610ae8565b86611c21565b61149d81878787878080601f01602080910402602001604051908101604052809392919081815260200183838082843750611d45945050505050565b50600195945050505050565b600080600030600160a060020a0316636fde82026040518163ffffffff1660e060020a028152600401602060405180830381600087803b1580156114ec57600080fd5b505af1158015611500573d6000803e3d6000fd5b505050506040513d602081101561151657600080fd5b5051600160a060020a0316331461152c57600080fd5b611535866124c2565b9093509150600160a060020a038316158015906115525750600082115b801561155e5750838210155b151561156957600080fd5b61158961158485611578611322565b9063ffffffff61264916565b61265b565b611599828563ffffffff61264916565b90506115a581876126a8565b6040805185815260208101839052815188927f5bcec6564fe8d2cbb4e4eb8237510ceb6b291a5c2ee2e429948d25e9c924c1fa928290030190a28415611604576115ed611b82565b8411156115f957600080fd5b61160483848661272a565b505050505050565b611614610f15565b600160a060020a0316331461162857600080fd5b611630611b82565b81118061163b575080155b151561164657600080fd5b7f4a6a899679f26b73530d8cf1001e83b6f7702e04b6fdb98f3c62dc7e47e041a5600090815260209081527f1ab29a5cca988aee50edccdd61c5bcaa7ad4b29a03b7ee50f298ceccfe14cc4e8290556040805183815290517fad4123ae17c414d9c6d2fec478b402e6b01856cc250fd01fbfd252fda0089d3c929181900390910190a150565b7f2dfd6c9f781bb6bbb5369c114e949b69ebb440ef3d4dd6b2836225eb1dc3a2be60009081526020527f2de0d2cdc19d356cb53b5984f91bfd3b31fe0c678a0d190a6db39274bb34753f5490565b60408051600481526024810182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f6fde8202000000000000000000000000000000000000000000000000000000001781529151815160009330939291829190808383895b8381101561179b578181015183820152602001611783565b50505050905090810190601f1680156117c85780820380516001836020036101000a031916815260200191505b509150506000604051808303816000865af1915050158061185a575030600160a060020a0316636fde82026040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561182257600080fd5b505af1158015611836573d6000803e3d6000fd5b505050506040513d602081101561184c57600080fd5b5051600160a060020a031633145b8061186457503330145b151561186f57600080fd5b6118776109d7565b1561188157600080fd5b61188a896120f8565b6118938861221d565b61189c876128c9565b6118a586612954565b6118ae85612ab1565b6118b784612b86565b6118c083612be7565b6118c982612c50565b6118d1612d27565b6118d96109d7565b9998505050505050505050565b6118ee610f15565b600160a060020a0316331461190257600080fd5b8015806119265750611912611a23565b811180156119265750611923610ca7565b81105b151561193157600080fd5b7f0f8803acad17c63ee38bf2de71e1888bc7a079a6f73658e274b08018bea4e29c60009081526020527f9de0f81379b4d8e60fe509315d071b56e7b732abaf193e74e0d15808b0951d0955565b7f811bbb11e8899da471f0e69a3ed55090fc90215227fc5fb1cb0d6e962ea7b74f60005260026020527fb4ed64697d3ef8518241966f7c6f28b0d72f20f51198717d198d2d55076c593d54600160a060020a031690565b7f1e8ecaafaddea96ed9ac6d2642dcdfe1bebe58a930b1085842d8fc122b371ee560009081526020527fd5c78dd9468716ca9bb96be25d56436811b20aab3523a9904b12deef1cab239d5490565b7fbbb088c505d18e049d114c7c91f11724e69c55ad6c5397e2b929e68b41fa05d160009081526020527f8df5c48c6b6e11d97548adc824ba0c99103ec09830fa5d53a179984085e6eaa05490565b600080611a8383610e14610f93610ae8565b905080611a8e610ca7565b10158015611aa35750611a9f611b82565b8311155b8015610e405750611ab2611a23565b9092101592915050565b611ac4610f15565b600160a060020a03163314611ad857600080fd5b611ae0610b15565b8110611aeb57600080fd5b7fc0ed44c192c86d1cc1ba51340b032c2766b4a2b0041031de13c46dd7104888d560009081526020527ff8e983ee86e5e377e9e34c9131b266382c3f04113d20de077f9e12663c7a646b55565b611b40610f15565b600160a060020a03163314611b5457600080fd5b61090881612c50565b611b65610f15565b600160a060020a03163314611b7957600080fd5b61090881612b86565b7f0f8803acad17c63ee38bf2de71e1888bc7a079a6f73658e274b08018bea4e29c60009081526020527f9de0f81379b4d8e60fe509315d071b56e7b732abaf193e74e0d15808b0951d095490565b7f6168652c307c1e813ca11cfb3a601f1cf3b22452021a5052d8b05f1f1f8a3e9260005260046020527fcb8d022f2163402334a4962e3279c5def3417d3d8dab9e27ba26e81e3f8337845460ff1690565b611c2e81610e148461091a565b6000808460405160200180807f746f74616c5370656e74506572446179000000000000000000000000000000008152506010018281526020019150506040516020818303038152906040526040518082805190602001908083835b60208310611ca85780518252601f199092019160209182019101611c89565b51815160209384036101000a60001901801990921691161790526040805192909401829003909120865285019590955292909201600020939093555050505050565b7f6168652c307c1e813ca11cfb3a601f1cf3b22452021a5052d8b05f1f1f8a3e9260005260046020527fcb8d022f2163402334a4962e3279c5def3417d3d8dab9e27ba26e81e3f833784805460ff1916911515919091179055565b611d4d611bd0565b151561080e5783600160a060020a03166342966c68836040518263ffffffff1660e060020a02815260040180828152602001915050600060405180830381600087803b158015611d9c57600080fd5b505af1158015611db0573d6000803e3d6000fd5b5050505061080e83611dc28584612d7e565b8461272a565b6000611dd261197e565b600160a060020a031663d67bdd256040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015611e0f57600080fd5b505af1158015611e23573d6000803e3d6000fd5b505050506040513d6020811015611e3957600080fd5b5051905090565b6000600260008360405160200180807f6d657373616765526563697069656e740000000000000000000000000000000081525060100182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b60208310611ec55780518252601f199092019160209182019101611ea6565b51815160209384036101000a6000190180199092169116179052604080519290940182900390912086528501959095529290920160002054600160a060020a031695945050505050565b60008060008360405160200180807f6d65737361676556616c75650000000000000000000000000000000000000000815250600c018260001916600019168152602001915050604051602081830303815290604052604051808280519060200190808383602083106109965780518252601f199092019160209182019101610977565b6001600460008360405160200180807f6d65737361676546697865640000000000000000000000000000000000000000815250600c0182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b602083106120175780518252601f199092019160209182019101611ff8565b51815160209384036101000a60001901801990921691161790526040805192909401829003909120865285019590955292909201600020805460ff19169415159490941790935550505050565b61206c61090b565b600160a060020a03166340c10f1983836040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b1580156120ce57600080fd5b505af11580156120e2573d6000803e3d6000fd5b505050506040513d602081101561080e57600080fd5b61210181612dd8565b151561210c57600080fd5b7f811bbb11e8899da471f0e69a3ed55090fc90215227fc5fb1cb0d6e962ea7b74f60005260026020527fb4ed64697d3ef8518241966f7c6f28b0d72f20f51198717d198d2d55076c593d805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b7fa8b0ade3e2b734f043ce298aca4cc8d19d74270223f34531d0988b7d00cba21d60005260026020527f603cd9dcbfa185d5c37504f4c8b3f16117ed744fba48d08b7aad44a162af1c9354600160a060020a031690565b80600160a060020a03811615156121f057600080fd5b600160a060020a038316151561220e5761220982612de0565b612218565b6122188383612dec565b505050565b7f98aa806e31e94a687a31c65769cb99670064dd7f5a87526da075c5fb4eab988060005260026020527f0c1206883be66049a02d4937078367c00b3d71dd1a9465df969363c6ddeac96d805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b818101828110156122a157fe5b92915050565b6122b481610e1484610b63565b6000808460405160200180807f746f74616c45786563757465645065724461790000000000000000000000000081525060130182815260200191505060405160208183030381529060405260405180828051906020019080838360208310611ca85780518252601f199092019160209182019101611c89565b60008061233983612e99565b9150612343612eac565b905061234d61090b565b600160a060020a03166340c10f1985846040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b1580156123af57600080fd5b505af11580156123c3573d6000803e3d6000fd5b505050506040513d60208110156123d957600080fd5b50506040805183815290518291600160a060020a038716917f2f9a6098d4503a127779ba975f5f6b04f842362b1809f346989e9abc0b4dedb69181900360200190a350505050565b600080600061242e612eac565b9250612439836124c2565b9092509050600160a060020a038216158015612453575080155b151561245e57600080fd5b61246d61158485610e14611322565b612478858585612ef3565b60408051600160a060020a038716815260208101869052815185927f3344bbb992063ed4b833dabd5d5e55fc18df085bb96654e83aafbfe22e4116ff928290030190a25050505050565b600080600260008460405160200180807f74784f75744f664c696d6974526563697069656e74000000000000000000000081525060150182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b602083106125485780518252601f199092019160209182019101612529565b51815160209384036101000a600019018019909216911617905260408051929094018290039091208652858101969096525092830160009081205484517f74784f75744f664c696d697456616c75650000000000000000000000000000008188015260318082018b9052865180830390910181526051909101958690528051600160a060020a0390921698509195869592945091925082918401908083835b602083106126065780518252601f1990920191602091820191016125e7565b51815160209384036101000a6000190180199092169116179052604080519290940182900390912086528501959095529290920160002054949694955050505050565b60008282111561265557fe5b50900390565b7f145286dc85799b6fb9fe322391ba2d95683077b2adf34dd576dedc437e537ba760009081526020527fba10c7a68bf463c41368d64adcf7df23c0de931ea3b09f061e2dfec302fef95f55565b816000808360405160200180807f74784f75744f664c696d697456616c7565000000000000000000000000000000815250601101826000191660001916815260200191505060405160208183030381529060405260405180828051906020019080838360208310611ca85780518252601f199092019160209182019101611c89565b60408051600160a060020a038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f8b6c0354000000000000000000000000000000000000000000000000000000009081179091529060006127ad61197e565b600160a060020a031663dc8601b36127c3610da6565b846127cc6116cc565b6040518463ffffffff1660e060020a0281526004018084600160a060020a0316600160a060020a0316815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b83811015612839578181015183820152602001612821565b50505050905090810190601f1680156128665780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b15801561288757600080fd5b505af115801561289b573d6000803e3d6000fd5b505050506040513d60208110156128b157600080fd5b505190506128bf8185612fe9565b611604818761306b565b6128d281612dd8565b15156128dd57600080fd5b7fa8b0ade3e2b734f043ce298aca4cc8d19d74270223f34531d0988b7d00cba21d60005260026020527f603cd9dcbfa185d5c37504f4c8b3f16117ed744fba48d08b7aad44a162af1c93805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6040810151600010801561296f575060408101516020820151115b801561297f575060208101518151115b151561298a57600080fd5b80517f4a6a899679f26b73530d8cf1001e83b6f7702e04b6fdb98f3c62dc7e47e041a5600090815260208181527f1ab29a5cca988aee50edccdd61c5bcaa7ad4b29a03b7ee50f298ceccfe14cc4e92909255908201517f0f8803acad17c63ee38bf2de71e1888bc7a079a6f73658e274b08018bea4e29c82527f9de0f81379b4d8e60fe509315d071b56e7b732abaf193e74e0d15808b0951d095560408201517fbbb088c505d18e049d114c7c91f11724e69c55ad6c5397e2b929e68b41fa05d182527f8df5c48c6b6e11d97548adc824ba0c99103ec09830fa5d53a179984085e6eaa0557fad4123ae17c414d9c6d2fec478b402e6b01856cc250fd01fbfd252fda0089d3c9082905b60200201516040518082815260200191505060405180910390a150565b8051602082015110612ac257600080fd5b80517f21dbcab260e413c20dc13c28b7db95e2b423d1135f42bb8b7d5214a92270d237600090815260208181527fadd938dbd083a16bae12238cd914fca0afc7a30edb55b1cd5c7f1823f1b0e42192909255908201517fc0ed44c192c86d1cc1ba51340b032c2766b4a2b0041031de13c46dd7104888d582527ff8e983ee86e5e377e9e34c9131b266382c3f04113d20de077f9e12663c7a646b557f9bebf928b90863f24cc31f726a3a7545efd409f1dcf552301b1ee3710da70d3b908290612a94565b612b8e613159565b811115612b9a57600080fd5b7f2dfd6c9f781bb6bbb5369c114e949b69ebb440ef3d4dd6b2836225eb1dc3a2be60009081526020527f2de0d2cdc19d356cb53b5984f91bfd3b31fe0c678a0d190a6db39274bb34753f55565b604c1981138015612bf85750604d81125b1515612c0357600080fd5b7f1e8ecaafaddea96ed9ac6d2642dcdfe1bebe58a930b1085842d8fc122b371ee560009081526020527fd5c78dd9468716ca9bb96be25d56436811b20aab3523a9904b12deef1cab239d55565b600160a060020a0381161515612c6557600080fd5b7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0612c8e610f15565b60408051600160a060020a03928316815291841660208301528051918290030190a17f02016836a56b71f0d02689e69e326f4f4c1b9057164ef592671cf0d37c8040c060005260026020527fb7802e97e87ef2842a6cce7da7ffaeaedaa2f61a6a7870b23d9d01fc9b73712e805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b7f0a6f646cd611241d8073675e00d1a1ff700fbf1b53fcf473de56d1e6e4b714ba60005260046020527f078d888f9b66f3f8bfa10909e31f1e16240db73449f0500afdbbe3a70da457cc805460ff19166001179055565b80518290600010156122a1578151601414612d9857600080fd5b612da1826131a0565b9050600160a060020a0381161515612db857600080fd5b612dc06131a7565b600160a060020a03828116911614156122a157600080fd5b6000903b1190565b3031610d7d82826131b1565b604080517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290518391600091600160a060020a038416916370a0823191602480830192602092919082900301818787803b158015612e5157600080fd5b505af1158015612e65573d6000803e3d6000fd5b505050506040513d6020811015612e7b57600080fd5b5051905061080e600160a060020a038516848363ffffffff61321216565b60006122a182612ea76119d5565b6132a7565b6000612eb661197e565b600160a060020a031663669f618b6040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015611e0f57600080fd5b82600260008360405160200180807f74784f75744f664c696d6974526563697069656e74000000000000000000000081525060150182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b60208310612f775780518252601f199092019160209182019101612f58565b51815160209384036101000a60001901801990921691161790526040805192909401829003909120865285019590955292909201600020805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039590951694909417909355506122189150839050826126a8565b806000808460405160200180807f6d65737361676556616c75650000000000000000000000000000000000000000815250600c01826000191660001916815260200191505060405160208183030381529060405260405180828051906020019080838360208310611ca85780518252601f199092019160209182019101611c89565b80600260008460405160200180807f6d657373616765526563697069656e740000000000000000000000000000000081525060100182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b602083106130ef5780518252601f1990920191602091820191016130d0565b51815160209384036101000a60001901801990921691161790526040805192909401829003909120865285019590955292909201600020805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0395909516949094179093555050505050565b600061316361197e565b600160a060020a031663e5789d036040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015611e0f57600080fd5b6014015190565b6000610915610da6565b604051600160a060020a0383169082156108fc029083906000818181858888f193505050501515610d7d5780826131e6613330565b600160a060020a039091168152604051908190036020019082f080158015611310573d6000803e3d6000fd5b82600160a060020a031663a9059cbb83836040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050600060405180830381600087803b15801561327557600080fd5b505af1158015613289573d6000803e3d6000fd5b505050503d156122185760206000803e600051151561221857600080fd5b60008115156132b75750816122a1565b60008213156132db576132d483600a84900a63ffffffff6132f216565b90506122a1565b610e40836000849003600a0a63ffffffff61331b16565b6000821515613303575060006122a1565b5081810281838281151561331357fe5b04146122a157fe5b6000818381151561332857fe5b049392505050565b604051602180613340833901905600608060405260405160208060218339810160405251600160a060020a038116ff00a165627a7a72305820c2c35107b21c6a198eaa18873275d7cd6e8f723c84bb4042f94ad6d5579e45050029",
  "deployedBytecode": "0x6080604052600436106101c95763ffffffff60e060020a60003504166301e4f53a81146101ce5780630950d515146101f45780630b26cf661461020c57806318d8f9c91461022d5780632bd0bb051461025e578063392e53cd146102885780633dd95d1b146102b15780633e6968b6146102c9578063437764df146102de57806343b37dd3146103285780634fb3fef71461033d578063593399821461035557806367eeba0c1461036d57806369ffa08a146103825780636e5d6bea146103a9578063871c0760146103ca578063879ce676146103df5780638aa1949a146103f75780638b6c03541461040c5780638da5cb5b1461043057806395e54a17146104455780639a4a43951461045a5780639cb7595a14610472578063a0189345146104b3578063a2a6ca27146104c8578063a4c0ed36146104e0578063a7444c0d14610511578063b20d30a914610531578063be3b625b14610549578063c0b0d0221461055e578063c6f6f216146105f3578063cd5965831461060b578063dae5f0fd14610620578063df25f3f014610635578063ea9f49681461064a578063f20151e114610662578063f2fde38b1461067a578063f3b837911461069b578063f968adbe146106b3575b600080fd5b3480156101da57600080fd5b506101f2600160a060020a03600435166024356106c8565b005b34801561020057600080fd5b506101f2600435610814565b34801561021857600080fd5b506101f2600160a060020a03600435166108e3565b34801561023957600080fd5b5061024261090b565b60408051600160a060020a039092168252519081900360200190f35b34801561026a57600080fd5b5061027660043561091a565b60408051918252519081900360200190f35b34801561029457600080fd5b5061029d6109d7565b604080519115158252519081900360200190f35b3480156102bd57600080fd5b506101f2600435610a28565b3480156102d557600080fd5b50610276610ae8565b3480156102ea57600080fd5b506102f3610af1565b604080517fffffffff000000000000000000000000000000000000000000000000000000009092168252519081900360200190f35b34801561033457600080fd5b50610276610b15565b34801561034957600080fd5b50610276600435610b63565b34801561036157600080fd5b5061029d600435610bde565b34801561037957600080fd5b50610276610ca7565b34801561038e57600080fd5b506101f2600160a060020a0360043581169060243516610cf5565b3480156103b557600080fd5b506101f2600160a060020a0360043516610d81565b3480156103d657600080fd5b50610242610da6565b3480156103eb57600080fd5b5061029d600435610dfd565b34801561040357600080fd5b50610276610e47565b34801561041857600080fd5b506101f2600160a060020a0360043516602435610e95565b34801561043c57600080fd5b50610242610f15565b34801561045157600080fd5b50610276610f6c565b34801561046657600080fd5b506101f2600435610fc6565b34801561047e57600080fd5b50610487611317565b6040805167ffffffffffffffff9485168152928416602084015292168183015290519081900360600190f35b3480156104bf57600080fd5b50610276611322565b3480156104d457600080fd5b506101f2600435611370565b3480156104ec57600080fd5b5061029d60048035600160a060020a031690602480359160443591820191013561140c565b34801561051d57600080fd5b506101f260043560243515156044356114a9565b34801561053d57600080fd5b506101f260043561160c565b34801561055557600080fd5b506102766116cc565b34801561056a57600080fd5b5060408051606081810190925261029d91600160a060020a03600480358216936024358316936044359093169236929160c49160649060039083908390808284375050604080518082018252949796958181019594509250600291508390839080828437509396505083359450505060208201359160400135600160a060020a0316905061171a565b3480156105ff57600080fd5b506101f26004356118e6565b34801561061757600080fd5b5061024261197e565b34801561062c57600080fd5b506102766119d5565b34801561064157600080fd5b50610276611a23565b34801561065657600080fd5b5061029d600435611a71565b34801561066e57600080fd5b506101f2600435611abc565b34801561068657600080fd5b506101f2600160a060020a0360043516611b38565b3480156106a757600080fd5b506101f2600435611b5d565b3480156106bf57600080fd5b50610276611b82565b6000806106d3611bd0565b156106dd57600080fd5b6106e561090b565b91503090506106f383611a71565b15156106fe57600080fd5b61070f610709610ae8565b84611c21565b6107196001611cea565b604080517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152600160a060020a038381166024830152604482018690529151918416916323b872dd916064808201926020929091908290030181600087803b15801561078b57600080fd5b505af115801561079f573d6000803e3d6000fd5b505050506040513d60208110156107b557600080fd5b506107c290506000611cea565b61080e823385876040516020018082600160a060020a0316600160a060020a03166c01000000000000000000000000028152601401915050604051602081830303815290604052611d45565b50505050565b60008061081f61197e565b600160a060020a0316331461083357600080fd5b61083b610da6565b600160a060020a031661084c611dc8565b600160a060020a03161461085f57600080fd5b61086883610bde565b1561087257600080fd5b61087b83611e40565b915061088683611f0f565b905061089183611f92565b61089b8282612064565b60408051600160a060020a038416815260208101839052815185927f06297b0797e3363e96e454edd4ab62862051bf559a7a431ce09415306771d133928290030190a2505050565b6108eb610f15565b600160a060020a031633146108ff57600080fd5b610908816120f8565b50565b6000610915612183565b905090565b60008060008360405160200180807f746f74616c5370656e74506572446179000000000000000000000000000000008152506010018281526020019150506040516020818303038152906040526040518082805190602001908083835b602083106109965780518252601f199092019160209182019101610977565b51815160209384036101000a600019018019909216911617905260408051929094018290039091208652850195909552929092016000205495945050505050565b7f0a6f646cd611241d8073675e00d1a1ff700fbf1b53fcf473de56d1e6e4b714ba60005260046020527f078d888f9b66f3f8bfa10909e31f1e16240db73449f0500afdbbe3a70da457cc5460ff1690565b610a30610f15565b600160a060020a03163314610a4457600080fd5b610a4c610e47565b811180610a57575080155b1515610a6257600080fd5b7f21dbcab260e413c20dc13c28b7db95e2b423d1135f42bb8b7d5214a92270d237600090815260209081527fadd938dbd083a16bae12238cd914fca0afc7a30edb55b1cd5c7f1823f1b0e4218290556040805183815290517f9bebf928b90863f24cc31f726a3a7545efd409f1dcf552301b1ee3710da70d3b929181900390910190a150565b62015180420490565b7f76595b560000000000000000000000000000000000000000000000000000000090565b7f21dbcab260e413c20dc13c28b7db95e2b423d1135f42bb8b7d5214a92270d23760009081526020527fadd938dbd083a16bae12238cd914fca0afc7a30edb55b1cd5c7f1823f1b0e4215490565b60008060008360405160200180807f746f74616c457865637574656450657244617900000000000000000000000000815250601301828152602001915050604051602081830303815290604052604051808280519060200190808383602083106109965780518252601f199092019160209182019101610977565b6000600460008360405160200180807f6d65737361676546697865640000000000000000000000000000000000000000815250600c0182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b60208310610c635780518252601f199092019160209182019101610c44565b51815160209384036101000a600019018019909216911617905260408051929094018290039091208652850195909552929092016000205460ff1695945050505050565b7f4a6a899679f26b73530d8cf1001e83b6f7702e04b6fdb98f3c62dc7e47e041a560009081526020527f1ab29a5cca988aee50edccdd61c5bcaa7ad4b29a03b7ee50f298ceccfe14cc4e5490565b30600160a060020a0316636fde82026040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015610d3357600080fd5b505af1158015610d47573d6000803e3d6000fd5b505050506040513d6020811015610d5d57600080fd5b5051600160a060020a03163314610d7357600080fd5b610d7d82826121da565b5050565b610d89610f15565b600160a060020a03163314610d9d57600080fd5b6109088161221d565b7f98aa806e31e94a687a31c65769cb99670064dd7f5a87526da075c5fb4eab988060005260026020527f0c1206883be66049a02d4937078367c00b3d71dd1a9465df969363c6ddeac96d54600160a060020a031690565b600080610e2083610e14610e0f610ae8565b610b63565b9063ffffffff61229416565b905080610e2b610b15565b10158015610e405750610e3c610e47565b8311155b9392505050565b7fc0ed44c192c86d1cc1ba51340b032c2766b4a2b0041031de13c46dd7104888d560009081526020527ff8e983ee86e5e377e9e34c9131b266382c3f04113d20de077f9e12663c7a646b5490565b610e9d61197e565b600160a060020a03163314610eb157600080fd5b610eb9610da6565b600160a060020a0316610eca611dc8565b600160a060020a031614610edd57600080fd5b610ee681610dfd565b15610f0b57610efc610ef6610ae8565b826122a7565b610f06828261232d565b610d7d565b610d7d8282612421565b7f02016836a56b71f0d02689e69e326f4f4c1b9057164ef592671cf0d37c8040c060005260026020527fb7802e97e87ef2842a6cce7da7ffaeaedaa2f61a6a7870b23d9d01fc9b73712e54600160a060020a031690565b6000806000806000610f7c611b82565b9350610f86610ca7565b9250610f98610f93610ae8565b61091a565b9150818311610fa8576000610fac565b8183035b9050808410610fbb5780610fbd565b835b94505050505090565b60006060610fd261197e565b600160a060020a031663cb08a10c846040518263ffffffff1660e060020a028152600401808260001916600019168152602001915050602060405180830381600087803b15801561102257600080fd5b505af1158015611036573d6000803e3d6000fd5b505050506040513d602081101561104c57600080fd5b50511561105857600080fd5b3061106161197e565b600160a060020a0316633f9a8e7e856040518263ffffffff1660e060020a028152600401808260001916600019168152602001915050602060405180830381600087803b1580156110b157600080fd5b505af11580156110c5573d6000803e3d6000fd5b505050506040513d60208110156110db57600080fd5b5051600160a060020a0316146110f057600080fd5b6110f8610da6565b600160a060020a031661110961197e565b600160a060020a0316634a610b04856040518263ffffffff1660e060020a028152600401808260001916600019168152602001915050602060405180830381600087803b15801561115957600080fd5b505af115801561116d573d6000803e3d6000fd5b505050506040513d602081101561118357600080fd5b5051600160a060020a03161461119857600080fd5b50506040805160248082018490528251808303909101815260449091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f0950d515000000000000000000000000000000000000000000000000000000009081179091529061120c61197e565b600160a060020a031663dc8601b3611222610da6565b8361122b6116cc565b6040518463ffffffff1660e060020a0281526004018084600160a060020a0316600160a060020a0316815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b83811015611298578181015183820152602001611280565b50505050905090810190601f1680156112c55780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b1580156112e657600080fd5b505af11580156112fa573d6000803e3d6000fd5b505050506040513d602081101561131057600080fd5b5050505050565b600160036000909192565b7f145286dc85799b6fb9fe322391ba2d95683077b2adf34dd576dedc437e537ba760009081526020527fba10c7a68bf463c41368d64adcf7df23c0de931ea3b09f061e2dfec302fef95f5490565b611378610f15565b600160a060020a0316331461138c57600080fd5b6000811180156113a2575061139f610ca7565b81105b80156113b457506113b1611b82565b81105b15156113bf57600080fd5b7fbbb088c505d18e049d114c7c91f11724e69c55ad6c5397e2b929e68b41fa05d160009081526020527f8df5c48c6b6e11d97548adc824ba0c99103ec09830fa5d53a179984085e6eaa055565b60008061141761090b565b905033600160a060020a0382161461142e57600080fd5b611436611bd0565b15156114615761144585611a71565b151561145057600080fd5b61146161145b610ae8565b86611c21565b61149d81878787878080601f01602080910402602001604051908101604052809392919081815260200183838082843750611d45945050505050565b50600195945050505050565b600080600030600160a060020a0316636fde82026040518163ffffffff1660e060020a028152600401602060405180830381600087803b1580156114ec57600080fd5b505af1158015611500573d6000803e3d6000fd5b505050506040513d602081101561151657600080fd5b5051600160a060020a0316331461152c57600080fd5b611535866124c2565b9093509150600160a060020a038316158015906115525750600082115b801561155e5750838210155b151561156957600080fd5b61158961158485611578611322565b9063ffffffff61264916565b61265b565b611599828563ffffffff61264916565b90506115a581876126a8565b6040805185815260208101839052815188927f5bcec6564fe8d2cbb4e4eb8237510ceb6b291a5c2ee2e429948d25e9c924c1fa928290030190a28415611604576115ed611b82565b8411156115f957600080fd5b61160483848661272a565b505050505050565b611614610f15565b600160a060020a0316331461162857600080fd5b611630611b82565b81118061163b575080155b151561164657600080fd5b7f4a6a899679f26b73530d8cf1001e83b6f7702e04b6fdb98f3c62dc7e47e041a5600090815260209081527f1ab29a5cca988aee50edccdd61c5bcaa7ad4b29a03b7ee50f298ceccfe14cc4e8290556040805183815290517fad4123ae17c414d9c6d2fec478b402e6b01856cc250fd01fbfd252fda0089d3c929181900390910190a150565b7f2dfd6c9f781bb6bbb5369c114e949b69ebb440ef3d4dd6b2836225eb1dc3a2be60009081526020527f2de0d2cdc19d356cb53b5984f91bfd3b31fe0c678a0d190a6db39274bb34753f5490565b60408051600481526024810182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f6fde8202000000000000000000000000000000000000000000000000000000001781529151815160009330939291829190808383895b8381101561179b578181015183820152602001611783565b50505050905090810190601f1680156117c85780820380516001836020036101000a031916815260200191505b509150506000604051808303816000865af1915050158061185a575030600160a060020a0316636fde82026040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561182257600080fd5b505af1158015611836573d6000803e3d6000fd5b505050506040513d602081101561184c57600080fd5b5051600160a060020a031633145b8061186457503330145b151561186f57600080fd5b6118776109d7565b1561188157600080fd5b61188a896120f8565b6118938861221d565b61189c876128c9565b6118a586612954565b6118ae85612ab1565b6118b784612b86565b6118c083612be7565b6118c982612c50565b6118d1612d27565b6118d96109d7565b9998505050505050505050565b6118ee610f15565b600160a060020a0316331461190257600080fd5b8015806119265750611912611a23565b811180156119265750611923610ca7565b81105b151561193157600080fd5b7f0f8803acad17c63ee38bf2de71e1888bc7a079a6f73658e274b08018bea4e29c60009081526020527f9de0f81379b4d8e60fe509315d071b56e7b732abaf193e74e0d15808b0951d0955565b7f811bbb11e8899da471f0e69a3ed55090fc90215227fc5fb1cb0d6e962ea7b74f60005260026020527fb4ed64697d3ef8518241966f7c6f28b0d72f20f51198717d198d2d55076c593d54600160a060020a031690565b7f1e8ecaafaddea96ed9ac6d2642dcdfe1bebe58a930b1085842d8fc122b371ee560009081526020527fd5c78dd9468716ca9bb96be25d56436811b20aab3523a9904b12deef1cab239d5490565b7fbbb088c505d18e049d114c7c91f11724e69c55ad6c5397e2b929e68b41fa05d160009081526020527f8df5c48c6b6e11d97548adc824ba0c99103ec09830fa5d53a179984085e6eaa05490565b600080611a8383610e14610f93610ae8565b905080611a8e610ca7565b10158015611aa35750611a9f611b82565b8311155b8015610e405750611ab2611a23565b9092101592915050565b611ac4610f15565b600160a060020a03163314611ad857600080fd5b611ae0610b15565b8110611aeb57600080fd5b7fc0ed44c192c86d1cc1ba51340b032c2766b4a2b0041031de13c46dd7104888d560009081526020527ff8e983ee86e5e377e9e34c9131b266382c3f04113d20de077f9e12663c7a646b55565b611b40610f15565b600160a060020a03163314611b5457600080fd5b61090881612c50565b611b65610f15565b600160a060020a03163314611b7957600080fd5b61090881612b86565b7f0f8803acad17c63ee38bf2de71e1888bc7a079a6f73658e274b08018bea4e29c60009081526020527f9de0f81379b4d8e60fe509315d071b56e7b732abaf193e74e0d15808b0951d095490565b7f6168652c307c1e813ca11cfb3a601f1cf3b22452021a5052d8b05f1f1f8a3e9260005260046020527fcb8d022f2163402334a4962e3279c5def3417d3d8dab9e27ba26e81e3f8337845460ff1690565b611c2e81610e148461091a565b6000808460405160200180807f746f74616c5370656e74506572446179000000000000000000000000000000008152506010018281526020019150506040516020818303038152906040526040518082805190602001908083835b60208310611ca85780518252601f199092019160209182019101611c89565b51815160209384036101000a60001901801990921691161790526040805192909401829003909120865285019590955292909201600020939093555050505050565b7f6168652c307c1e813ca11cfb3a601f1cf3b22452021a5052d8b05f1f1f8a3e9260005260046020527fcb8d022f2163402334a4962e3279c5def3417d3d8dab9e27ba26e81e3f833784805460ff1916911515919091179055565b611d4d611bd0565b151561080e5783600160a060020a03166342966c68836040518263ffffffff1660e060020a02815260040180828152602001915050600060405180830381600087803b158015611d9c57600080fd5b505af1158015611db0573d6000803e3d6000fd5b5050505061080e83611dc28584612d7e565b8461272a565b6000611dd261197e565b600160a060020a031663d67bdd256040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015611e0f57600080fd5b505af1158015611e23573d6000803e3d6000fd5b505050506040513d6020811015611e3957600080fd5b5051905090565b6000600260008360405160200180807f6d657373616765526563697069656e740000000000000000000000000000000081525060100182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b60208310611ec55780518252601f199092019160209182019101611ea6565b51815160209384036101000a6000190180199092169116179052604080519290940182900390912086528501959095529290920160002054600160a060020a031695945050505050565b60008060008360405160200180807f6d65737361676556616c75650000000000000000000000000000000000000000815250600c018260001916600019168152602001915050604051602081830303815290604052604051808280519060200190808383602083106109965780518252601f199092019160209182019101610977565b6001600460008360405160200180807f6d65737361676546697865640000000000000000000000000000000000000000815250600c0182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b602083106120175780518252601f199092019160209182019101611ff8565b51815160209384036101000a60001901801990921691161790526040805192909401829003909120865285019590955292909201600020805460ff19169415159490941790935550505050565b61206c61090b565b600160a060020a03166340c10f1983836040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b1580156120ce57600080fd5b505af11580156120e2573d6000803e3d6000fd5b505050506040513d602081101561080e57600080fd5b61210181612dd8565b151561210c57600080fd5b7f811bbb11e8899da471f0e69a3ed55090fc90215227fc5fb1cb0d6e962ea7b74f60005260026020527fb4ed64697d3ef8518241966f7c6f28b0d72f20f51198717d198d2d55076c593d805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b7fa8b0ade3e2b734f043ce298aca4cc8d19d74270223f34531d0988b7d00cba21d60005260026020527f603cd9dcbfa185d5c37504f4c8b3f16117ed744fba48d08b7aad44a162af1c9354600160a060020a031690565b80600160a060020a03811615156121f057600080fd5b600160a060020a038316151561220e5761220982612de0565b612218565b6122188383612dec565b505050565b7f98aa806e31e94a687a31c65769cb99670064dd7f5a87526da075c5fb4eab988060005260026020527f0c1206883be66049a02d4937078367c00b3d71dd1a9465df969363c6ddeac96d805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b818101828110156122a157fe5b92915050565b6122b481610e1484610b63565b6000808460405160200180807f746f74616c45786563757465645065724461790000000000000000000000000081525060130182815260200191505060405160208183030381529060405260405180828051906020019080838360208310611ca85780518252601f199092019160209182019101611c89565b60008061233983612e99565b9150612343612eac565b905061234d61090b565b600160a060020a03166340c10f1985846040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b1580156123af57600080fd5b505af11580156123c3573d6000803e3d6000fd5b505050506040513d60208110156123d957600080fd5b50506040805183815290518291600160a060020a038716917f2f9a6098d4503a127779ba975f5f6b04f842362b1809f346989e9abc0b4dedb69181900360200190a350505050565b600080600061242e612eac565b9250612439836124c2565b9092509050600160a060020a038216158015612453575080155b151561245e57600080fd5b61246d61158485610e14611322565b612478858585612ef3565b60408051600160a060020a038716815260208101869052815185927f3344bbb992063ed4b833dabd5d5e55fc18df085bb96654e83aafbfe22e4116ff928290030190a25050505050565b600080600260008460405160200180807f74784f75744f664c696d6974526563697069656e74000000000000000000000081525060150182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b602083106125485780518252601f199092019160209182019101612529565b51815160209384036101000a600019018019909216911617905260408051929094018290039091208652858101969096525092830160009081205484517f74784f75744f664c696d697456616c75650000000000000000000000000000008188015260318082018b9052865180830390910181526051909101958690528051600160a060020a0390921698509195869592945091925082918401908083835b602083106126065780518252601f1990920191602091820191016125e7565b51815160209384036101000a6000190180199092169116179052604080519290940182900390912086528501959095529290920160002054949694955050505050565b60008282111561265557fe5b50900390565b7f145286dc85799b6fb9fe322391ba2d95683077b2adf34dd576dedc437e537ba760009081526020527fba10c7a68bf463c41368d64adcf7df23c0de931ea3b09f061e2dfec302fef95f55565b816000808360405160200180807f74784f75744f664c696d697456616c7565000000000000000000000000000000815250601101826000191660001916815260200191505060405160208183030381529060405260405180828051906020019080838360208310611ca85780518252601f199092019160209182019101611c89565b60408051600160a060020a038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f8b6c0354000000000000000000000000000000000000000000000000000000009081179091529060006127ad61197e565b600160a060020a031663dc8601b36127c3610da6565b846127cc6116cc565b6040518463ffffffff1660e060020a0281526004018084600160a060020a0316600160a060020a0316815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b83811015612839578181015183820152602001612821565b50505050905090810190601f1680156128665780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b15801561288757600080fd5b505af115801561289b573d6000803e3d6000fd5b505050506040513d60208110156128b157600080fd5b505190506128bf8185612fe9565b611604818761306b565b6128d281612dd8565b15156128dd57600080fd5b7fa8b0ade3e2b734f043ce298aca4cc8d19d74270223f34531d0988b7d00cba21d60005260026020527f603cd9dcbfa185d5c37504f4c8b3f16117ed744fba48d08b7aad44a162af1c93805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6040810151600010801561296f575060408101516020820151115b801561297f575060208101518151115b151561298a57600080fd5b80517f4a6a899679f26b73530d8cf1001e83b6f7702e04b6fdb98f3c62dc7e47e041a5600090815260208181527f1ab29a5cca988aee50edccdd61c5bcaa7ad4b29a03b7ee50f298ceccfe14cc4e92909255908201517f0f8803acad17c63ee38bf2de71e1888bc7a079a6f73658e274b08018bea4e29c82527f9de0f81379b4d8e60fe509315d071b56e7b732abaf193e74e0d15808b0951d095560408201517fbbb088c505d18e049d114c7c91f11724e69c55ad6c5397e2b929e68b41fa05d182527f8df5c48c6b6e11d97548adc824ba0c99103ec09830fa5d53a179984085e6eaa0557fad4123ae17c414d9c6d2fec478b402e6b01856cc250fd01fbfd252fda0089d3c9082905b60200201516040518082815260200191505060405180910390a150565b8051602082015110612ac257600080fd5b80517f21dbcab260e413c20dc13c28b7db95e2b423d1135f42bb8b7d5214a92270d237600090815260208181527fadd938dbd083a16bae12238cd914fca0afc7a30edb55b1cd5c7f1823f1b0e42192909255908201517fc0ed44c192c86d1cc1ba51340b032c2766b4a2b0041031de13c46dd7104888d582527ff8e983ee86e5e377e9e34c9131b266382c3f04113d20de077f9e12663c7a646b557f9bebf928b90863f24cc31f726a3a7545efd409f1dcf552301b1ee3710da70d3b908290612a94565b612b8e613159565b811115612b9a57600080fd5b7f2dfd6c9f781bb6bbb5369c114e949b69ebb440ef3d4dd6b2836225eb1dc3a2be60009081526020527f2de0d2cdc19d356cb53b5984f91bfd3b31fe0c678a0d190a6db39274bb34753f55565b604c1981138015612bf85750604d81125b1515612c0357600080fd5b7f1e8ecaafaddea96ed9ac6d2642dcdfe1bebe58a930b1085842d8fc122b371ee560009081526020527fd5c78dd9468716ca9bb96be25d56436811b20aab3523a9904b12deef1cab239d55565b600160a060020a0381161515612c6557600080fd5b7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0612c8e610f15565b60408051600160a060020a03928316815291841660208301528051918290030190a17f02016836a56b71f0d02689e69e326f4f4c1b9057164ef592671cf0d37c8040c060005260026020527fb7802e97e87ef2842a6cce7da7ffaeaedaa2f61a6a7870b23d9d01fc9b73712e805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b7f0a6f646cd611241d8073675e00d1a1ff700fbf1b53fcf473de56d1e6e4b714ba60005260046020527f078d888f9b66f3f8bfa10909e31f1e16240db73449f0500afdbbe3a70da457cc805460ff19166001179055565b80518290600010156122a1578151601414612d9857600080fd5b612da1826131a0565b9050600160a060020a0381161515612db857600080fd5b612dc06131a7565b600160a060020a03828116911614156122a157600080fd5b6000903b1190565b3031610d7d82826131b1565b604080517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290518391600091600160a060020a038416916370a0823191602480830192602092919082900301818787803b158015612e5157600080fd5b505af1158015612e65573d6000803e3d6000fd5b505050506040513d6020811015612e7b57600080fd5b5051905061080e600160a060020a038516848363ffffffff61321216565b60006122a182612ea76119d5565b6132a7565b6000612eb661197e565b600160a060020a031663669f618b6040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015611e0f57600080fd5b82600260008360405160200180807f74784f75744f664c696d6974526563697069656e74000000000000000000000081525060150182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b60208310612f775780518252601f199092019160209182019101612f58565b51815160209384036101000a60001901801990921691161790526040805192909401829003909120865285019590955292909201600020805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039590951694909417909355506122189150839050826126a8565b806000808460405160200180807f6d65737361676556616c75650000000000000000000000000000000000000000815250600c01826000191660001916815260200191505060405160208183030381529060405260405180828051906020019080838360208310611ca85780518252601f199092019160209182019101611c89565b80600260008460405160200180807f6d657373616765526563697069656e740000000000000000000000000000000081525060100182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b602083106130ef5780518252601f1990920191602091820191016130d0565b51815160209384036101000a60001901801990921691161790526040805192909401829003909120865285019590955292909201600020805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0395909516949094179093555050505050565b600061316361197e565b600160a060020a031663e5789d036040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015611e0f57600080fd5b6014015190565b6000610915610da6565b604051600160a060020a0383169082156108fc029083906000818181858888f193505050501515610d7d5780826131e6613330565b600160a060020a039091168152604051908190036020019082f080158015611310573d6000803e3d6000fd5b82600160a060020a031663a9059cbb83836040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050600060405180830381600087803b15801561327557600080fd5b505af1158015613289573d6000803e3d6000fd5b505050503d156122185760206000803e600051151561221857600080fd5b60008115156132b75750816122a1565b60008213156132db576132d483600a84900a63ffffffff6132f216565b90506122a1565b610e40836000849003600a0a63ffffffff61331b16565b6000821515613303575060006122a1565b5081810281838281151561331357fe5b04146122a157fe5b6000818381151561332857fe5b049392505050565b604051602180613340833901905600608060405260405160208060218339810160405251600160a060020a038116ff00a165627a7a72305820c2c35107b21c6a198eaa18873275d7cd6e8f723c84bb4042f94ad6d5579e45050029",
  "sourceMap": "355:1897:116:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;355:1897:116;;;;;;;",
  "deployedSourceMap": "355:1897:116:-;;;;;;;;;-1:-1:-1;;;355:1897:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2384:716:112;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2384:716:112;-1:-1:-1;;;;;2384:716:112;;;;;;;;;3435:382:99;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3435:382:99;;;;;1265:123:68;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1265:123:68;-1:-1:-1;;;;;1265:123:68;;;;;1778:90:112;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1778:90:112;;;;;;;;-1:-1:-1;;;;;1778:90:112;;;;;;;;;;;;;;1223:160:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1223:160:72;;;;;;;;;;;;;;;;;;;;;369:100:87;;8:9:-1;5:2;;;30:1;27;20:12;5:2;369:100:87;;;;;;;;;;;;;;;;;;;;;;3397:263:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3397:263:72;;;;;2617:145;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2617:145:72;;;;3668:153:112;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3668:153:112;;;;;;;;;;;;;;;;;;;;;;;1667:119:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1667:119:72;;;;1389:166;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1389:166:72;;;;;1924:161:101;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1924:161:101;;;;;1561:100:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1561:100:72;;;;1743:335:116;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1743:335:116;-1:-1:-1;;;;;1743:335:116;;;;;;;;;;1585:153:68;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1585:153:68;-1:-1:-1;;;;;1585:153:68;;;;;2593:126;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2593:126:68;;;;2366:245:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2366:245:72;;;;;1895:116;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1895:116:72;;;;1909:360:99;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1909:360:99;-1:-1:-1;;;;;1909:360:99;;;;;;;1732:92:93;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1732:92:93;;;;4482:382:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4482:382:72;;;;2538:569:99;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2538:569:99;;;;;3526:136:112;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3526:136:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;964:114:66;;8:9:-1;5:2;;;30:1;27;20:12;5:2;964:114:66;;;;4060:197:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4060:197:72;;;;;3106:414:112;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3106:414:112;;;;-1:-1:-1;;;;;3106:414:112;;;;;;;;;;;;;;;;5055:722;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5055:722:112;;;;;;;;;;;3165:226:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3165:226:72;;;;;2902:111:68;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2902:111:68;;;;699:964:112;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;699:964:112;;;;;;;;;;;;-1:-1:-1;;;;;699:964:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;699:964:112;;;;;;;;;;;;;;;;;-1:-1:-1;699:964:112;-1:-1:-1;699:964:112;;-1:-1:-1;699:964:112;;;;;;;;-1:-1:-1;699:964:112;;-1:-1:-1;;699:964:112;;;-1:-1:-1;;;699:964:112;;;;;;;;-1:-1:-1;;;;;699:964:112;;-1:-1:-1;699:964:112;;3854:200:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3854:200:72;;;;;2335:114:68;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2335:114:68;;;;1078:111:79;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1078:111:79;;;;2017:97:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2017:97:72;;;;2120:240;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2120:240:72;;;;;3666:182;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3666:182:72;;;;;1992:100:93;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1992:100:93;-1:-1:-1;;;;;1992:100:93;;;;;2062:127:68;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2062:127:68;;;;;1792:97:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1792:97:72;;;;2384:716:112;2735:12;2773:10;2718:6;:4;:6::i;:::-;2717:7;2709:16;;;;;;2750:13;:11;:13::i;:::-;2735:28;;2794:4;2773:26;;2817:19;2829:6;2817:11;:19::i;:::-;2809:28;;;;;;;;2847:44;2867:15;:13;:15::i;:::-;2884:6;2847:19;:44::i;:::-;2902:13;2910:4;2902:7;:13::i;:::-;2925:42;;;;;;2944:10;2925:42;;;;-1:-1:-1;;;;;2925:42:112;;;;;;;;;;;;;;;:18;;;;;;:42;;;;;;;;;;;;;;;-1:-1:-1;2925:18:112;:42;;;5:2:-1;;;;30:1;27;20:12;5:2;2925:42:112;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2925:42:112;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2977:14:112;;-1:-1:-1;2985:5:112;2977:7;:14::i;:::-;3001:92;3038:5;3045:10;3057:6;3082:9;3065:27;;;;;;-1:-1:-1;;;;;3065:27:112;-1:-1:-1;;;;;3065:27:112;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3065:27:112;;;3001:36;:92::i;:::-;2384:716;;;;:::o;3435:382:99:-;3558:17;3616:13;990:16:68;:14;:16::i;:::-;-1:-1:-1;;;;;968:39:68;:10;:39;960:48;;;;;;1045:29;:27;:29::i;:::-;-1:-1:-1;;;;;1026:48:68;:15;:13;:15::i;:::-;-1:-1:-1;;;;;1026:48:68;;1018:57;;;;;;3522:24:99;3535:10;3522:12;:24::i;:::-;3521:25;3513:34;;;;;;3578:28;3595:10;3578:16;:28::i;:::-;3558:48;;3632:24;3645:10;3632:12;:24::i;:::-;3616:40;;3666:27;3682:10;3666:15;:27::i;:::-;3703:44;3730:9;3741:5;3703:26;:44::i;:::-;3762:48;;;-1:-1:-1;;;;;3762:48:99;;;;;;;;;;;;3781:10;;3762:48;;;;;;;;3435:382;;;:::o;1265:123:68:-;783:7:93;:5;:7::i;:::-;-1:-1:-1;;;;;769:21:93;:10;:21;761:30;;;;;;1346:35:68;1365:15;1346:18;:35::i;:::-;1265:123;:::o;1778:90:112:-;1822:6;1847:14;:12;:14::i;:::-;1840:21;;1778:90;:::o;1223:160:72:-;1284:7;1310:11;:66;1369:4;1332:42;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1332:42:72;;;1322:53;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1322:53:72;;;;;;;;;;;;;1310:66;;;;;;;;;;;;-1:-1:-1;1310:66:72;;;1223:160;-1:-1:-1;;;;;1223:160:72:o;369:100:87:-;160:66;415:4;438:24;:11;:24;;;;;;369:100;:::o;3397:263:72:-;783:7:93;:5;:7::i;:::-;-1:-1:-1;;;;;769:21:93;:10;:21;761:30;;;;;;3501:19:72;:17;:19::i;:::-;3487:11;:33;:53;;;-1:-1:-1;3524:16:72;;3487:53;3479:62;;;;;;;;1096:66;3551:11;:34;;;;;;;;:48;;;:34;3614:39;;;;;;;;;;;;;;;;;;3397:263;:::o;2617:145::-;2749:6;2743:3;:12;;2617:145::o;3668:153:112:-;3740:17;3668:153;:::o;1667:119:72:-;1096:66;1719:7;1745:34;;;;;;;1667:119;:::o;1389:166::-;1453:7;1479:11;:69;1541:4;1501:45;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1501:45:72;;;1491:56;;;;;;;;;;;;;66:2:-1;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;1924:161:101;1987:4;2010:11;:68;2065:10;2032:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2032:44:101;;;2022:55;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;2022:55:101;;;;;;;;;;;;;2010:68;;;;;;;;;;;;-1:-1:-1;2010:68:101;;;;;1924:161;-1:-1:-1;;;;;1924:161:101:o;1561:100:72:-;756:66;1604:7;1630:24;;;;;;;1561:100;:::o;1743:335:116:-;312:4:102;-1:-1:-1;;;;;284:53:102;;:55;;;;;-1:-1:-1;;;284:55:102;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;284:55:102;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;284:55:102;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;284:55:102;-1:-1:-1;;;;;270:69:102;:10;:69;262:78;;;;;;2047:24:116;2059:6;2067:3;2047:11;:24::i;:::-;1743:335;;:::o;1585:153:68:-;783:7:93;:5;:7::i;:::-;-1:-1:-1;;;;;769:21:93;:10;:21;761:30;;;;;;1681:50:68;1713:17;1681:31;:50::i;2593:126::-;544:66;2653:7;2679:33;:14;:33;;;;-1:-1:-1;;;;;2679:33:68;2593:126;:::o;2366:245:72:-;2434:4;2450:17;2470:49;2511:7;2470:36;2490:15;:13;:15::i;:::-;2470:19;:36::i;:::-;:40;:49;:40;:49;:::i;:::-;2450:69;;2561:9;2536:21;:19;:21::i;:::-;:34;;:68;;;;;2585:19;:17;:19::i;:::-;2574:7;:30;;2536:68;2529:75;2366:245;-1:-1:-1;;;2366:245:72:o;1895:116::-;922:66;1945:7;1971:33;;;;;;;1895:116;:::o;1909:360:99:-;990:16:68;:14;:16::i;:::-;-1:-1:-1;;;;;968:39:68;:10;:39;960:48;;;;;;1045:29;:27;:29::i;:::-;-1:-1:-1;;;;;1026:48:68;:15;:13;:15::i;:::-;-1:-1:-1;;;;;1026:48:68;;1018:57;;;;;;2010:28:99;2031:6;2010:20;:28::i;:::-;2006:257;;;2054:47;2077:15;:13;:15::i;:::-;2094:6;2054:22;:47::i;:::-;2115:48;2144:10;2156:6;2115:28;:48::i;:::-;2006:257;;;2194:58;2233:10;2245:6;2194:38;:58::i;1732:92:93:-;1523:66;1770:7;1796:21;:14;:21;;;;-1:-1:-1;;;;;1796:21:93;1732:92;:::o;4482:382:72:-;4532:7;4551:17;4591:19;4635:14;4695:28;4571:10;:8;:10::i;:::-;4551:30;;4613:12;:10;:12::i;:::-;4591:34;;4652:33;4669:15;:13;:15::i;:::-;4652:16;:33::i;:::-;4635:50;;4740:6;4726:11;:20;:47;;4772:1;4726:47;;;4763:6;4749:11;:20;4726:47;4695:78;;4802:20;4790:9;:32;:67;;4837:20;4790:67;;;4825:9;4790:67;4783:74;;4482:382;;;;;:::o;2538:569:99:-;2863:21;2927:17;2619:16;:14;:16::i;:::-;-1:-1:-1;;;;;2619:34:99;;2654:10;2619:46;;;;;-1:-1:-1;;;2619:46:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2619:46:99;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2619:46:99;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2619:46:99;2618:47;2610:56;;;;;;2746:4;2684:16;:14;:16::i;:::-;-1:-1:-1;;;;;2684:38:99;;2723:10;2684:50;;;;;-1:-1:-1;;;2684:50:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2684:50:99;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2684:50:99;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2684:50:99;-1:-1:-1;;;;;2684:67:99;;2676:76;;;;;;2822:29;:27;:29::i;:::-;-1:-1:-1;;;;;2770:81:99;:16;:14;:16::i;:::-;-1:-1:-1;;;;;2770:36:99;;2807:10;2770:48;;;;;-1:-1:-1;;;2770:48:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2770:48:99;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2770:48:99;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2770:48:99;-1:-1:-1;;;;;2770:81:99;;2762:90;;;;;;-1:-1:-1;;2947:50:99;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;2947:50:99;;;;;;;;25:18:-1;;61:17;;2947:50:99;182:15:-1;2887:30:99;179:29:-1;;;160:49;;;2887:30:99;3007:16;:14;:16::i;:::-;-1:-1:-1;;;;;3007:37:99;;3045:29;:27;:29::i;:::-;3076:4;3082:17;:15;:17::i;:::-;3007:93;;;;;-1:-1:-1;;;3007:93:99;;;;;;;-1:-1:-1;;;;;3007:93:99;-1:-1:-1;;;;;3007:93:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3007:93:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3007:93:99;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3007:93:99;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;2538:569:99:o;3526:136:112:-;3647:1;3650;3587:12;3526:136;;;:::o;964:114:66:-;648:66;1013:7;1039:32;;;;;;;964:114;:::o;4060:197:72:-;783:7:93;:5;:7::i;:::-;-1:-1:-1;;;;;769:21:93;:10;:21;761:30;;;;;;4149:1:72;4137:9;:13;:41;;;;;4166:12;:10;:12::i;:::-;4154:9;:24;4137:41;:67;;;;;4194:10;:8;:10::i;:::-;4182:9;:22;4137:67;4129:76;;;;;;;;447:66;4215:11;:23;;;;;;:35;4060:197::o;3106:414:112:-;3193:4;3209:12;3224:13;:11;:13::i;:::-;3209:28;-1:-1:-1;3255:10:112;-1:-1:-1;;;;;3255:28:112;;;3247:37;;;;;;3299:6;:4;:6::i;:::-;3298:7;3294:124;;;3329:19;3341:6;3329:11;:19::i;:::-;3321:28;;;;;;;;3363:44;3383:15;:13;:15::i;:::-;3400:6;3363:19;:44::i;:::-;3427:65;3464:5;3471;3478:6;3486:5;;3427:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3427:36:112;;-1:-1:-1;;;;;3427:65:112:i;:::-;-1:-1:-1;3509:4:112;;3106:414;-1:-1:-1;;;;;3106:414:112:o;5055:722::-;5217:17;5236:13;5436:20;312:4:102;-1:-1:-1;;;;;284:53:102;;:55;;;;;-1:-1:-1;;;284:55:102;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;284:55:102;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;284:55:102;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;284:55:102;-1:-1:-1;;;;;270:69:102;:10;:69;262:78;;;;;;5253:24:112;5267:9;5253:13;:24::i;:::-;5216:61;;-1:-1:-1;5216:61:112;-1:-1:-1;;;;;;5295:23:112;;;;;;:36;;;5330:1;5322:5;:9;5295:36;:62;;;;;5344:13;5335:5;:22;;5295:62;5287:71;;;;;;;;5368:58;5388:37;5411:13;5388:18;:16;:18::i;:::-;:22;:37;:22;:37;:::i;:::-;5368:19;:58::i;:::-;5459:24;:5;5469:13;5459:24;:9;:24;:::i;:::-;5436:47;;5493:46;5515:12;5529:9;5493:21;:46::i;:::-;5554:61;;;;;;;;;;;;;;5576:9;;5554:61;;;;;;;;5629:17;5625:146;;;5687:10;:8;:10::i;:::-;5670:27;;;5662:36;;;;;;5712:48;5724:9;5735;5746:13;5712:11;:48::i;:::-;5055:722;;;;;;:::o;3165:226:72:-;783:7:93;:5;:7::i;:::-;-1:-1:-1;;;;;769:21:93;:10;:21;761:30;;;;;;3260:10:72;:8;:10::i;:::-;3246:11;:24;:44;;;-1:-1:-1;3274:16:72;;3246:44;3238:53;;;;;;;;756:66;3301:11;:24;;;;;;;;:38;;;:24;3354:30;;;;;;;;;;;;;;;;;;3165:226;:::o;2902:111:68:-;713:66;2950:7;2976:30;;;;;;;2902:111;:::o;699:964:112:-;1091:44:93;;;22:32:-1;6:49;;1091:44:93;;;;;49:4:-1;25:18;;61:17;;1091:44:93;182:15:-1;1114:20:93;179:29:-1;160:49;;1072:64:93;;;;1171:4:112;;1080::93;;1091:44;1072:64;;;25:18:-1;1072:64:93;;25:18:-1;1171:4:112;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1072:64:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1071:65;:208;;;;1252:4;-1:-1:-1;;;;;1224:53:93;;:55;;;;;-1:-1:-1;;;1224:55:93;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1224:55:93;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1224:55:93;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1224:55:93;-1:-1:-1;;;;;1210:69:93;:10;:69;1071:208;:299;;;-1:-1:-1;1343:10:93;1365:4;1343:27;1071:299;1050:382;;;;;;;;1196:15:112;:13;:15::i;:::-;1195:16;1187:25;;;;;;1223:35;1242:15;1223:18;:35::i;:::-;1268:50;1300:17;1268:31;:50::i;:::-;1328:28;1343:12;1328:14;:28::i;:::-;1366:44;1377:32;1366:10;:44::i;:::-;1420:63;1440:42;1420:19;:63::i;:::-;1493:37;1513:16;1493:19;:37::i;:::-;1540:31;1557:13;1540:16;:31::i;:::-;1581:17;1591:6;1581:9;:17::i;:::-;1608:15;:13;:15::i;:::-;1641;:13;:15::i;:::-;1634:22;699:964;-1:-1:-1;;;;;;;;;699:964:112:o;3854:200:72:-;783:7:93;:5;:7::i;:::-;-1:-1:-1;;;;;769:21:93;:10;:21;761:30;;;;;;3931:14:72;;;:70;;;3962:10;:8;:10::i;:::-;3950:9;:22;:50;;;;;3988:12;:10;:12::i;:::-;3976:9;:24;3950:50;3923:79;;;;;;;;601:66;4012:11;:23;;;;;;:35;3854:200::o;2335:114:68:-;377:66;2382:4;2410:31;:14;:31;;;;-1:-1:-1;;;;;2410:31:68;2335:114;:::o;1078:111:79:-;260:66;1123:6;1155:26;;;;;;;1078:111;:::o;2017:97:72:-;447:66;2058:7;2084:23;;;;;;;2017:97;:::o;2120:240::-;2179:4;2195:17;2215:46;2253:7;2215:33;2232:15;:13;:15::i;2215:46::-;2195:66;;2294:9;2278:12;:10;:12::i;:::-;:25;;:50;;;;;2318:10;:8;:10::i;:::-;2307:7;:21;;2278:50;:75;;;;;2343:10;:8;:10::i;:::-;2332:21;;;;;2120:240;-1:-1:-1;;2120:240:72:o;3666:182::-;783:7:93;:5;:7::i;:::-;-1:-1:-1;;;;;769:21:93;:10;:21;761:30;;;;;;3764:21:72;:19;:21::i;:::-;3752:33;;3744:42;;;;;;922:66;3796:11;:33;;;;;;:45;3666:182::o;1992:100:93:-;783:7;:5;:7::i;:::-;-1:-1:-1;;;;;769:21:93;:10;:21;761:30;;;;;;2066:19;2076:8;2066:9;:19::i;2062:127:68:-;783:7:93;:5;:7::i;:::-;-1:-1:-1;;;;;769:21:93;:10;:21;761:30;;;;;;2145:37:68;2165:16;2145:19;:37::i;1792:97:72:-;601:66;1833:7;1859:23;;;;;;;1792:97;:::o;267:81:94:-;155:66;301:4;324:17;:11;:17;;;;;;267:81;:::o;2768:188:72:-;2915:34;2942:6;2915:22;2932:4;2915:16;:22::i;:34::-;2846:11;:66;2905:4;2868:42;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2868:42:72;;;2858:53;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;2858:53:72;;;;;;;;;;;;;2846:66;;;;;;;;;;;;-1:-1:-1;2846:66:72;:103;;;;-1:-1:-1;;;;;2768:188:72:o;354:80:94:-;155:66;402:17;;:11;:17;;;:25;;-1:-1:-1;;402:25:94;;;;;;;;;;354:80::o;1221:287:116:-;1350:6;:4;:6::i;:::-;1349:7;1345:157;;;1401:6;-1:-1:-1;;;;;1372:41:116;;1414:6;1372:49;;;;;-1:-1:-1;;;1372:49:116;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1372:49:116;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1372:49:116;;;;1435:56;1447:5;1454:28;1469:5;1476;1454:14;:28::i;:::-;1484:6;1435:11;:56::i;4237:113:68:-;4285:7;4311:16;:14;:16::i;:::-;-1:-1:-1;;;;;4311:30:68;;:32;;;;;-1:-1:-1;;;4311:32:68;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4311:32:68;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4311:32:68;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4311:32:68;;-1:-1:-1;4237:113:68;:::o;1302:177:101:-;1371:7;1397:14;:75;1459:10;1422:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1422:48:101;;;1412:59;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1412:59:101;;;;;;;;;;;;;1397:75;;;;;;;;;;;;-1:-1:-1;1397:75:101;;-1:-1:-1;;;;;1397:75:101;;1302:177;-1:-1:-1;;;;;1302:177:101:o;622:166::-;687:7;713:11;:68;768:10;735:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;735:44:101;;;725:55;;;;;;;;;;;;;66:2:-1;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;1631:146:101;1766:4;1695:11;:68;1750:10;1717:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1717:44:101;;;1707:55;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1707:55:101;;;;;;;;;;;;;1695:68;;;;;;;;;;;;-1:-1:-1;1695:68:101;:75;;-1:-1:-1;;1695:75:101;;;;;;;;;;;-1:-1:-1;;;;1631:146:101:o;2084:166:116:-;2204:13;:11;:13::i;:::-;-1:-1:-1;;;;;2175:48:116;;2224:10;2236:6;2175:68;;;;;-1:-1:-1;;;2175:68:116;;;;;;;-1:-1:-1;;;;;2175:68:116;-1:-1:-1;;;;;2175:68:116;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2175:68:116;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2175:68:116;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;3154:187:68;3234:40;3258:15;3234:23;:40::i;:::-;3226:49;;;;;;;;377:66;3285:31;;:14;:31;;;:49;;-1:-1:-1;;3285:49:68;-1:-1:-1;;;;;3285:49:68;;;;;;;;;;3154:187::o;368:115:63:-;95:66:83;415:6:63;447:28;:14;:28;;;;-1:-1:-1;;;;;447:28:63;368:115;:::o;892:225:78:-;964:3;-1:-1:-1;;;;;455:17:78;;;;447:26;;;;;;-1:-1:-1;;;;;983:20:78;;;979:132;;;1019:21;1036:3;1019:16;:21::i;:::-;979:132;;;1071:29;1088:6;1096:3;1071:16;:29::i;:::-;892:225;;;:::o;3503:147:68:-;544:66;3590:33;;:14;:33;;;:53;;-1:-1:-1;;3590:53:68;-1:-1:-1;;;;;3590:53:68;;;;;;;;;;3503:147::o;1238:128:160:-;1319:7;;;1339;;;;1332:15;;;;1238:128;;;;:::o;2962:197:72:-;3115:37;3145:6;3115:25;3135:4;3115:19;:25::i;:37::-;3043:11;:69;3105:4;3065:45;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3065:45:72;;;3055:56;;;;;;;;;;;;;66:2:-1;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;624:313:116;717:13;762:18;733:19;745:6;733:11;:19::i;:::-;717:35;;783:11;:9;:11::i;:::-;762:32;;833:13;:11;:13::i;:::-;-1:-1:-1;;;;;804:48:116;;853:10;865:5;804:67;;;;;-1:-1:-1;;;804:67:116;;;;;;;-1:-1:-1;;;;;804:67:116;-1:-1:-1;;;;;804:67:116;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;804:67:116;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;804:67:116;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;886:44:116;;;;;;;;919:10;;-1:-1:-1;;;;;886:44:116;;;;;;;;804:67;886:44;;;624:313;;;;:::o;4055:497:112:-;4158:18;4200:17;4227:13;4179:11;:9;:11::i;:::-;4158:32;;4271:25;4285:10;4271:13;:25::i;:::-;4250:46;;-1:-1:-1;4250:46:112;-1:-1:-1;;;;;;4314:23:112;;;:37;;;;-1:-1:-1;4341:10:112;;4314:37;4306:46;;;;;;;;4362:51;4382:30;4405:6;4382:18;:16;:18::i;4362:51::-;4423:48;4440:10;4452:6;4460:10;4423:16;:48::i;:::-;4486:59;;;-1:-1:-1;;;;;4486:59:112;;;;;;;;;;;;4534:10;;4486:59;;;;;;;;4055:497;;;;;:::o;1670:300:66:-;1736:17;1755:13;1792:14;:80;1859:10;1817:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1817:53:66;;;1807:64;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1807:64:66;;;;;;;;;;;;;1792:80;;;;;;;;;-1:-1:-1;1792:80:66;;;-1:-1:-1;1792:80:66;;;;1912:49;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1912::66;;;;;;;;1902:60;;-1:-1:-1;;;;;1792:80:66;;;;-1:-1:-1;;;;;1912:49:66;;-1:-1:-1;1912:49:66;;-1:-1:-1;1912:49:66;;1902:60;;;;1912:49;1902:60;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1902:60:66;;;;;;;;;;;;;1890:73;;;;;;;;;;;;-1:-1:-1;1890:73:66;;1670:300;;1890:73;;-1:-1:-1;;;;;1670:300:66:o;1060:116:160:-;1120:7;1142:8;;;;1135:16;;;;-1:-1:-1;1164:7:160;;;1060:116::o;1278:112:66:-;648:66;1342:11;:32;;;;;;:41;1278:112::o;2842:175::-;3004:6;2928:11;:73;2988:10;2950:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2950::66;;;2940:60;;;;;;;;;;;;;66:2:-1;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;1105:506:99;1282:57;;;-1:-1:-1;;;;;1282:57:99;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1282:57:99;;;;;;;;25:18:-1;;61:17;;1282:57:99;182:15:-1;1219:33:99;179:29:-1;;;160:49;;;1219:33:99;1195:21;1371:16;:14;:16::i;:::-;-1:-1:-1;;;;;1371:37:99;;1422:29;:27;:29::i;:::-;1465:4;1483:17;:15;:17::i;:::-;1371:139;;;;;-1:-1:-1;;;1371:139:99;;;;;;;-1:-1:-1;;;;;1371:139:99;-1:-1:-1;;;;;1371:139:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1371:139:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1371:139:99;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1371:139:99;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1371:139:99;;-1:-1:-1;1521:35:99;1371:139;1549:6;1521:15;:35::i;:::-;1566:38;1586:10;1598:5;1566:19;:38::i;489:153:63:-;556:31;580:6;556:23;:31::i;:::-;548:40;;;;;;;;95:66:83;598:28:63;;:14;:28;;;:37;;-1:-1:-1;;598:37:63;-1:-1:-1;;;;;598:37:63;;;;;;;;;;489:153::o;4870:446:72:-;4950:10;;;;4963:1;-1:-1:-1;4950:73:72;;;;-1:-1:-1;5013:10:72;;;;;5000;;;:23;4950:73;:139;;;;-1:-1:-1;5079:10:72;;;;5066;;:23;4950:139;4929:195;;;;;;;;5162:10;;756:66;5170:1;5135:24;;;5162:10;5135:24;;;;:37;;;;5208:10;;;;601:66;5182:23;;;:36;5254:10;;;;447:66;5228:23;;;:36;5280:29;;5162:7;;5298:10;;;;;5280:29;;;;;;;;;;;;;;;;;;4870:446;:::o;5322:314::-;5411:10;;;5398;;;:23;5390:32;;;;;;5509:10;;1096:66;5517:1;5472:34;;;5509:10;5472:34;;;;:47;;;;5565:10;;;;922:66;5529:33;;;:46;5591:38;;5509:7;;5618:10;;3850:182:68;3952:13;:11;:13::i;:::-;3932:33;;;3924:42;;;;;;713:66;3976:11;:30;;;;;;:49;3850:182::o;718:247:79:-;-1:-1:-1;;876:6:79;:12;:27;;;;;901:2;892:6;:11;876:27;868:36;;;;;;;;260:66;914:11;:26;;;;;;:44;718:247::o;2149:190:93:-;-1:-1:-1;;;;;2213:22:93;;;;2205:31;;;;;;2251:39;2272:7;:5;:7::i;:::-;2251:39;;;-1:-1:-1;;;;;2251:39:93;;;;;;;;;;;;;;;;;;;;;1523:66;2300:21;;:14;:21;;;:32;;-1:-1:-1;;2300:32:93;-1:-1:-1;;;;;2300:32:93;;;;;;;;;;2149:190::o;281:82:87:-;160:66;325:24;;:11;:24;;;:31;;-1:-1:-1;;325:31:87;352:4;325:31;;;281:82::o;388:373:77:-;523:12;;504:5;;463:17;-1:-1:-1;519:236:77;;;563:12;;579:2;563:18;555:27;;;;;;608;629:5;608:20;:27::i;:::-;596:39;-1:-1:-1;;;;;;657:23:77;;;;649:32;;;;;;716:27;:25;:27::i;:::-;-1:-1:-1;;;;;703:40:77;;;;;;;695:49;;;;;438:578:159;496:4;971:18;;1003:8;;438:578::o;1270:145:78:-;1352:4;1344:21;1375:33;1397:3;1344:21;1375;:33::i;1656:210::-;1795:21;;;;;;1811:4;1795:21;;;;;;1760:6;;1730:16;;-1:-1:-1;;;;;1795:15:78;;;;;:21;;;;;;;;;;;;;;1730:16;1795:15;:21;;;5:2:-1;;;;30:1;27;20:12;5:2;1795:21:78;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1795:21:78;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1795:21:78;;-1:-1:-1;1826:33:78;-1:-1:-1;;;;;1826:19:78;;1846:3;1795:21;1826:33;:19;:33;:::i;1733:127:79:-;1793:7;1819:34;1830:6;1838:14;:12;:14::i;:::-;1819:10;:34::i;4512:105:68:-;4556:7;4582:16;:14;:16::i;:::-;-1:-1:-1;;;;;4582:26:68;;:28;;;;;-1:-1:-1;;;4582:28:68;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;2305:252:66;2489:10;2406:14;:80;2473:10;2431:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2431:53:66;;;2421:64;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;2421:64:66;;;;;;;;;;;;;2406:80;;;;;;;;;;;;-1:-1:-1;2406:80:66;:93;;-1:-1:-1;;2406:93:66;-1:-1:-1;;;;;2406:93:66;;;;;;;;;;;-1:-1:-1;2509:41:66;;-1:-1:-1;2531:6:66;;-1:-1:-1;2539:10:66;2509:21;:41::i;311:164:101:-;462:6;391:11;:68;446:10;413:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;413:44:101;;;403:55;;;;;;;;;;;;;66:2:-1;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;992:183:101;1158:10;1080:14;:75;1142:10;1105:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1105:48:101;;;1095:59;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1095:59:101;;;;;;;;;;;;;1080:75;;;;;;;;;;;;-1:-1:-1;1080:75:101;:88;;-1:-1:-1;;1080:88:101;-1:-1:-1;;;;;1080:88:101;;;;;;;;;;;-1:-1:-1;;;;;992:183:101:o;4800:109:68:-;4846:7;4872:16;:14;:16::i;:::-;-1:-1:-1;;;;;4872:28:68;;:30;;;;;-1:-1:-1;;;4872:30:68;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;1216:154:20;1350:2;1338:15;1332:22;;1310:54::o;1874:122:112:-;1934:7;1960:29;:27;:29::i;431:177:18:-;513:22;;-1:-1:-1;;;;;513:14:18;;;:22;;;;;528:6;;513:22;;;;528:6;513:14;:22;;;;;;;512:23;508:94;;;573:6;581:9;551:40;;:::i;:::-;-1:-1:-1;;;;;551:40:18;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;579:339:22;677:6;-1:-1:-1;;;;;665:28:22;;694:3;699:6;665:41;;;;;-1:-1:-1;;;665:41:22;;;;;;;-1:-1:-1;;;;;665:41:22;-1:-1:-1;;;;;665:41:22;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;665:41:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;665:41:22;;;;742:14;739:2;;;796;793:1;790;775:24;832:1;826:8;819:16;816:2;;;868:1;865;858:12;2040:290:79;2113:7;2136:11;;2132:55;;;-1:-1:-1;2170:6:79;2163:13;;2132:55;2209:1;2200:6;:10;2196:79;;;2233:31;:6;2244:2;:19;;;2233:31;:10;:31;:::i;:::-;2226:38;;;;2196:79;2291:32;:6;2314:7;;;;2302:2;:20;2291:32;:10;:32;:::i;203:380:160:-;263:9;489:7;;485:36;;;-1:-1:-1;513:1:160;506:8;;485:36;-1:-1:-1;531:7:160;;;536:2;531;:7;551:6;;;;;;;;:12;544:20;;;665:283;725:7;941:2;936;:7;;;;;;;;;665:283;-1:-1:-1;;;665:283:160:o;355:1897:116:-;;;;;;;;;;:::o",
  "source": "pragma solidity 0.4.24;\n\nimport \"./BasicAMBErc677ToErc677.sol\";\nimport \"../../interfaces/IBurnableMintableERC677Token.sol\";\n\n/**\n* @title HomeAMBErc677ToErc677\n* @dev Home side implementation for erc677-to-erc677 mediator intended to work on top of AMB bridge.\n* It is designed to be used as an implementation contract of EternalStorageProxy contract.\n*/\ncontract HomeAMBErc677ToErc677 is BasicAMBErc677ToErc677 {\n    /**\n     * @dev Executes action on the request to deposit tokens relayed from the other network\n     * @param _recipient address of tokens receiver\n     * @param _value amount of bridged tokens\n     */\n    function executeActionOnBridgedTokens(address _recipient, uint256 _value) internal {\n        uint256 value = _shiftValue(_value);\n        bytes32 _messageId = messageId();\n        IBurnableMintableERC677Token(erc677token()).mint(_recipient, value);\n        emit TokensBridged(_recipient, value, _messageId);\n    }\n\n    /**\n     * @dev Executes action on withdrawal of bridged tokens\n     * @param _token address of token contract\n     * @param _from address of tokens sender\n     * @param _value requsted amount of bridged tokens\n     * @param _data alternative receiver, if specified\n     */\n    function bridgeSpecificActionsOnTokenTransfer(ERC677 _token, address _from, uint256 _value, bytes _data) internal {\n        if (!lock()) {\n            IBurnableMintableERC677Token(_token).burn(_value);\n            passMessage(_from, chooseReceiver(_from, _data), _value);\n        }\n    }\n\n    /**\n     * @dev Withdraws the erc20 tokens or native coins from this contract.\n     * @param _token address of the claimed token or address(0) for native coins.\n     * @param _to address of the tokens/coins receiver.\n     */\n    function claimTokens(address _token, address _to) external onlyIfUpgradeabilityOwner {\n        // For home side of the bridge, tokens are not locked at the contract, they are minted and burned instead.\n        // So, its is safe to allow claiming of any tokens. Native coins are allowed as well.\n        claimValues(_token, _to);\n    }\n\n    function executeActionOnFixedTokens(address _recipient, uint256 _value) internal {\n        IBurnableMintableERC677Token(erc677token()).mint(_recipient, _value);\n    }\n}\n",
  "sourcePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/amb_erc677_to_erc677/HomeAMBErc677ToErc677.sol",
  "ast": {
    "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/amb_erc677_to_erc677/HomeAMBErc677ToErc677.sol",
    "exportedSymbols": {
      "HomeAMBErc677ToErc677": [
        19740
      ]
    },
    "id": 19741,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 19636,
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:116"
      },
      {
        "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/amb_erc677_to_erc677/BasicAMBErc677ToErc677.sol",
        "file": "./BasicAMBErc677ToErc677.sol",
        "id": 19637,
        "nodeType": "ImportDirective",
        "scope": 19741,
        "sourceUnit": 19170,
        "src": "25:38:116",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/interfaces/IBurnableMintableERC677Token.sol",
        "file": "../../interfaces/IBurnableMintableERC677Token.sol",
        "id": 19638,
        "nodeType": "ImportDirective",
        "scope": 19741,
        "sourceUnit": 1678,
        "src": "64:59:116",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 19639,
              "name": "BasicAMBErc677ToErc677",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19169,
              "src": "389:22:116",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BasicAMBErc677ToErc677_$19169",
                "typeString": "contract BasicAMBErc677ToErc677"
              }
            },
            "id": 19640,
            "nodeType": "InheritanceSpecifier",
            "src": "389:22:116"
          }
        ],
        "contractDependencies": [
          1500,
          9266,
          10090,
          10871,
          11468,
          12916,
          13954,
          14052,
          14172,
          14357,
          14798,
          15318,
          15349,
          16261,
          16390,
          16409,
          16712,
          19169
        ],
        "contractKind": "contract",
        "documentation": "@title HomeAMBErc677ToErc677\n@dev Home side implementation for erc677-to-erc677 mediator intended to work on top of AMB bridge.\nIt is designed to be used as an implementation contract of EternalStorageProxy contract.",
        "fullyImplemented": true,
        "id": 19740,
        "linearizedBaseContracts": [
          19740,
          19169,
          16261,
          16390,
          10090,
          13954,
          14357,
          1500,
          12916,
          14172,
          11468,
          15318,
          10871,
          16712,
          14052,
          16409,
          15349,
          14798,
          9266
        ],
        "name": "HomeAMBErc677ToErc677",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 19673,
              "nodeType": "Block",
              "src": "707:230:116",
              "statements": [
                {
                  "assignments": [
                    19648
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 19648,
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "scope": 19674,
                      "src": "717:13:116",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 19647,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "717:7:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 19652,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 19650,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19644,
                        "src": "745:6:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 19649,
                      "name": "_shiftValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14130,
                      "src": "733:11:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 19651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "733:19:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "717:35:116"
                },
                {
                  "assignments": [
                    19654
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 19654,
                      "name": "_messageId",
                      "nodeType": "VariableDeclaration",
                      "scope": 19674,
                      "src": "762:18:116",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 19653,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "762:7:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 19657,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 19655,
                      "name": "messageId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11456,
                      "src": "783:9:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
                        "typeString": "function () view returns (bytes32)"
                      }
                    },
                    "id": 19656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "783:11:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "762:32:116"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 19663,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19642,
                        "src": "853:10:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19664,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19648,
                        "src": "865:5:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 19659,
                              "name": "erc677token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18882,
                              "src": "833:11:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ERC677_$1469_$",
                                "typeString": "function () view returns (contract ERC677)"
                              }
                            },
                            "id": 19660,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "833:13:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC677_$1469",
                              "typeString": "contract ERC677"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC677_$1469",
                              "typeString": "contract ERC677"
                            }
                          ],
                          "id": 19658,
                          "name": "IBurnableMintableERC677Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1677,
                          "src": "804:28:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBurnableMintableERC677Token_$1677_$",
                            "typeString": "type(contract IBurnableMintableERC677Token)"
                          }
                        },
                        "id": 19661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "804:43:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBurnableMintableERC677Token_$1677",
                          "typeString": "contract IBurnableMintableERC677Token"
                        }
                      },
                      "id": 19662,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1664,
                      "src": "804:48:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 19665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "804:67:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 19666,
                  "nodeType": "ExpressionStatement",
                  "src": "804:67:116"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 19668,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19642,
                        "src": "900:10:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19669,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19648,
                        "src": "912:5:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19670,
                        "name": "_messageId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19654,
                        "src": "919:10:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 19667,
                      "name": "TokensBridged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16056,
                      "src": "886:13:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,uint256,bytes32)"
                      }
                    },
                    "id": 19671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "886:44:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19672,
                  "nodeType": "EmitStatement",
                  "src": "881:49:116"
                }
              ]
            },
            "documentation": "@dev Executes action on the request to deposit tokens relayed from the other network\n@param _recipient address of tokens receiver\n@param _value amount of bridged tokens",
            "id": 19674,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "executeActionOnBridgedTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19645,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19642,
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 19674,
                  "src": "662:18:116",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19641,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "662:7:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19644,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 19674,
                  "src": "682:14:116",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19643,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "682:7:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "661:36:116"
            },
            "payable": false,
            "returnParameters": {
              "id": 19646,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "707:0:116"
            },
            "scope": 19740,
            "src": "624:313:116",
            "stateMutability": "nonpayable",
            "superFunction": 16253,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 19706,
              "nodeType": "Block",
              "src": "1335:173:116",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 19687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1349:7:116",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 19685,
                        "name": "lock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15336,
                        "src": "1350:4:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
                          "typeString": "function () returns (bool)"
                        }
                      },
                      "id": 19686,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1350:6:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 19705,
                  "nodeType": "IfStatement",
                  "src": "1345:157:116",
                  "trueBody": {
                    "id": 19704,
                    "nodeType": "Block",
                    "src": "1358:144:116",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 19692,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19680,
                              "src": "1414:6:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 19689,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 19676,
                                  "src": "1401:6:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC677_$1469",
                                    "typeString": "contract ERC677"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC677_$1469",
                                    "typeString": "contract ERC677"
                                  }
                                ],
                                "id": 19688,
                                "name": "IBurnableMintableERC677Token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1677,
                                "src": "1372:28:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IBurnableMintableERC677Token_$1677_$",
                                  "typeString": "type(contract IBurnableMintableERC677Token)"
                                }
                              },
                              "id": 19690,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1372:36:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IBurnableMintableERC677Token_$1677",
                                "typeString": "contract IBurnableMintableERC677Token"
                              }
                            },
                            "id": 19691,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "burn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1669,
                            "src": "1372:41:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 19693,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1372:49:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 19694,
                        "nodeType": "ExpressionStatement",
                        "src": "1372:49:116"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 19696,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19678,
                              "src": "1447:5:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 19698,
                                  "name": "_from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 19678,
                                  "src": "1469:5:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 19699,
                                  "name": "_data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 19682,
                                  "src": "1476:5:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 19697,
                                "name": "chooseReceiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13948,
                                "src": "1454:14:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$returns$_t_address_$",
                                  "typeString": "function (address,bytes memory) view returns (address)"
                                }
                              },
                              "id": 19700,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1454:28:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 19701,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19680,
                              "src": "1484:6:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 19695,
                            "name": "passMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16103,
                            "src": "1435:11:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 19702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1435:56:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 19703,
                        "nodeType": "ExpressionStatement",
                        "src": "1435:56:116"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev Executes action on withdrawal of bridged tokens\n@param _token address of token contract\n@param _from address of tokens sender\n@param _value requsted amount of bridged tokens\n@param _data alternative receiver, if specified",
            "id": 19707,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "bridgeSpecificActionsOnTokenTransfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19683,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19676,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 19707,
                  "src": "1267:13:116",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC677_$1469",
                    "typeString": "contract ERC677"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 19675,
                    "name": "ERC677",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1469,
                    "src": "1267:6:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC677_$1469",
                      "typeString": "contract ERC677"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19678,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 19707,
                  "src": "1282:13:116",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19677,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1282:7:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19680,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 19707,
                  "src": "1297:14:116",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19679,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1297:7:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19682,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 19707,
                  "src": "1313:11:116",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 19681,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1313:5:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1266:59:116"
            },
            "payable": false,
            "returnParameters": {
              "id": 19684,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1335:0:116"
            },
            "scope": 19740,
            "src": "1221:287:116",
            "stateMutability": "nonpayable",
            "superFunction": 10089,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 19721,
              "nodeType": "Block",
              "src": "1828:250:116",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 19717,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19709,
                        "src": "2059:6:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19718,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19711,
                        "src": "2067:3:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 19716,
                      "name": "claimValues",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14003,
                      "src": "2047:11:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 19719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2047:24:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19720,
                  "nodeType": "ExpressionStatement",
                  "src": "2047:24:116"
                }
              ]
            },
            "documentation": "@dev Withdraws the erc20 tokens or native coins from this contract.\n@param _token address of the claimed token or address(0) for native coins.\n@param _to address of the tokens/coins receiver.",
            "id": 19722,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 19714,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 19713,
                  "name": "onlyIfUpgradeabilityOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 16408,
                  "src": "1802:25:116",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1802:25:116"
              }
            ],
            "name": "claimTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19712,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19709,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 19722,
                  "src": "1764:14:116",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19708,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1764:7:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19711,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 19722,
                  "src": "1780:11:116",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19710,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1780:7:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1763:29:116"
            },
            "payable": false,
            "returnParameters": {
              "id": 19715,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1828:0:116"
            },
            "scope": 19740,
            "src": "1743:335:116",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 19738,
              "nodeType": "Block",
              "src": "2165:85:116",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 19734,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19724,
                        "src": "2224:10:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19735,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19726,
                        "src": "2236:6:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 19730,
                              "name": "erc677token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18882,
                              "src": "2204:11:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ERC677_$1469_$",
                                "typeString": "function () view returns (contract ERC677)"
                              }
                            },
                            "id": 19731,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2204:13:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC677_$1469",
                              "typeString": "contract ERC677"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC677_$1469",
                              "typeString": "contract ERC677"
                            }
                          ],
                          "id": 19729,
                          "name": "IBurnableMintableERC677Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1677,
                          "src": "2175:28:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBurnableMintableERC677Token_$1677_$",
                            "typeString": "type(contract IBurnableMintableERC677Token)"
                          }
                        },
                        "id": 19732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2175:43:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBurnableMintableERC677Token_$1677",
                          "typeString": "contract IBurnableMintableERC677Token"
                        }
                      },
                      "id": 19733,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1664,
                      "src": "2175:48:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 19736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2175:68:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 19737,
                  "nodeType": "ExpressionStatement",
                  "src": "2175:68:116"
                }
              ]
            },
            "documentation": null,
            "id": 19739,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "executeActionOnFixedTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19727,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19724,
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 19739,
                  "src": "2120:18:116",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19723,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2120:7:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19726,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 19739,
                  "src": "2140:14:116",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19725,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2140:7:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2119:36:116"
            },
            "payable": false,
            "returnParameters": {
              "id": 19728,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2165:0:116"
            },
            "scope": 19740,
            "src": "2084:166:116",
            "stateMutability": "nonpayable",
            "superFunction": 16260,
            "visibility": "internal"
          }
        ],
        "scope": 19741,
        "src": "355:1897:116"
      }
    ],
    "src": "0:2253:116"
  },
  "legacyAST": {
    "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/amb_erc677_to_erc677/HomeAMBErc677ToErc677.sol",
    "exportedSymbols": {
      "HomeAMBErc677ToErc677": [
        19740
      ]
    },
    "id": 19741,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 19636,
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:116"
      },
      {
        "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/amb_erc677_to_erc677/BasicAMBErc677ToErc677.sol",
        "file": "./BasicAMBErc677ToErc677.sol",
        "id": 19637,
        "nodeType": "ImportDirective",
        "scope": 19741,
        "sourceUnit": 19170,
        "src": "25:38:116",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/interfaces/IBurnableMintableERC677Token.sol",
        "file": "../../interfaces/IBurnableMintableERC677Token.sol",
        "id": 19638,
        "nodeType": "ImportDirective",
        "scope": 19741,
        "sourceUnit": 1678,
        "src": "64:59:116",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 19639,
              "name": "BasicAMBErc677ToErc677",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19169,
              "src": "389:22:116",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BasicAMBErc677ToErc677_$19169",
                "typeString": "contract BasicAMBErc677ToErc677"
              }
            },
            "id": 19640,
            "nodeType": "InheritanceSpecifier",
            "src": "389:22:116"
          }
        ],
        "contractDependencies": [
          1500,
          9266,
          10090,
          10871,
          11468,
          12916,
          13954,
          14052,
          14172,
          14357,
          14798,
          15318,
          15349,
          16261,
          16390,
          16409,
          16712,
          19169
        ],
        "contractKind": "contract",
        "documentation": "@title HomeAMBErc677ToErc677\n@dev Home side implementation for erc677-to-erc677 mediator intended to work on top of AMB bridge.\nIt is designed to be used as an implementation contract of EternalStorageProxy contract.",
        "fullyImplemented": true,
        "id": 19740,
        "linearizedBaseContracts": [
          19740,
          19169,
          16261,
          16390,
          10090,
          13954,
          14357,
          1500,
          12916,
          14172,
          11468,
          15318,
          10871,
          16712,
          14052,
          16409,
          15349,
          14798,
          9266
        ],
        "name": "HomeAMBErc677ToErc677",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 19673,
              "nodeType": "Block",
              "src": "707:230:116",
              "statements": [
                {
                  "assignments": [
                    19648
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 19648,
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "scope": 19674,
                      "src": "717:13:116",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 19647,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "717:7:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 19652,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 19650,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19644,
                        "src": "745:6:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 19649,
                      "name": "_shiftValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14130,
                      "src": "733:11:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 19651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "733:19:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "717:35:116"
                },
                {
                  "assignments": [
                    19654
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 19654,
                      "name": "_messageId",
                      "nodeType": "VariableDeclaration",
                      "scope": 19674,
                      "src": "762:18:116",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 19653,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "762:7:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 19657,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 19655,
                      "name": "messageId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11456,
                      "src": "783:9:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
                        "typeString": "function () view returns (bytes32)"
                      }
                    },
                    "id": 19656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "783:11:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "762:32:116"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 19663,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19642,
                        "src": "853:10:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19664,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19648,
                        "src": "865:5:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 19659,
                              "name": "erc677token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18882,
                              "src": "833:11:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ERC677_$1469_$",
                                "typeString": "function () view returns (contract ERC677)"
                              }
                            },
                            "id": 19660,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "833:13:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC677_$1469",
                              "typeString": "contract ERC677"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC677_$1469",
                              "typeString": "contract ERC677"
                            }
                          ],
                          "id": 19658,
                          "name": "IBurnableMintableERC677Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1677,
                          "src": "804:28:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBurnableMintableERC677Token_$1677_$",
                            "typeString": "type(contract IBurnableMintableERC677Token)"
                          }
                        },
                        "id": 19661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "804:43:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBurnableMintableERC677Token_$1677",
                          "typeString": "contract IBurnableMintableERC677Token"
                        }
                      },
                      "id": 19662,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1664,
                      "src": "804:48:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 19665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "804:67:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 19666,
                  "nodeType": "ExpressionStatement",
                  "src": "804:67:116"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 19668,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19642,
                        "src": "900:10:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19669,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19648,
                        "src": "912:5:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19670,
                        "name": "_messageId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19654,
                        "src": "919:10:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 19667,
                      "name": "TokensBridged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16056,
                      "src": "886:13:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,uint256,bytes32)"
                      }
                    },
                    "id": 19671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "886:44:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19672,
                  "nodeType": "EmitStatement",
                  "src": "881:49:116"
                }
              ]
            },
            "documentation": "@dev Executes action on the request to deposit tokens relayed from the other network\n@param _recipient address of tokens receiver\n@param _value amount of bridged tokens",
            "id": 19674,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "executeActionOnBridgedTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19645,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19642,
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 19674,
                  "src": "662:18:116",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19641,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "662:7:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19644,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 19674,
                  "src": "682:14:116",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19643,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "682:7:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "661:36:116"
            },
            "payable": false,
            "returnParameters": {
              "id": 19646,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "707:0:116"
            },
            "scope": 19740,
            "src": "624:313:116",
            "stateMutability": "nonpayable",
            "superFunction": 16253,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 19706,
              "nodeType": "Block",
              "src": "1335:173:116",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 19687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1349:7:116",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 19685,
                        "name": "lock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15336,
                        "src": "1350:4:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
                          "typeString": "function () returns (bool)"
                        }
                      },
                      "id": 19686,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1350:6:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 19705,
                  "nodeType": "IfStatement",
                  "src": "1345:157:116",
                  "trueBody": {
                    "id": 19704,
                    "nodeType": "Block",
                    "src": "1358:144:116",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 19692,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19680,
                              "src": "1414:6:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 19689,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 19676,
                                  "src": "1401:6:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC677_$1469",
                                    "typeString": "contract ERC677"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC677_$1469",
                                    "typeString": "contract ERC677"
                                  }
                                ],
                                "id": 19688,
                                "name": "IBurnableMintableERC677Token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1677,
                                "src": "1372:28:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IBurnableMintableERC677Token_$1677_$",
                                  "typeString": "type(contract IBurnableMintableERC677Token)"
                                }
                              },
                              "id": 19690,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1372:36:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IBurnableMintableERC677Token_$1677",
                                "typeString": "contract IBurnableMintableERC677Token"
                              }
                            },
                            "id": 19691,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "burn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1669,
                            "src": "1372:41:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 19693,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1372:49:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 19694,
                        "nodeType": "ExpressionStatement",
                        "src": "1372:49:116"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 19696,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19678,
                              "src": "1447:5:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 19698,
                                  "name": "_from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 19678,
                                  "src": "1469:5:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 19699,
                                  "name": "_data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 19682,
                                  "src": "1476:5:116",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 19697,
                                "name": "chooseReceiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13948,
                                "src": "1454:14:116",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$returns$_t_address_$",
                                  "typeString": "function (address,bytes memory) view returns (address)"
                                }
                              },
                              "id": 19700,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1454:28:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 19701,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19680,
                              "src": "1484:6:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 19695,
                            "name": "passMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16103,
                            "src": "1435:11:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 19702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1435:56:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 19703,
                        "nodeType": "ExpressionStatement",
                        "src": "1435:56:116"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev Executes action on withdrawal of bridged tokens\n@param _token address of token contract\n@param _from address of tokens sender\n@param _value requsted amount of bridged tokens\n@param _data alternative receiver, if specified",
            "id": 19707,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "bridgeSpecificActionsOnTokenTransfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19683,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19676,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 19707,
                  "src": "1267:13:116",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC677_$1469",
                    "typeString": "contract ERC677"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 19675,
                    "name": "ERC677",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1469,
                    "src": "1267:6:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC677_$1469",
                      "typeString": "contract ERC677"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19678,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 19707,
                  "src": "1282:13:116",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19677,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1282:7:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19680,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 19707,
                  "src": "1297:14:116",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19679,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1297:7:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19682,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 19707,
                  "src": "1313:11:116",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 19681,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1313:5:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1266:59:116"
            },
            "payable": false,
            "returnParameters": {
              "id": 19684,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1335:0:116"
            },
            "scope": 19740,
            "src": "1221:287:116",
            "stateMutability": "nonpayable",
            "superFunction": 10089,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 19721,
              "nodeType": "Block",
              "src": "1828:250:116",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 19717,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19709,
                        "src": "2059:6:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19718,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19711,
                        "src": "2067:3:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 19716,
                      "name": "claimValues",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14003,
                      "src": "2047:11:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 19719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2047:24:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19720,
                  "nodeType": "ExpressionStatement",
                  "src": "2047:24:116"
                }
              ]
            },
            "documentation": "@dev Withdraws the erc20 tokens or native coins from this contract.\n@param _token address of the claimed token or address(0) for native coins.\n@param _to address of the tokens/coins receiver.",
            "id": 19722,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 19714,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 19713,
                  "name": "onlyIfUpgradeabilityOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 16408,
                  "src": "1802:25:116",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1802:25:116"
              }
            ],
            "name": "claimTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19712,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19709,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 19722,
                  "src": "1764:14:116",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19708,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1764:7:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19711,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 19722,
                  "src": "1780:11:116",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19710,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1780:7:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1763:29:116"
            },
            "payable": false,
            "returnParameters": {
              "id": 19715,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1828:0:116"
            },
            "scope": 19740,
            "src": "1743:335:116",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 19738,
              "nodeType": "Block",
              "src": "2165:85:116",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 19734,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19724,
                        "src": "2224:10:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19735,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19726,
                        "src": "2236:6:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 19730,
                              "name": "erc677token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18882,
                              "src": "2204:11:116",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ERC677_$1469_$",
                                "typeString": "function () view returns (contract ERC677)"
                              }
                            },
                            "id": 19731,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2204:13:116",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC677_$1469",
                              "typeString": "contract ERC677"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC677_$1469",
                              "typeString": "contract ERC677"
                            }
                          ],
                          "id": 19729,
                          "name": "IBurnableMintableERC677Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1677,
                          "src": "2175:28:116",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBurnableMintableERC677Token_$1677_$",
                            "typeString": "type(contract IBurnableMintableERC677Token)"
                          }
                        },
                        "id": 19732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2175:43:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBurnableMintableERC677Token_$1677",
                          "typeString": "contract IBurnableMintableERC677Token"
                        }
                      },
                      "id": 19733,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1664,
                      "src": "2175:48:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 19736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2175:68:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 19737,
                  "nodeType": "ExpressionStatement",
                  "src": "2175:68:116"
                }
              ]
            },
            "documentation": null,
            "id": 19739,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "executeActionOnFixedTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19727,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19724,
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 19739,
                  "src": "2120:18:116",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19723,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2120:7:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19726,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 19739,
                  "src": "2140:14:116",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19725,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2140:7:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2119:36:116"
            },
            "payable": false,
            "returnParameters": {
              "id": 19728,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2165:0:116"
            },
            "scope": 19740,
            "src": "2084:166:116",
            "stateMutability": "nonpayable",
            "superFunction": 16260,
            "visibility": "internal"
          }
        ],
        "scope": 19741,
        "src": "355:1897:116"
      }
    ],
    "src": "0:2253:116"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-11-26T16:22:39.903Z",
  "devdoc": {
    "methods": {
      "bridgeContract()": {
        "details": "Get the AMB interface for the bridge contract address",
        "return": "AMB interface for the bridge contract address"
      },
      "claimTokens(address,address)": {
        "details": "Withdraws the erc20 tokens or native coins from this contract.",
        "params": {
          "_to": "address of the tokens/coins receiver.",
          "_token": "address of the claimed token or address(0) for native coins."
        }
      },
      "decimalShift()": {
        "details": "Returns the value of foreign-to-home decimal shift.",
        "return": "decimal shift."
      },
      "erc677token()": {
        "details": "Public getter for token contract.",
        "return": "address of the used token contract"
      },
      "fixAssetsAboveLimits(bytes32,bool,uint256)": {
        "details": "Fixes locked tokens, that were out of execution limits during the call to handleBridgedTokens",
        "params": {
          "messageId": "reference for bridge operation that was out of execution limits",
          "unlockOnOtherSide": "true if fixed tokens should be unlocked to the other side of the bridge",
          "valueToUnlock": "unlocked amount of tokens, should be less than saved txAboveLimitsValue. Should be less than maxPerTx(), if tokens need to be unlocked on the other side."
        }
      },
      "fixFailedMessage(bytes32)": {
        "details": "Handles the request to fix transferred assets which bridged message execution failed on the other network. It uses the information stored by passMessage method when the assets were initially transferred",
        "params": {
          "_messageId": "id of the message which execution failed on the other network."
        }
      },
      "handleBridgedTokens(address,uint256)": {
        "details": "Handles the bridged tokens. Checks that the value is inside the execution limits and invokes the method to execute the Mint or Unlock accordingly.",
        "params": {
          "_recipient": "address that will receive the tokens",
          "_value": "amount of tokens to be received"
        }
      },
      "maxAvailablePerTx()": {
        "details": "Retrieves maximum available bridge amount per one transaction taking into account maxPerTx() and dailyLimit() parameters.",
        "return": "minimum of maxPerTx parameter and remaining daily quota."
      },
      "mediatorContractOnOtherSide()": {
        "details": "Tells the mediator contract address from the other network.",
        "return": "the address of the mediator contract."
      },
      "messageFixed(bytes32)": {
        "details": "Tells if a message sent to the AMB bridge has been fixed.",
        "return": "bool indicating the status of the message."
      },
      "outOfLimitAmount()": {
        "details": "Total amount coins/tokens that were bridged from the other side and are out of execution limits.",
        "return": "total amount of all bridge operations above limits."
      },
      "owner()": {
        "details": "Tells the address of the owner",
        "return": "the address of the owner"
      },
      "relayTokens(address,uint256)": {
        "details": "Initiates the bridge operation that will lock the amount of tokens transferred and mint the tokens on the other network. The user should first call Approve method of the ERC677 token.",
        "params": {
          "_receiver": "address that will receive the minted tokens on the other network.",
          "_value": "amount of tokens to be transferred to the other network."
        }
      },
      "requestFailedMessageFix(bytes32)": {
        "details": "Method to be called when a bridged message execution failed. It will generate a new message requesting to fix/roll back the transferred assets on the other network.",
        "params": {
          "_messageId": "id of the message which execution failed."
        }
      },
      "requestGasLimit()": {
        "details": "Tells the gas limit to be used in the message execution by the AMB bridge on the other network.",
        "return": "the gas limit for the message execution."
      },
      "setBridgeContract(address)": {
        "details": "Sets the AMB bridge contract address. Only the owner can call this method.",
        "params": {
          "_bridgeContract": "the address of the bridge contract."
        }
      },
      "setMediatorContractOnOtherSide(address)": {
        "details": "Sets the mediator contract address from the other network. Only the owner can call this method.",
        "params": {
          "_mediatorContract": "the address of the mediator contract."
        }
      },
      "setRequestGasLimit(uint256)": {
        "details": "Sets the gas limit to be used in the message execution by the AMB bridge on the other network. This value can't exceed the parameter maxGasPerTx defined on the AMB bridge. Only the owner can call this method.",
        "params": {
          "_requestGasLimit": "the gas limit for the message execution."
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "the address to transfer ownership to."
        }
      }
    },
    "title": "HomeAMBErc677ToErc677"
  },
  "userdoc": {
    "methods": {}
  }
}