{
  "contractName": "ForeignAMBErc677ToErc677",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_messageId",
          "type": "bytes32"
        }
      ],
      "name": "fixFailedMessage",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_bridgeContract",
          "type": "address"
        }
      ],
      "name": "setBridgeContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "erc677token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_day",
          "type": "uint256"
        }
      ],
      "name": "totalSpentPerDay",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isInitialized",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_dailyLimit",
          "type": "uint256"
        }
      ],
      "name": "setExecutionDailyLimit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCurrentDay",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBridgeMode",
      "outputs": [
        {
          "name": "_data",
          "type": "bytes4"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "executionDailyLimit",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "mediatorBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_day",
          "type": "uint256"
        }
      ],
      "name": "totalExecutedPerDay",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_messageId",
          "type": "bytes32"
        }
      ],
      "name": "messageFixed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "dailyLimit",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_mediatorContract",
          "type": "address"
        }
      ],
      "name": "setMediatorContractOnOtherSide",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "mediatorContractOnOtherSide",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withinExecutionLimit",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "executionMaxPerTx",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_recipient",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "handleBridgedTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "maxAvailablePerTx",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_messageId",
          "type": "bytes32"
        }
      ],
      "name": "requestFailedMessageFix",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBridgeInterfacesVersion",
      "outputs": [
        {
          "name": "major",
          "type": "uint64"
        },
        {
          "name": "minor",
          "type": "uint64"
        },
        {
          "name": "patch",
          "type": "uint64"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "outOfLimitAmount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_minPerTx",
          "type": "uint256"
        }
      ],
      "name": "setMinPerTx",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "onTokenTransfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "messageId",
          "type": "bytes32"
        },
        {
          "name": "unlockOnOtherSide",
          "type": "bool"
        },
        {
          "name": "valueToUnlock",
          "type": "uint256"
        }
      ],
      "name": "fixAssetsAboveLimits",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_dailyLimit",
          "type": "uint256"
        }
      ],
      "name": "setDailyLimit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "requestGasLimit",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_bridgeContract",
          "type": "address"
        },
        {
          "name": "_mediatorContract",
          "type": "address"
        },
        {
          "name": "_erc677token",
          "type": "address"
        },
        {
          "name": "_dailyLimitMaxPerTxMinPerTxArray",
          "type": "uint256[3]"
        },
        {
          "name": "_executionDailyLimitExecutionMaxPerTxArray",
          "type": "uint256[2]"
        },
        {
          "name": "_requestGasLimit",
          "type": "uint256"
        },
        {
          "name": "_decimalShift",
          "type": "int256"
        },
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_maxPerTx",
          "type": "uint256"
        }
      ],
      "name": "setMaxPerTx",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "bridgeContract",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimalShift",
      "outputs": [
        {
          "name": "",
          "type": "int256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "minPerTx",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withinLimit",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_maxPerTx",
          "type": "uint256"
        }
      ],
      "name": "setExecutionMaxPerTx",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_requestGasLimit",
          "type": "uint256"
        }
      ],
      "name": "setRequestGasLimit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "maxPerTx",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "messageId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "FailedMessageFixed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "messageId",
          "type": "bytes32"
        }
      ],
      "name": "TokensBridged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "newLimit",
          "type": "uint256"
        }
      ],
      "name": "DailyLimitChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "newLimit",
          "type": "uint256"
        }
      ],
      "name": "ExecutionDailyLimitChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "messageId",
          "type": "bytes32"
        }
      ],
      "name": "MediatorAmountLimitExceeded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "transactionHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "messageId",
          "type": "bytes32"
        }
      ],
      "name": "AmountLimitExceeded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "messageId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "remaining",
          "type": "uint256"
        }
      ],
      "name": "AssetAboveLimitsFixed",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_receiver",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "relayTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "fixMediatorBalance",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "claimTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_receiver\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"relayTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_messageId\",\"type\":\"bytes32\"}],\"name\":\"fixFailedMessage\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_bridgeContract\",\"type\":\"address\"}],\"name\":\"setBridgeContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"erc677token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_day\",\"type\":\"uint256\"}],\"name\":\"totalSpentPerDay\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isInitialized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dailyLimit\",\"type\":\"uint256\"}],\"name\":\"setExecutionDailyLimit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCurrentDay\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBridgeMode\",\"outputs\":[{\"name\":\"_data\",\"type\":\"bytes4\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"executionDailyLimit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mediatorBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_day\",\"type\":\"uint256\"}],\"name\":\"totalExecutedPerDay\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"fixMediatorBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_messageId\",\"type\":\"bytes32\"}],\"name\":\"messageFixed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dailyLimit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"claimTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_mediatorContract\",\"type\":\"address\"}],\"name\":\"setMediatorContractOnOtherSide\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mediatorContractOnOtherSide\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withinExecutionLimit\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"executionMaxPerTx\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_recipient\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"handleBridgedTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxAvailablePerTx\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_messageId\",\"type\":\"bytes32\"}],\"name\":\"requestFailedMessageFix\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBridgeInterfacesVersion\",\"outputs\":[{\"name\":\"major\",\"type\":\"uint64\"},{\"name\":\"minor\",\"type\":\"uint64\"},{\"name\":\"patch\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"outOfLimitAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_minPerTx\",\"type\":\"uint256\"}],\"name\":\"setMinPerTx\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"onTokenTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"messageId\",\"type\":\"bytes32\"},{\"name\":\"unlockOnOtherSide\",\"type\":\"bool\"},{\"name\":\"valueToUnlock\",\"type\":\"uint256\"}],\"name\":\"fixAssetsAboveLimits\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dailyLimit\",\"type\":\"uint256\"}],\"name\":\"setDailyLimit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"requestGasLimit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_bridgeContract\",\"type\":\"address\"},{\"name\":\"_mediatorContract\",\"type\":\"address\"},{\"name\":\"_erc677token\",\"type\":\"address\"},{\"name\":\"_dailyLimitMaxPerTxMinPerTxArray\",\"type\":\"uint256[3]\"},{\"name\":\"_executionDailyLimitExecutionMaxPerTxArray\",\"type\":\"uint256[2]\"},{\"name\":\"_requestGasLimit\",\"type\":\"uint256\"},{\"name\":\"_decimalShift\",\"type\":\"int256\"},{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_maxPerTx\",\"type\":\"uint256\"}],\"name\":\"setMaxPerTx\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bridgeContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimalShift\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minPerTx\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withinLimit\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_maxPerTx\",\"type\":\"uint256\"}],\"name\":\"setExecutionMaxPerTx\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_requestGasLimit\",\"type\":\"uint256\"}],\"name\":\"setRequestGasLimit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxPerTx\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"messageId\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"FailedMessageFixed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"messageId\",\"type\":\"bytes32\"}],\"name\":\"TokensBridged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newLimit\",\"type\":\"uint256\"}],\"name\":\"DailyLimitChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newLimit\",\"type\":\"uint256\"}],\"name\":\"ExecutionDailyLimitChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"messageId\",\"type\":\"bytes32\"}],\"name\":\"MediatorAmountLimitExceeded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"transactionHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"messageId\",\"type\":\"bytes32\"}],\"name\":\"AmountLimitExceeded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"messageId\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"remaining\",\"type\":\"uint256\"}],\"name\":\"AssetAboveLimitsFixed\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"bridgeContract()\":{\"details\":\"Get the AMB interface for the bridge contract address\",\"return\":\"AMB interface for the bridge contract address\"},\"claimTokens(address,address)\":{\"details\":\"Allows to transfer any locked token on this contract that is not part of the bridge operations.\",\"params\":{\"_to\":\"address that will receive the locked tokens on this contract.\",\"_token\":\"address of the token, if it is not provided, native tokens will be transferred.\"}},\"decimalShift()\":{\"details\":\"Returns the value of foreign-to-home decimal shift.\",\"return\":\"decimal shift.\"},\"erc677token()\":{\"details\":\"Public getter for token contract.\",\"return\":\"address of the used token contract\"},\"fixAssetsAboveLimits(bytes32,bool,uint256)\":{\"details\":\"Fixes locked tokens, that were out of execution limits during the call to handleBridgedTokens\",\"params\":{\"messageId\":\"reference for bridge operation that was out of execution limits\",\"unlockOnOtherSide\":\"true if fixed tokens should be unlocked to the other side of the bridge\",\"valueToUnlock\":\"unlocked amount of tokens, should be less than saved txAboveLimitsValue. Should be less than maxPerTx(), if tokens need to be unlocked on the other side.\"}},\"fixFailedMessage(bytes32)\":{\"details\":\"Handles the request to fix transferred assets which bridged message execution failed on the other network. It uses the information stored by passMessage method when the assets were initially transferred\",\"params\":{\"_messageId\":\"id of the message which execution failed on the other network.\"}},\"fixMediatorBalance(address)\":{\"details\":\"Allows to send to the other network the amount of locked tokens that can be forced into the contract without the invocation of the required methods.\",\"params\":{\"_receiver\":\"the address that will receive the tokens on the other network\"}},\"handleBridgedTokens(address,uint256)\":{\"details\":\"Handles the bridged tokens. Checks that the value is inside the execution limits and invokes the method to execute the Mint or Unlock accordingly.\",\"params\":{\"_recipient\":\"address that will receive the tokens\",\"_value\":\"amount of tokens to be received\"}},\"maxAvailablePerTx()\":{\"details\":\"Retrieves maximum available bridge amount per one transaction taking into account maxPerTx() and dailyLimit() parameters.\",\"return\":\"minimum of maxPerTx parameter and remaining daily quota.\"},\"mediatorBalance()\":{\"details\":\"Tells the expected mediator balance.\",\"return\":\"the current expected mediator balance.\"},\"mediatorContractOnOtherSide()\":{\"details\":\"Tells the mediator contract address from the other network.\",\"return\":\"the address of the mediator contract.\"},\"messageFixed(bytes32)\":{\"details\":\"Tells if a message sent to the AMB bridge has been fixed.\",\"return\":\"bool indicating the status of the message.\"},\"outOfLimitAmount()\":{\"details\":\"Total amount coins/tokens that were bridged from the other side and are out of execution limits.\",\"return\":\"total amount of all bridge operations above limits.\"},\"owner()\":{\"details\":\"Tells the address of the owner\",\"return\":\"the address of the owner\"},\"relayTokens(address,uint256)\":{\"details\":\"Initiates the bridge operation that will lock the amount of tokens transferred and mint the tokens on the other network. The user should first call Approve method of the ERC677 token.\",\"params\":{\"_receiver\":\"address that will receive the minted tokens on the other network.\",\"_value\":\"amount of tokens to be transferred to the other network.\"}},\"requestFailedMessageFix(bytes32)\":{\"details\":\"Method to be called when a bridged message execution failed. It will generate a new message requesting to fix/roll back the transferred assets on the other network.\",\"params\":{\"_messageId\":\"id of the message which execution failed.\"}},\"requestGasLimit()\":{\"details\":\"Tells the gas limit to be used in the message execution by the AMB bridge on the other network.\",\"return\":\"the gas limit for the message execution.\"},\"setBridgeContract(address)\":{\"details\":\"Sets the AMB bridge contract address. Only the owner can call this method.\",\"params\":{\"_bridgeContract\":\"the address of the bridge contract.\"}},\"setMediatorContractOnOtherSide(address)\":{\"details\":\"Sets the mediator contract address from the other network. Only the owner can call this method.\",\"params\":{\"_mediatorContract\":\"the address of the mediator contract.\"}},\"setRequestGasLimit(uint256)\":{\"details\":\"Sets the gas limit to be used in the message execution by the AMB bridge on the other network. This value can't exceed the parameter maxGasPerTx defined on the AMB bridge. Only the owner can call this method.\",\"params\":{\"_requestGasLimit\":\"the gas limit for the message execution.\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"the address to transfer ownership to.\"}}},\"title\":\"ForeignAMBErc677ToErc677\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/amb_erc677_to_erc677/ForeignAMBErc677ToErc677.sol\":\"ForeignAMBErc677ToErc677\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/interfaces/ERC677.sol\":{\"keccak256\":\"0xa4252d5b9e3d1b536b6a5edce1b712530827fcc792438ca17fa60fb64d4463ca\",\"urls\":[\"bzzr://ca1db6e12bc9753410003682a5cb6ebfc87ee238e78ba4a3033f915c66c3c72b\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/interfaces/ERC677Receiver.sol\":{\"keccak256\":\"0x1343ae44729d851f88868c8712a9e864316badd59f8dd0988d108c2c43927ac9\",\"urls\":[\"bzzr://f3f8ad86c8f5c7e213fd5811e4362d83cf611bef3fcfd4438a876556ffbb4f16\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/interfaces/IAMB.sol\":{\"keccak256\":\"0xd95469da5c2b895e9f8b23a864f931f053efd9b22a1c0af1928e5802df74c73f\",\"urls\":[\"bzzr://ba73b8e65499bb98dba6fbbceb818784cb8122d6901960e2ef61c7a5ab254a69\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/interfaces/IUpgradeabilityOwnerStorage.sol\":{\"keccak256\":\"0xa6b5c96c8165d49676d227a9b7070faffdb7325906a598797fe66ca5917e76ef\",\"urls\":[\"bzzr://14c7b605baba9012f1386dce78e5b2665c682ec6a5bae3f4a6ec15f98ba40aa9\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/libraries/Address.sol\":{\"keccak256\":\"0x9d5d8f089aedf9dfa743c9bc66bc901db5da5be78892af178340800873e1c722\",\"urls\":[\"bzzr://97602c15f88d529b68d7929717afa75fd03cd0f23a1363c14cd263dbcc17599e\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/libraries/Bytes.sol\":{\"keccak256\":\"0xaac87fcac1962e29a85f577dafccf09d06b413fcc5bf97e821dca0b25183c310\",\"urls\":[\"bzzr://e1a3e3f8d13a8009d505b4d20029adbbcaf4c20a92ee10a223767fbb6d093dd2\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/libraries/SafeERC20.sol\":{\"keccak256\":\"0xb1f0a33f17fee9d600a2269fecce80d79377af3aeb2922e903fe4e3b57dc0c4f\",\"urls\":[\"bzzr://e3b6f5e2a1e88e69d403cbf2925c92c662b4fe6ea28dee292948187203ac6c98\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeability/EternalStorage.sol\":{\"keccak256\":\"0x8f2df79a1cda812d4be25da8f2b138f9b7492e76da1dfba21d87012e649cc51c\",\"urls\":[\"bzzr://0846d08e1b7a84e541ae31c91d2c0b34d88cf3abbd18891ec6eedeea7e958af2\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/BaseERC677Bridge.sol\":{\"keccak256\":\"0x68adcbc23fcaf31480b6cc15c929dd7f62aed7edf48f1b50e2b0e3658b261778\",\"urls\":[\"bzzr://8bba5f8eaae0e989a9899ca07a9df296e28ba67459aad85235112e777ec69fe2\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/BaseOverdrawManagement.sol\":{\"keccak256\":\"0x29dca32b0540208e6916d86e008cabd26717857c5ad6f27788a6461b054477b0\",\"urls\":[\"bzzr://067d7023ac80eb12e11a504b87a219aab2b99ee61ea7d325d2c95dc91c26919c\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/BasicAMBMediator.sol\":{\"keccak256\":\"0x817cdf39d46eed56fdf6fc124b7163d1dc296b8b02fbc0fd34ee1948d8816eab\",\"urls\":[\"bzzr://02cf31c071d2a58a929d0fa1dae4d647ae1ce881221695a0730b66f6098cfa4a\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/BasicTokenBridge.sol\":{\"keccak256\":\"0x0ad6a56603c8bc28ab384cbb7b51a6b4eb242264f23a0f0464224f77a85a19a5\",\"urls\":[\"bzzr://fdb04b2368b6ffab36560c9231b9a90ee1982eba8027d3f4a91e6c964bef5197\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/ChooseReceiverHelper.sol\":{\"keccak256\":\"0xed188cae33d353543654b085650def4bf4be21304b0380fa683fbe06dbc4d3ce\",\"urls\":[\"bzzr://6c4aa7785721d11c9c8c03400e24e0049de3359b9deb55a6d8db6443183b974c\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/Claimable.sol\":{\"keccak256\":\"0xfe020277ad01d6e42674c0906fb33eeec54964e928208fdd7fc0ab68c2967773\",\"urls\":[\"bzzr://2d1d90cdfb9e0917f83bdfcc4f8398e3f035c4c62da4e79e81ad4c4252b1d979\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/DecimalShiftBridge.sol\":{\"keccak256\":\"0x9ebdcd28b12565bdb6e87b631c1aa6d7927d3f4298e368acfdd86bbf71fc2a83\",\"urls\":[\"bzzr://9f2f39db4f4778334408a2a2baa2d97b517a76929c2f7ebb1efe0cb4c77cfd23\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/ERC677Storage.sol\":{\"keccak256\":\"0x4c7b3459083f9d776c523846d2ca45a1066c5295b16acba13877f600797f625f\",\"urls\":[\"bzzr://4b738fb49963baf92c55d2a15a9fdb90a731c3a549ec2f331aef1e7e1cdf5317\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/Initializable.sol\":{\"keccak256\":\"0xed94c4128ada87141d6c640d5bf4d0a5227cd68fad16be6304a121847fe6494f\",\"urls\":[\"bzzr://2dfbb776af73c3cfe3b6d3dd4545dc7cc55694d4636c0d1043d46ace7dd42ab2\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/MediatorBalanceStorage.sol\":{\"keccak256\":\"0xb16525d6dccf2b475cacae2bdad8450839da218cbc410070146a49a14cd57972\",\"urls\":[\"bzzr://378c34999997ed44ce1b737d3e20ccc1afb31a530798c3a543e2bd5d54d8e8c1\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/Ownable.sol\":{\"keccak256\":\"0xa61d31759a177fc38a5dcf34387cfc9870bbe64f946c14c380d13ddcd9aa6113\",\"urls\":[\"bzzr://7d8b5611ce1d97b28de5d10d5569fe2bd710e851f55b02d628b7a881ca9a9b40\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/ReentrancyGuard.sol\":{\"keccak256\":\"0x8eeae0c6814a239234e23b741950407be18bf86ccca5b1e2a44f53c1c2e678eb\",\"urls\":[\"bzzr://c189a949f46ce94256fc611ef07a53648519f61d121b95466f4cb4a2ab397465\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/Sacrifice.sol\":{\"keccak256\":\"0x2c8f9b5e39d33552cd16d3fdd84e58f2138042166ae9b351e97fe674f7e3f337\",\"urls\":[\"bzzr://a438edd320ea1fa8141d54002897c3a50cf6cb13b07b4088d01ffb099bb9e859\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/TokenBridgeMediator.sol\":{\"keccak256\":\"0x7bcf6f7e97e77b19dc9c91ebc02a8e7b8210fc450338a5a549b4af0ff76b0254\",\"urls\":[\"bzzr://db9f6e263190a5b0681ed7e52308e112d218bb5881cb2a391da164c126a61f6e\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/TransferInfoStorage.sol\":{\"keccak256\":\"0xf284bf49c93b62b92ba14c5eb87c1f94b4893bf7c65499f254dd6a03363071f2\",\"urls\":[\"bzzr://6cdf94e9fd04016ed2a8d3ada76e413c0aefa1d2346259a4a4c60f5eff3dde1b\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/Upgradeable.sol\":{\"keccak256\":\"0xbfbec6c479103b324cc0c2ab115b3d9d3226abdfa0ab19fccbfdf223a38a6511\",\"urls\":[\"bzzr://fcde383760b302df8f3a6bf5bb8371d1138c2c7bf6d15e1abf972180c181af8b\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/VersionableBridge.sol\":{\"keccak256\":\"0x20e13a4da2277be92631581b29607b525a6d8a1868d5f0bf43d970408e9b2bc0\",\"urls\":[\"bzzr://a8c1f803d409d79319f4907066a1e38a811f758142243bef553ae9ad2516814d\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/amb_erc677_to_erc677/BasicAMBErc677ToErc677.sol\":{\"keccak256\":\"0x91e67c030b00e168dea1c80324f2d7474ad378489b08d338d51c610fb6d2a40f\",\"urls\":[\"bzzr://0b48150dc67d7884b4516f8b89a999c274de9828d6749952cf3ab5da5049c49d\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/amb_erc677_to_erc677/ForeignAMBErc677ToErc677.sol\":{\"keccak256\":\"0xc90843367c8e988d02697eb76bf0c40830c12ff82a17980f2300ee04cf4d7c0e\",\"urls\":[\"bzzr://c407ced59767665e01f70a9138df0549462b9001d7de94b746ea83751e6ef086\"]},\"openzeppelin-solidity/contracts/AddressUtils.sol\":{\"keccak256\":\"0x5ed3dc711dbb34917afff3c753adf3b0580514d1339cfedaa5a73645d8ac9b56\",\"urls\":[\"bzzr://d597eeb695a3d64766453239e973ddd65994c258ab8d5cab0d90103033ce85fc\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xa1c5e1d9ebbf654d332ca8e7a5c04a6a6a9d142eeaab3b988c2c909c81a62bef\",\"urls\":[\"bzzr://d062fb4a1b6de1f036ee0e73364a2532c4757eb68e95dd8c5cbb2d17b8732c6a\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd5feb2643c87547e65b8d6f1af02539b1dee1ad53046945e237eaa8ba649c93b\",\"urls\":[\"bzzr://69768215a261b30a376a901b83b1e6716e3916c9fd791ac67450c283e62212ad\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol\":{\"keccak256\":\"0x516a17244073b518096ced7c8c94924cb29746ef0a4b6cc6cde125ac0406a419\",\"urls\":[\"bzzr://7addb1b5cad767651b9bcd688ba5b08769c1f3b70a470e34752a7717756d090d\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506134ea806100206000396000f3006080604052600436106101df5763ffffffff60e060020a60003504166301e4f53a81146101e45780630950d5151461020a5780630b26cf661461022257806318d8f9c9146102435780632bd0bb0514610274578063392e53cd1461029e5780633dd95d1b146102c75780633e6968b6146102df578063437764df146102f457806343b37dd31461033e5780634b94f815146103535780634fb3fef71461036857806358bf7c791461038057806359339982146103a157806367eeba0c146103b957806369ffa08a146103ce5780636e5d6bea146103f5578063871c076014610416578063879ce6761461042b5780638aa1949a146104435780638b6c0354146104585780638da5cb5b1461047c57806395e54a17146104915780639a4a4395146104a65780639cb7595a146104be578063a0189345146104ff578063a2a6ca2714610514578063a4c0ed361461052c578063a7444c0d1461055d578063b20d30a91461057d578063be3b625b14610595578063c0b0d022146105aa578063c6f6f2161461063f578063cd59658314610657578063dae5f0fd1461066c578063df25f3f014610681578063ea9f496814610696578063f20151e1146106ae578063f2fde38b146106c6578063f3b83791146106e7578063f968adbe146106ff575b600080fd5b3480156101f057600080fd5b50610208600160a060020a0360043516602435610714565b005b34801561021657600080fd5b506102086004356107d6565b34801561022e57600080fd5b50610208600160a060020a03600435166108a5565b34801561024f57600080fd5b506102586108cd565b60408051600160a060020a039092168252519081900360200190f35b34801561028057600080fd5b5061028c6004356108dc565b60408051918252519081900360200190f35b3480156102aa57600080fd5b506102b3610999565b604080519115158252519081900360200190f35b3480156102d357600080fd5b506102086004356109ea565b3480156102eb57600080fd5b5061028c610aaa565b34801561030057600080fd5b50610309610ab3565b604080517fffffffff000000000000000000000000000000000000000000000000000000009092168252519081900360200190f35b34801561034a57600080fd5b5061028c610ad7565b34801561035f57600080fd5b5061028c610b25565b34801561037457600080fd5b5061028c600435610b72565b34801561038c57600080fd5b50610208600160a060020a0360043516610bed565b3480156103ad57600080fd5b506102b3600435610d91565b3480156103c557600080fd5b5061028c610e5a565b3480156103da57600080fd5b50610208600160a060020a0360043581169060243516610ea8565b34801561040157600080fd5b50610208600160a060020a0360043516610f54565b34801561042257600080fd5b50610258610f79565b34801561043757600080fd5b506102b3600435610fd0565b34801561044f57600080fd5b5061028c61101a565b34801561046457600080fd5b50610208600160a060020a0360043516602435611068565b34801561048857600080fd5b506102586110e8565b34801561049d57600080fd5b5061028c61113f565b3480156104b257600080fd5b50610208600435611199565b3480156104ca57600080fd5b506104d36114ea565b6040805167ffffffffffffffff9485168152928416602084015292168183015290519081900360600190f35b34801561050b57600080fd5b5061028c6114f5565b34801561052057600080fd5b50610208600435611543565b34801561053857600080fd5b506102b360048035600160a060020a03169060248035916044359182019101356115df565b34801561056957600080fd5b50610208600435602435151560443561167c565b34801561058957600080fd5b506102086004356117d7565b3480156105a157600080fd5b5061028c611897565b3480156105b657600080fd5b506040805160608181019092526102b391600160a060020a03600480358216936024358316936044359093169236929160c49160649060039083908390808284375050604080518082018252949796958181019594509250600291508390839080828437509396505083359450505060208201359160400135600160a060020a031690506118e5565b34801561064b57600080fd5b50610208600435611ab1565b34801561066357600080fd5b50610258611b49565b34801561067857600080fd5b5061028c611ba0565b34801561068d57600080fd5b5061028c611bee565b3480156106a257600080fd5b506102b3600435611c3c565b3480156106ba57600080fd5b50610208600435611c87565b3480156106d257600080fd5b50610208600160a060020a0360043516611d03565b3480156106f357600080fd5b50610208600435611d28565b34801561070b57600080fd5b5061028c611d4d565b600061071e611d9b565b1561072857600080fd5b6107306108cd565b905061073b82611c3c565b151561074657600080fd5b610757610751610aaa565b83611dec565b6107616001611eb5565b61077b600160a060020a038216338463ffffffff611f1016565b6107856000611eb5565b6107d1813384866040516020018082600160a060020a0316600160a060020a03166c01000000000000000000000000028152601401915050604051602081830303815290604052611fb3565b505050565b6000806107e1611b49565b600160a060020a031633146107f557600080fd5b6107fd610f79565b600160a060020a031661080e611fea565b600160a060020a03161461082157600080fd5b61082a83610d91565b1561083457600080fd5b61083d83612062565b915061084883612131565b9050610853836121b4565b61085d8282612286565b60408051600160a060020a038416815260208101839052815185927f06297b0797e3363e96e454edd4ab62862051bf559a7a431ce09415306771d133928290030190a2505050565b6108ad6110e8565b600160a060020a031633146108c157600080fd5b6108ca816122b8565b50565b60006108d7612343565b905090565b60008060008360405160200180807f746f74616c5370656e74506572446179000000000000000000000000000000008152506010018281526020019150506040516020818303038152906040526040518082805190602001908083835b602083106109585780518252601f199092019160209182019101610939565b51815160209384036101000a600019018019909216911617905260408051929094018290039091208652850195909552929092016000205495945050505050565b7f0a6f646cd611241d8073675e00d1a1ff700fbf1b53fcf473de56d1e6e4b714ba60005260046020527f078d888f9b66f3f8bfa10909e31f1e16240db73449f0500afdbbe3a70da457cc5460ff1690565b6109f26110e8565b600160a060020a03163314610a0657600080fd5b610a0e61101a565b811180610a19575080155b1515610a2457600080fd5b7f21dbcab260e413c20dc13c28b7db95e2b423d1135f42bb8b7d5214a92270d237600090815260209081527fadd938dbd083a16bae12238cd914fca0afc7a30edb55b1cd5c7f1823f1b0e4218290556040805183815290517f9bebf928b90863f24cc31f726a3a7545efd409f1dcf552301b1ee3710da70d3b929181900390910190a150565b62015180420490565b7f76595b560000000000000000000000000000000000000000000000000000000090565b7f21dbcab260e413c20dc13c28b7db95e2b423d1135f42bb8b7d5214a92270d23760009081526020527fadd938dbd083a16bae12238cd914fca0afc7a30edb55b1cd5c7f1823f1b0e4215490565b7f3db340e280667ee926fa8c51e8f9fcf88a0ff221a66d84d63b4778127d97d13960009081526020527ef98556deae64bbaa11436ee534ae029e85ed112aff9b71330af4c2d320eac95490565b60008060008360405160200180807f746f74616c457865637574656450657244617900000000000000000000000000815250601301828152602001915050604051602081830303815290604052604051808280519060200190808383602083106109585780518252601f199092019160209182019101610939565b60008060008030600160a060020a0316636fde82026040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015610c3157600080fd5b505af1158015610c45573d6000803e3d6000fd5b505050506040513d6020811015610c5b57600080fd5b5051600160a060020a03163314610c7157600080fd5b84600160a060020a0381161515610c8757600080fd5b610c8f612343565b600160a060020a03166370a08231306040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a03168152602001915050602060405180830381600087803b158015610ce957600080fd5b505af1158015610cfd573d6000803e3d6000fd5b505050506040513d6020811015610d1357600080fd5b50519450610d1f610b25565b9350838511610d2d57600080fd5b8385039250610d3a61113f565b915060008211610d4957600080fd5b81831115610d55578192505b610d66610d60610aaa565b84611dec565b610d7e610d79858563ffffffff61239a16565b6123ad565b610d898687856123f9565b505050505050565b6000600460008360405160200180807f6d65737361676546697865640000000000000000000000000000000000000000815250600c0182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b60208310610e165780518252601f199092019160209182019101610df7565b51815160209384036101000a600019018019909216911617905260408051929094018290039091208652850195909552929092016000205460ff1695945050505050565b7f4a6a899679f26b73530d8cf1001e83b6f7702e04b6fdb98f3c62dc7e47e041a560009081526020527f1ab29a5cca988aee50edccdd61c5bcaa7ad4b29a03b7ee50f298ceccfe14cc4e5490565b30600160a060020a0316636fde82026040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015610ee657600080fd5b505af1158015610efa573d6000803e3d6000fd5b505050506040513d6020811015610f1057600080fd5b5051600160a060020a03163314610f2657600080fd5b610f2e612343565b600160a060020a0383811691161415610f4657600080fd5b610f508282612598565b5050565b610f5c6110e8565b600160a060020a03163314610f7057600080fd5b6108ca816125d6565b7f98aa806e31e94a687a31c65769cb99670064dd7f5a87526da075c5fb4eab988060005260026020527f0c1206883be66049a02d4937078367c00b3d71dd1a9465df969363c6ddeac96d54600160a060020a031690565b600080610ff383610fe7610fe2610aaa565b610b72565b9063ffffffff61239a16565b905080610ffe610ad7565b10158015611013575061100f61101a565b8311155b9392505050565b7fc0ed44c192c86d1cc1ba51340b032c2766b4a2b0041031de13c46dd7104888d560009081526020527ff8e983ee86e5e377e9e34c9131b266382c3f04113d20de077f9e12663c7a646b5490565b611070611b49565b600160a060020a0316331461108457600080fd5b61108c610f79565b600160a060020a031661109d611fea565b600160a060020a0316146110b057600080fd5b6110b981610fd0565b156110de576110cf6110c9610aaa565b8261264d565b6110d982826126d3565b610f50565b610f50828261274d565b7f02016836a56b71f0d02689e69e326f4f4c1b9057164ef592671cf0d37c8040c060005260026020527fb7802e97e87ef2842a6cce7da7ffaeaedaa2f61a6a7870b23d9d01fc9b73712e54600160a060020a031690565b600080600080600061114f611d4d565b9350611159610e5a565b925061116b611166610aaa565b6108dc565b915081831161117b57600061117f565b8183035b905080841061118e5780611190565b835b94505050505090565b600060606111a5611b49565b600160a060020a031663cb08a10c846040518263ffffffff1660e060020a028152600401808260001916600019168152602001915050602060405180830381600087803b1580156111f557600080fd5b505af1158015611209573d6000803e3d6000fd5b505050506040513d602081101561121f57600080fd5b50511561122b57600080fd5b30611234611b49565b600160a060020a0316633f9a8e7e856040518263ffffffff1660e060020a028152600401808260001916600019168152602001915050602060405180830381600087803b15801561128457600080fd5b505af1158015611298573d6000803e3d6000fd5b505050506040513d60208110156112ae57600080fd5b5051600160a060020a0316146112c357600080fd5b6112cb610f79565b600160a060020a03166112dc611b49565b600160a060020a0316634a610b04856040518263ffffffff1660e060020a028152600401808260001916600019168152602001915050602060405180830381600087803b15801561132c57600080fd5b505af1158015611340573d6000803e3d6000fd5b505050506040513d602081101561135657600080fd5b5051600160a060020a03161461136b57600080fd5b50506040805160248082018490528251808303909101815260449091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f0950d51500000000000000000000000000000000000000000000000000000000908117909152906113df611b49565b600160a060020a031663dc8601b36113f5610f79565b836113fe611897565b6040518463ffffffff1660e060020a0281526004018084600160a060020a0316600160a060020a0316815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b8381101561146b578181015183820152602001611453565b50505050905090810190601f1680156114985780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b1580156114b957600080fd5b505af11580156114cd573d6000803e3d6000fd5b505050506040513d60208110156114e357600080fd5b5050505050565b600160036000909192565b7f145286dc85799b6fb9fe322391ba2d95683077b2adf34dd576dedc437e537ba760009081526020527fba10c7a68bf463c41368d64adcf7df23c0de931ea3b09f061e2dfec302fef95f5490565b61154b6110e8565b600160a060020a0316331461155f57600080fd5b6000811180156115755750611572610e5a565b81105b80156115875750611584611d4d565b81105b151561159257600080fd5b7fbbb088c505d18e049d114c7c91f11724e69c55ad6c5397e2b929e68b41fa05d160009081526020527f8df5c48c6b6e11d97548adc824ba0c99103ec09830fa5d53a179984085e6eaa055565b6000806115ea6108cd565b905033600160a060020a0382161461160157600080fd5b611609611d9b565b15156116345761161885611c3c565b151561162357600080fd5b61163461162e610aaa565b86611dec565b61167081878787878080601f01602080910402602001604051908101604052809392919081815260200183838082843750611fb3945050505050565b50600195945050505050565b600080600030600160a060020a0316636fde82026040518163ffffffff1660e060020a028152600401602060405180830381600087803b1580156116bf57600080fd5b505af11580156116d3573d6000803e3d6000fd5b505050506040513d60208110156116e957600080fd5b5051600160a060020a031633146116ff57600080fd5b611708866127ee565b9093509150600160a060020a038316158015906117255750600082115b80156117315750838210155b151561173c57600080fd5b61175c6117578561174b6114f5565b9063ffffffff61297516565b612987565b61176c828563ffffffff61297516565b905061177881876129d4565b6040805185815260208101839052815188927f5bcec6564fe8d2cbb4e4eb8237510ceb6b291a5c2ee2e429948d25e9c924c1fa928290030190a28415610d89576117c0611d4d565b8411156117cc57600080fd5b610d898384866123f9565b6117df6110e8565b600160a060020a031633146117f357600080fd5b6117fb611d4d565b811180611806575080155b151561181157600080fd5b7f4a6a899679f26b73530d8cf1001e83b6f7702e04b6fdb98f3c62dc7e47e041a5600090815260209081527f1ab29a5cca988aee50edccdd61c5bcaa7ad4b29a03b7ee50f298ceccfe14cc4e8290556040805183815290517fad4123ae17c414d9c6d2fec478b402e6b01856cc250fd01fbfd252fda0089d3c929181900390910190a150565b7f2dfd6c9f781bb6bbb5369c114e949b69ebb440ef3d4dd6b2836225eb1dc3a2be60009081526020527f2de0d2cdc19d356cb53b5984f91bfd3b31fe0c678a0d190a6db39274bb34753f5490565b60408051600481526024810182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f6fde8202000000000000000000000000000000000000000000000000000000001781529151815160009330939291829190808383895b8381101561196657818101518382015260200161194e565b50505050905090810190601f1680156119935780820380516001836020036101000a031916815260200191505b509150506000604051808303816000865af19150501580611a25575030600160a060020a0316636fde82026040518163ffffffff1660e060020a028152600401602060405180830381600087803b1580156119ed57600080fd5b505af1158015611a01573d6000803e3d6000fd5b505050506040513d6020811015611a1757600080fd5b5051600160a060020a031633145b80611a2f57503330145b1515611a3a57600080fd5b611a42610999565b15611a4c57600080fd5b611a55896122b8565b611a5e886125d6565b611a6787612a56565b611a7086612ae1565b611a7985612c3e565b611a8284612d13565b611a8b83612d74565b611a9482612ddd565b611a9c612eb4565b611aa4610999565b9998505050505050505050565b611ab96110e8565b600160a060020a03163314611acd57600080fd5b801580611af15750611add611bee565b81118015611af15750611aee610e5a565b81105b1515611afc57600080fd5b7f0f8803acad17c63ee38bf2de71e1888bc7a079a6f73658e274b08018bea4e29c60009081526020527f9de0f81379b4d8e60fe509315d071b56e7b732abaf193e74e0d15808b0951d0955565b7f811bbb11e8899da471f0e69a3ed55090fc90215227fc5fb1cb0d6e962ea7b74f60005260026020527fb4ed64697d3ef8518241966f7c6f28b0d72f20f51198717d198d2d55076c593d54600160a060020a031690565b7f1e8ecaafaddea96ed9ac6d2642dcdfe1bebe58a930b1085842d8fc122b371ee560009081526020527fd5c78dd9468716ca9bb96be25d56436811b20aab3523a9904b12deef1cab239d5490565b7fbbb088c505d18e049d114c7c91f11724e69c55ad6c5397e2b929e68b41fa05d160009081526020527f8df5c48c6b6e11d97548adc824ba0c99103ec09830fa5d53a179984085e6eaa05490565b600080611c4e83610fe7611166610aaa565b905080611c59610e5a565b10158015611c6e5750611c6a611d4d565b8311155b80156110135750611c7d611bee565b9092101592915050565b611c8f6110e8565b600160a060020a03163314611ca357600080fd5b611cab610ad7565b8110611cb657600080fd5b7fc0ed44c192c86d1cc1ba51340b032c2766b4a2b0041031de13c46dd7104888d560009081526020527ff8e983ee86e5e377e9e34c9131b266382c3f04113d20de077f9e12663c7a646b55565b611d0b6110e8565b600160a060020a03163314611d1f57600080fd5b6108ca81612ddd565b611d306110e8565b600160a060020a03163314611d4457600080fd5b6108ca81612d13565b7f0f8803acad17c63ee38bf2de71e1888bc7a079a6f73658e274b08018bea4e29c60009081526020527f9de0f81379b4d8e60fe509315d071b56e7b732abaf193e74e0d15808b0951d095490565b7f6168652c307c1e813ca11cfb3a601f1cf3b22452021a5052d8b05f1f1f8a3e9260005260046020527fcb8d022f2163402334a4962e3279c5def3417d3d8dab9e27ba26e81e3f8337845460ff1690565b611df981610fe7846108dc565b6000808460405160200180807f746f74616c5370656e74506572446179000000000000000000000000000000008152506010018281526020019150506040516020818303038152906040526040518082805190602001908083835b60208310611e735780518252601f199092019160209182019101611e54565b51815160209384036101000a60001901801990921691161790526040805192909401829003909120865285019590955292909201600020939093555050505050565b7f6168652c307c1e813ca11cfb3a601f1cf3b22452021a5052d8b05f1f1f8a3e9260005260046020527fcb8d022f2163402334a4962e3279c5def3417d3d8dab9e27ba26e81e3f833784805460ff1916911515919091179055565b604080517f23b872dd000000000000000000000000000000000000000000000000000000008152600160a060020a038481166004830152306024830152604482018490529151918516916323b872dd9160648082019260009290919082900301818387803b158015611f8157600080fd5b505af1158015611f95573d6000803e3d6000fd5b505050503d156107d15760206000803e60005115156107d157600080fd5b611fbb611d9b565b1515611fe457611fd0610d7983610fe7610b25565b611fe483611fde8584612f0b565b846123f9565b50505050565b6000611ff4611b49565b600160a060020a031663d67bdd256040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561203157600080fd5b505af1158015612045573d6000803e3d6000fd5b505050506040513d602081101561205b57600080fd5b5051905090565b6000600260008360405160200180807f6d657373616765526563697069656e740000000000000000000000000000000081525060100182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b602083106120e75780518252601f1990920191602091820191016120c8565b51815160209384036101000a6000190180199092169116179052604080519290940182900390912086528501959095529290920160002054600160a060020a031695945050505050565b60008060008360405160200180807f6d65737361676556616c75650000000000000000000000000000000000000000815250600c018260001916600019168152602001915050604051602081830303815290604052604051808280519060200190808383602083106109585780518252601f199092019160209182019101610939565b6001600460008360405160200180807f6d65737361676546697865640000000000000000000000000000000000000000815250600c0182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b602083106122395780518252601f19909201916020918201910161221a565b51815160209384036101000a60001901801990921691161790526040805192909401829003909120865285019590955292909201600020805460ff19169415159490941790935550505050565b612295610d798261174b610b25565b610f5082826122a26108cd565b600160a060020a0316919063ffffffff612f6516565b6122c181612fc8565b15156122cc57600080fd5b7f811bbb11e8899da471f0e69a3ed55090fc90215227fc5fb1cb0d6e962ea7b74f60005260026020527fb4ed64697d3ef8518241966f7c6f28b0d72f20f51198717d198d2d55076c593d805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b7fa8b0ade3e2b734f043ce298aca4cc8d19d74270223f34531d0988b7d00cba21d60005260026020527f603cd9dcbfa185d5c37504f4c8b3f16117ed744fba48d08b7aad44a162af1c9354600160a060020a031690565b818101828110156123a757fe5b92915050565b7f3db340e280667ee926fa8c51e8f9fcf88a0ff221a66d84d63b4778127d97d13960009081526020527ef98556deae64bbaa11436ee534ae029e85ed112aff9b71330af4c2d320eac955565b60408051600160a060020a038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f8b6c03540000000000000000000000000000000000000000000000000000000090811790915290600061247c611b49565b600160a060020a031663dc8601b3612492610f79565b8461249b611897565b6040518463ffffffff1660e060020a0281526004018084600160a060020a0316600160a060020a0316815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b838110156125085781810151838201526020016124f0565b50505050905090810190601f1680156125355780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b15801561255657600080fd5b505af115801561256a573d6000803e3d6000fd5b505050506040513d602081101561258057600080fd5b5051905061258e8185612fd0565b610d898187613052565b80600160a060020a03811615156125ae57600080fd5b600160a060020a03831615156125cc576125c782613140565b6107d1565b6107d1838361314c565b7f98aa806e31e94a687a31c65769cb99670064dd7f5a87526da075c5fb4eab988060005260026020527f0c1206883be66049a02d4937078367c00b3d71dd1a9465df969363c6ddeac96d805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b61265a81610fe784610b72565b6000808460405160200180807f746f74616c45786563757465645065724461790000000000000000000000000081525060130182815260200191505060405160208183030381529060405260405180828051906020019080838360208310611e735780518252601f199092019160209182019101611e54565b6000806126df836131f9565b91506126e961320f565b90506126fa610d798361174b610b25565b61270784836122a26108cd565b6040805183815290518291600160a060020a038716917f2f9a6098d4503a127779ba975f5f6b04f842362b1809f346989e9abc0b4dedb69181900360200190a350505050565b600080600061275a61320f565b9250612765836127ee565b9092509050600160a060020a03821615801561277f575080155b151561278a57600080fd5b61279961175785610fe76114f5565b6127a4858585613256565b60408051600160a060020a038716815260208101869052815185927f3344bbb992063ed4b833dabd5d5e55fc18df085bb96654e83aafbfe22e4116ff928290030190a25050505050565b600080600260008460405160200180807f74784f75744f664c696d6974526563697069656e74000000000000000000000081525060150182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b602083106128745780518252601f199092019160209182019101612855565b51815160209384036101000a600019018019909216911617905260408051929094018290039091208652858101969096525092830160009081205484517f74784f75744f664c696d697456616c75650000000000000000000000000000008188015260318082018b9052865180830390910181526051909101958690528051600160a060020a0390921698509195869592945091925082918401908083835b602083106129325780518252601f199092019160209182019101612913565b51815160209384036101000a6000190180199092169116179052604080519290940182900390912086528501959095529290920160002054949694955050505050565b60008282111561298157fe5b50900390565b7f145286dc85799b6fb9fe322391ba2d95683077b2adf34dd576dedc437e537ba760009081526020527fba10c7a68bf463c41368d64adcf7df23c0de931ea3b09f061e2dfec302fef95f55565b816000808360405160200180807f74784f75744f664c696d697456616c7565000000000000000000000000000000815250601101826000191660001916815260200191505060405160208183030381529060405260405180828051906020019080838360208310611e735780518252601f199092019160209182019101611e54565b612a5f81612fc8565b1515612a6a57600080fd5b7fa8b0ade3e2b734f043ce298aca4cc8d19d74270223f34531d0988b7d00cba21d60005260026020527f603cd9dcbfa185d5c37504f4c8b3f16117ed744fba48d08b7aad44a162af1c93805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60408101516000108015612afc575060408101516020820151115b8015612b0c575060208101518151115b1515612b1757600080fd5b80517f4a6a899679f26b73530d8cf1001e83b6f7702e04b6fdb98f3c62dc7e47e041a5600090815260208181527f1ab29a5cca988aee50edccdd61c5bcaa7ad4b29a03b7ee50f298ceccfe14cc4e92909255908201517f0f8803acad17c63ee38bf2de71e1888bc7a079a6f73658e274b08018bea4e29c82527f9de0f81379b4d8e60fe509315d071b56e7b732abaf193e74e0d15808b0951d095560408201517fbbb088c505d18e049d114c7c91f11724e69c55ad6c5397e2b929e68b41fa05d182527f8df5c48c6b6e11d97548adc824ba0c99103ec09830fa5d53a179984085e6eaa0557fad4123ae17c414d9c6d2fec478b402e6b01856cc250fd01fbfd252fda0089d3c9082905b60200201516040518082815260200191505060405180910390a150565b8051602082015110612c4f57600080fd5b80517f21dbcab260e413c20dc13c28b7db95e2b423d1135f42bb8b7d5214a92270d237600090815260208181527fadd938dbd083a16bae12238cd914fca0afc7a30edb55b1cd5c7f1823f1b0e42192909255908201517fc0ed44c192c86d1cc1ba51340b032c2766b4a2b0041031de13c46dd7104888d582527ff8e983ee86e5e377e9e34c9131b266382c3f04113d20de077f9e12663c7a646b557f9bebf928b90863f24cc31f726a3a7545efd409f1dcf552301b1ee3710da70d3b908290612c21565b612d1b61334c565b811115612d2757600080fd5b7f2dfd6c9f781bb6bbb5369c114e949b69ebb440ef3d4dd6b2836225eb1dc3a2be60009081526020527f2de0d2cdc19d356cb53b5984f91bfd3b31fe0c678a0d190a6db39274bb34753f55565b604c1981138015612d855750604d81125b1515612d9057600080fd5b7f1e8ecaafaddea96ed9ac6d2642dcdfe1bebe58a930b1085842d8fc122b371ee560009081526020527fd5c78dd9468716ca9bb96be25d56436811b20aab3523a9904b12deef1cab239d55565b600160a060020a0381161515612df257600080fd5b7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0612e1b6110e8565b60408051600160a060020a03928316815291841660208301528051918290030190a17f02016836a56b71f0d02689e69e326f4f4c1b9057164ef592671cf0d37c8040c060005260026020527fb7802e97e87ef2842a6cce7da7ffaeaedaa2f61a6a7870b23d9d01fc9b73712e805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b7f0a6f646cd611241d8073675e00d1a1ff700fbf1b53fcf473de56d1e6e4b714ba60005260046020527f078d888f9b66f3f8bfa10909e31f1e16240db73449f0500afdbbe3a70da457cc805460ff19166001179055565b80518290600010156123a7578151601414612f2557600080fd5b612f2e82613393565b9050600160a060020a0381161515612f4557600080fd5b612f4d61339a565b600160a060020a03828116911614156123a757600080fd5b82600160a060020a031663a9059cbb83836040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050600060405180830381600087803b158015611f8157600080fd5b6000903b1190565b806000808460405160200180807f6d65737361676556616c75650000000000000000000000000000000000000000815250600c01826000191660001916815260200191505060405160208183030381529060405260405180828051906020019080838360208310611e735780518252601f199092019160209182019101611e54565b80600260008460405160200180807f6d657373616765526563697069656e740000000000000000000000000000000081525060100182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b602083106130d65780518252601f1990920191602091820191016130b7565b51815160209384036101000a60001901801990921691161790526040805192909401829003909120865285019590955292909201600020805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0395909516949094179093555050505050565b3031610f5082826133a4565b604080517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290518391600091600160a060020a038416916370a0823191602480830192602092919082900301818787803b1580156131b157600080fd5b505af11580156131c5573d6000803e3d6000fd5b505050506040513d60208110156131db57600080fd5b50519050611fe4600160a060020a038516848363ffffffff612f6516565b60006123a782613207611ba0565b600003613405565b6000613219611b49565b600160a060020a031663669f618b6040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561203157600080fd5b82600260008360405160200180807f74784f75744f664c696d6974526563697069656e74000000000000000000000081525060150182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b602083106132da5780518252601f1990920191602091820191016132bb565b51815160209384036101000a60001901801990921691161790526040805192909401829003909120865285019590955292909201600020805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039590951694909417909355506107d19150839050826129d4565b6000613356611b49565b600160a060020a031663e5789d036040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561203157600080fd5b6014015190565b60006108d7610f79565b604051600160a060020a0383169082156108fc029083906000818181858888f193505050501515610f505780826133d961348e565b600160a060020a039091168152604051908190036020019082f0801580156114e3573d6000803e3d6000fd5b60008115156134155750816123a7565b60008213156134395761343283600a84900a63ffffffff61345016565b90506123a7565b611013836000849003600a0a63ffffffff61347916565b6000821515613461575060006123a7565b5081810281838281151561347157fe5b04146123a757fe5b6000818381151561348657fe5b049392505050565b60405160218061349e833901905600608060405260405160208060218339810160405251600160a060020a038116ff00a165627a7a7230582017b3e7c6d675c558d749d97ce64669015cab10f0eb0bfdac0a520f15e8cad0010029",
  "deployedBytecode": "0x6080604052600436106101df5763ffffffff60e060020a60003504166301e4f53a81146101e45780630950d5151461020a5780630b26cf661461022257806318d8f9c9146102435780632bd0bb0514610274578063392e53cd1461029e5780633dd95d1b146102c75780633e6968b6146102df578063437764df146102f457806343b37dd31461033e5780634b94f815146103535780634fb3fef71461036857806358bf7c791461038057806359339982146103a157806367eeba0c146103b957806369ffa08a146103ce5780636e5d6bea146103f5578063871c076014610416578063879ce6761461042b5780638aa1949a146104435780638b6c0354146104585780638da5cb5b1461047c57806395e54a17146104915780639a4a4395146104a65780639cb7595a146104be578063a0189345146104ff578063a2a6ca2714610514578063a4c0ed361461052c578063a7444c0d1461055d578063b20d30a91461057d578063be3b625b14610595578063c0b0d022146105aa578063c6f6f2161461063f578063cd59658314610657578063dae5f0fd1461066c578063df25f3f014610681578063ea9f496814610696578063f20151e1146106ae578063f2fde38b146106c6578063f3b83791146106e7578063f968adbe146106ff575b600080fd5b3480156101f057600080fd5b50610208600160a060020a0360043516602435610714565b005b34801561021657600080fd5b506102086004356107d6565b34801561022e57600080fd5b50610208600160a060020a03600435166108a5565b34801561024f57600080fd5b506102586108cd565b60408051600160a060020a039092168252519081900360200190f35b34801561028057600080fd5b5061028c6004356108dc565b60408051918252519081900360200190f35b3480156102aa57600080fd5b506102b3610999565b604080519115158252519081900360200190f35b3480156102d357600080fd5b506102086004356109ea565b3480156102eb57600080fd5b5061028c610aaa565b34801561030057600080fd5b50610309610ab3565b604080517fffffffff000000000000000000000000000000000000000000000000000000009092168252519081900360200190f35b34801561034a57600080fd5b5061028c610ad7565b34801561035f57600080fd5b5061028c610b25565b34801561037457600080fd5b5061028c600435610b72565b34801561038c57600080fd5b50610208600160a060020a0360043516610bed565b3480156103ad57600080fd5b506102b3600435610d91565b3480156103c557600080fd5b5061028c610e5a565b3480156103da57600080fd5b50610208600160a060020a0360043581169060243516610ea8565b34801561040157600080fd5b50610208600160a060020a0360043516610f54565b34801561042257600080fd5b50610258610f79565b34801561043757600080fd5b506102b3600435610fd0565b34801561044f57600080fd5b5061028c61101a565b34801561046457600080fd5b50610208600160a060020a0360043516602435611068565b34801561048857600080fd5b506102586110e8565b34801561049d57600080fd5b5061028c61113f565b3480156104b257600080fd5b50610208600435611199565b3480156104ca57600080fd5b506104d36114ea565b6040805167ffffffffffffffff9485168152928416602084015292168183015290519081900360600190f35b34801561050b57600080fd5b5061028c6114f5565b34801561052057600080fd5b50610208600435611543565b34801561053857600080fd5b506102b360048035600160a060020a03169060248035916044359182019101356115df565b34801561056957600080fd5b50610208600435602435151560443561167c565b34801561058957600080fd5b506102086004356117d7565b3480156105a157600080fd5b5061028c611897565b3480156105b657600080fd5b506040805160608181019092526102b391600160a060020a03600480358216936024358316936044359093169236929160c49160649060039083908390808284375050604080518082018252949796958181019594509250600291508390839080828437509396505083359450505060208201359160400135600160a060020a031690506118e5565b34801561064b57600080fd5b50610208600435611ab1565b34801561066357600080fd5b50610258611b49565b34801561067857600080fd5b5061028c611ba0565b34801561068d57600080fd5b5061028c611bee565b3480156106a257600080fd5b506102b3600435611c3c565b3480156106ba57600080fd5b50610208600435611c87565b3480156106d257600080fd5b50610208600160a060020a0360043516611d03565b3480156106f357600080fd5b50610208600435611d28565b34801561070b57600080fd5b5061028c611d4d565b600061071e611d9b565b1561072857600080fd5b6107306108cd565b905061073b82611c3c565b151561074657600080fd5b610757610751610aaa565b83611dec565b6107616001611eb5565b61077b600160a060020a038216338463ffffffff611f1016565b6107856000611eb5565b6107d1813384866040516020018082600160a060020a0316600160a060020a03166c01000000000000000000000000028152601401915050604051602081830303815290604052611fb3565b505050565b6000806107e1611b49565b600160a060020a031633146107f557600080fd5b6107fd610f79565b600160a060020a031661080e611fea565b600160a060020a03161461082157600080fd5b61082a83610d91565b1561083457600080fd5b61083d83612062565b915061084883612131565b9050610853836121b4565b61085d8282612286565b60408051600160a060020a038416815260208101839052815185927f06297b0797e3363e96e454edd4ab62862051bf559a7a431ce09415306771d133928290030190a2505050565b6108ad6110e8565b600160a060020a031633146108c157600080fd5b6108ca816122b8565b50565b60006108d7612343565b905090565b60008060008360405160200180807f746f74616c5370656e74506572446179000000000000000000000000000000008152506010018281526020019150506040516020818303038152906040526040518082805190602001908083835b602083106109585780518252601f199092019160209182019101610939565b51815160209384036101000a600019018019909216911617905260408051929094018290039091208652850195909552929092016000205495945050505050565b7f0a6f646cd611241d8073675e00d1a1ff700fbf1b53fcf473de56d1e6e4b714ba60005260046020527f078d888f9b66f3f8bfa10909e31f1e16240db73449f0500afdbbe3a70da457cc5460ff1690565b6109f26110e8565b600160a060020a03163314610a0657600080fd5b610a0e61101a565b811180610a19575080155b1515610a2457600080fd5b7f21dbcab260e413c20dc13c28b7db95e2b423d1135f42bb8b7d5214a92270d237600090815260209081527fadd938dbd083a16bae12238cd914fca0afc7a30edb55b1cd5c7f1823f1b0e4218290556040805183815290517f9bebf928b90863f24cc31f726a3a7545efd409f1dcf552301b1ee3710da70d3b929181900390910190a150565b62015180420490565b7f76595b560000000000000000000000000000000000000000000000000000000090565b7f21dbcab260e413c20dc13c28b7db95e2b423d1135f42bb8b7d5214a92270d23760009081526020527fadd938dbd083a16bae12238cd914fca0afc7a30edb55b1cd5c7f1823f1b0e4215490565b7f3db340e280667ee926fa8c51e8f9fcf88a0ff221a66d84d63b4778127d97d13960009081526020527ef98556deae64bbaa11436ee534ae029e85ed112aff9b71330af4c2d320eac95490565b60008060008360405160200180807f746f74616c457865637574656450657244617900000000000000000000000000815250601301828152602001915050604051602081830303815290604052604051808280519060200190808383602083106109585780518252601f199092019160209182019101610939565b60008060008030600160a060020a0316636fde82026040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015610c3157600080fd5b505af1158015610c45573d6000803e3d6000fd5b505050506040513d6020811015610c5b57600080fd5b5051600160a060020a03163314610c7157600080fd5b84600160a060020a0381161515610c8757600080fd5b610c8f612343565b600160a060020a03166370a08231306040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a03168152602001915050602060405180830381600087803b158015610ce957600080fd5b505af1158015610cfd573d6000803e3d6000fd5b505050506040513d6020811015610d1357600080fd5b50519450610d1f610b25565b9350838511610d2d57600080fd5b8385039250610d3a61113f565b915060008211610d4957600080fd5b81831115610d55578192505b610d66610d60610aaa565b84611dec565b610d7e610d79858563ffffffff61239a16565b6123ad565b610d898687856123f9565b505050505050565b6000600460008360405160200180807f6d65737361676546697865640000000000000000000000000000000000000000815250600c0182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b60208310610e165780518252601f199092019160209182019101610df7565b51815160209384036101000a600019018019909216911617905260408051929094018290039091208652850195909552929092016000205460ff1695945050505050565b7f4a6a899679f26b73530d8cf1001e83b6f7702e04b6fdb98f3c62dc7e47e041a560009081526020527f1ab29a5cca988aee50edccdd61c5bcaa7ad4b29a03b7ee50f298ceccfe14cc4e5490565b30600160a060020a0316636fde82026040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015610ee657600080fd5b505af1158015610efa573d6000803e3d6000fd5b505050506040513d6020811015610f1057600080fd5b5051600160a060020a03163314610f2657600080fd5b610f2e612343565b600160a060020a0383811691161415610f4657600080fd5b610f508282612598565b5050565b610f5c6110e8565b600160a060020a03163314610f7057600080fd5b6108ca816125d6565b7f98aa806e31e94a687a31c65769cb99670064dd7f5a87526da075c5fb4eab988060005260026020527f0c1206883be66049a02d4937078367c00b3d71dd1a9465df969363c6ddeac96d54600160a060020a031690565b600080610ff383610fe7610fe2610aaa565b610b72565b9063ffffffff61239a16565b905080610ffe610ad7565b10158015611013575061100f61101a565b8311155b9392505050565b7fc0ed44c192c86d1cc1ba51340b032c2766b4a2b0041031de13c46dd7104888d560009081526020527ff8e983ee86e5e377e9e34c9131b266382c3f04113d20de077f9e12663c7a646b5490565b611070611b49565b600160a060020a0316331461108457600080fd5b61108c610f79565b600160a060020a031661109d611fea565b600160a060020a0316146110b057600080fd5b6110b981610fd0565b156110de576110cf6110c9610aaa565b8261264d565b6110d982826126d3565b610f50565b610f50828261274d565b7f02016836a56b71f0d02689e69e326f4f4c1b9057164ef592671cf0d37c8040c060005260026020527fb7802e97e87ef2842a6cce7da7ffaeaedaa2f61a6a7870b23d9d01fc9b73712e54600160a060020a031690565b600080600080600061114f611d4d565b9350611159610e5a565b925061116b611166610aaa565b6108dc565b915081831161117b57600061117f565b8183035b905080841061118e5780611190565b835b94505050505090565b600060606111a5611b49565b600160a060020a031663cb08a10c846040518263ffffffff1660e060020a028152600401808260001916600019168152602001915050602060405180830381600087803b1580156111f557600080fd5b505af1158015611209573d6000803e3d6000fd5b505050506040513d602081101561121f57600080fd5b50511561122b57600080fd5b30611234611b49565b600160a060020a0316633f9a8e7e856040518263ffffffff1660e060020a028152600401808260001916600019168152602001915050602060405180830381600087803b15801561128457600080fd5b505af1158015611298573d6000803e3d6000fd5b505050506040513d60208110156112ae57600080fd5b5051600160a060020a0316146112c357600080fd5b6112cb610f79565b600160a060020a03166112dc611b49565b600160a060020a0316634a610b04856040518263ffffffff1660e060020a028152600401808260001916600019168152602001915050602060405180830381600087803b15801561132c57600080fd5b505af1158015611340573d6000803e3d6000fd5b505050506040513d602081101561135657600080fd5b5051600160a060020a03161461136b57600080fd5b50506040805160248082018490528251808303909101815260449091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f0950d51500000000000000000000000000000000000000000000000000000000908117909152906113df611b49565b600160a060020a031663dc8601b36113f5610f79565b836113fe611897565b6040518463ffffffff1660e060020a0281526004018084600160a060020a0316600160a060020a0316815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b8381101561146b578181015183820152602001611453565b50505050905090810190601f1680156114985780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b1580156114b957600080fd5b505af11580156114cd573d6000803e3d6000fd5b505050506040513d60208110156114e357600080fd5b5050505050565b600160036000909192565b7f145286dc85799b6fb9fe322391ba2d95683077b2adf34dd576dedc437e537ba760009081526020527fba10c7a68bf463c41368d64adcf7df23c0de931ea3b09f061e2dfec302fef95f5490565b61154b6110e8565b600160a060020a0316331461155f57600080fd5b6000811180156115755750611572610e5a565b81105b80156115875750611584611d4d565b81105b151561159257600080fd5b7fbbb088c505d18e049d114c7c91f11724e69c55ad6c5397e2b929e68b41fa05d160009081526020527f8df5c48c6b6e11d97548adc824ba0c99103ec09830fa5d53a179984085e6eaa055565b6000806115ea6108cd565b905033600160a060020a0382161461160157600080fd5b611609611d9b565b15156116345761161885611c3c565b151561162357600080fd5b61163461162e610aaa565b86611dec565b61167081878787878080601f01602080910402602001604051908101604052809392919081815260200183838082843750611fb3945050505050565b50600195945050505050565b600080600030600160a060020a0316636fde82026040518163ffffffff1660e060020a028152600401602060405180830381600087803b1580156116bf57600080fd5b505af11580156116d3573d6000803e3d6000fd5b505050506040513d60208110156116e957600080fd5b5051600160a060020a031633146116ff57600080fd5b611708866127ee565b9093509150600160a060020a038316158015906117255750600082115b80156117315750838210155b151561173c57600080fd5b61175c6117578561174b6114f5565b9063ffffffff61297516565b612987565b61176c828563ffffffff61297516565b905061177881876129d4565b6040805185815260208101839052815188927f5bcec6564fe8d2cbb4e4eb8237510ceb6b291a5c2ee2e429948d25e9c924c1fa928290030190a28415610d89576117c0611d4d565b8411156117cc57600080fd5b610d898384866123f9565b6117df6110e8565b600160a060020a031633146117f357600080fd5b6117fb611d4d565b811180611806575080155b151561181157600080fd5b7f4a6a899679f26b73530d8cf1001e83b6f7702e04b6fdb98f3c62dc7e47e041a5600090815260209081527f1ab29a5cca988aee50edccdd61c5bcaa7ad4b29a03b7ee50f298ceccfe14cc4e8290556040805183815290517fad4123ae17c414d9c6d2fec478b402e6b01856cc250fd01fbfd252fda0089d3c929181900390910190a150565b7f2dfd6c9f781bb6bbb5369c114e949b69ebb440ef3d4dd6b2836225eb1dc3a2be60009081526020527f2de0d2cdc19d356cb53b5984f91bfd3b31fe0c678a0d190a6db39274bb34753f5490565b60408051600481526024810182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f6fde8202000000000000000000000000000000000000000000000000000000001781529151815160009330939291829190808383895b8381101561196657818101518382015260200161194e565b50505050905090810190601f1680156119935780820380516001836020036101000a031916815260200191505b509150506000604051808303816000865af19150501580611a25575030600160a060020a0316636fde82026040518163ffffffff1660e060020a028152600401602060405180830381600087803b1580156119ed57600080fd5b505af1158015611a01573d6000803e3d6000fd5b505050506040513d6020811015611a1757600080fd5b5051600160a060020a031633145b80611a2f57503330145b1515611a3a57600080fd5b611a42610999565b15611a4c57600080fd5b611a55896122b8565b611a5e886125d6565b611a6787612a56565b611a7086612ae1565b611a7985612c3e565b611a8284612d13565b611a8b83612d74565b611a9482612ddd565b611a9c612eb4565b611aa4610999565b9998505050505050505050565b611ab96110e8565b600160a060020a03163314611acd57600080fd5b801580611af15750611add611bee565b81118015611af15750611aee610e5a565b81105b1515611afc57600080fd5b7f0f8803acad17c63ee38bf2de71e1888bc7a079a6f73658e274b08018bea4e29c60009081526020527f9de0f81379b4d8e60fe509315d071b56e7b732abaf193e74e0d15808b0951d0955565b7f811bbb11e8899da471f0e69a3ed55090fc90215227fc5fb1cb0d6e962ea7b74f60005260026020527fb4ed64697d3ef8518241966f7c6f28b0d72f20f51198717d198d2d55076c593d54600160a060020a031690565b7f1e8ecaafaddea96ed9ac6d2642dcdfe1bebe58a930b1085842d8fc122b371ee560009081526020527fd5c78dd9468716ca9bb96be25d56436811b20aab3523a9904b12deef1cab239d5490565b7fbbb088c505d18e049d114c7c91f11724e69c55ad6c5397e2b929e68b41fa05d160009081526020527f8df5c48c6b6e11d97548adc824ba0c99103ec09830fa5d53a179984085e6eaa05490565b600080611c4e83610fe7611166610aaa565b905080611c59610e5a565b10158015611c6e5750611c6a611d4d565b8311155b80156110135750611c7d611bee565b9092101592915050565b611c8f6110e8565b600160a060020a03163314611ca357600080fd5b611cab610ad7565b8110611cb657600080fd5b7fc0ed44c192c86d1cc1ba51340b032c2766b4a2b0041031de13c46dd7104888d560009081526020527ff8e983ee86e5e377e9e34c9131b266382c3f04113d20de077f9e12663c7a646b55565b611d0b6110e8565b600160a060020a03163314611d1f57600080fd5b6108ca81612ddd565b611d306110e8565b600160a060020a03163314611d4457600080fd5b6108ca81612d13565b7f0f8803acad17c63ee38bf2de71e1888bc7a079a6f73658e274b08018bea4e29c60009081526020527f9de0f81379b4d8e60fe509315d071b56e7b732abaf193e74e0d15808b0951d095490565b7f6168652c307c1e813ca11cfb3a601f1cf3b22452021a5052d8b05f1f1f8a3e9260005260046020527fcb8d022f2163402334a4962e3279c5def3417d3d8dab9e27ba26e81e3f8337845460ff1690565b611df981610fe7846108dc565b6000808460405160200180807f746f74616c5370656e74506572446179000000000000000000000000000000008152506010018281526020019150506040516020818303038152906040526040518082805190602001908083835b60208310611e735780518252601f199092019160209182019101611e54565b51815160209384036101000a60001901801990921691161790526040805192909401829003909120865285019590955292909201600020939093555050505050565b7f6168652c307c1e813ca11cfb3a601f1cf3b22452021a5052d8b05f1f1f8a3e9260005260046020527fcb8d022f2163402334a4962e3279c5def3417d3d8dab9e27ba26e81e3f833784805460ff1916911515919091179055565b604080517f23b872dd000000000000000000000000000000000000000000000000000000008152600160a060020a038481166004830152306024830152604482018490529151918516916323b872dd9160648082019260009290919082900301818387803b158015611f8157600080fd5b505af1158015611f95573d6000803e3d6000fd5b505050503d156107d15760206000803e60005115156107d157600080fd5b611fbb611d9b565b1515611fe457611fd0610d7983610fe7610b25565b611fe483611fde8584612f0b565b846123f9565b50505050565b6000611ff4611b49565b600160a060020a031663d67bdd256040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561203157600080fd5b505af1158015612045573d6000803e3d6000fd5b505050506040513d602081101561205b57600080fd5b5051905090565b6000600260008360405160200180807f6d657373616765526563697069656e740000000000000000000000000000000081525060100182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b602083106120e75780518252601f1990920191602091820191016120c8565b51815160209384036101000a6000190180199092169116179052604080519290940182900390912086528501959095529290920160002054600160a060020a031695945050505050565b60008060008360405160200180807f6d65737361676556616c75650000000000000000000000000000000000000000815250600c018260001916600019168152602001915050604051602081830303815290604052604051808280519060200190808383602083106109585780518252601f199092019160209182019101610939565b6001600460008360405160200180807f6d65737361676546697865640000000000000000000000000000000000000000815250600c0182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b602083106122395780518252601f19909201916020918201910161221a565b51815160209384036101000a60001901801990921691161790526040805192909401829003909120865285019590955292909201600020805460ff19169415159490941790935550505050565b612295610d798261174b610b25565b610f5082826122a26108cd565b600160a060020a0316919063ffffffff612f6516565b6122c181612fc8565b15156122cc57600080fd5b7f811bbb11e8899da471f0e69a3ed55090fc90215227fc5fb1cb0d6e962ea7b74f60005260026020527fb4ed64697d3ef8518241966f7c6f28b0d72f20f51198717d198d2d55076c593d805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b7fa8b0ade3e2b734f043ce298aca4cc8d19d74270223f34531d0988b7d00cba21d60005260026020527f603cd9dcbfa185d5c37504f4c8b3f16117ed744fba48d08b7aad44a162af1c9354600160a060020a031690565b818101828110156123a757fe5b92915050565b7f3db340e280667ee926fa8c51e8f9fcf88a0ff221a66d84d63b4778127d97d13960009081526020527ef98556deae64bbaa11436ee534ae029e85ed112aff9b71330af4c2d320eac955565b60408051600160a060020a038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f8b6c03540000000000000000000000000000000000000000000000000000000090811790915290600061247c611b49565b600160a060020a031663dc8601b3612492610f79565b8461249b611897565b6040518463ffffffff1660e060020a0281526004018084600160a060020a0316600160a060020a0316815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b838110156125085781810151838201526020016124f0565b50505050905090810190601f1680156125355780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b15801561255657600080fd5b505af115801561256a573d6000803e3d6000fd5b505050506040513d602081101561258057600080fd5b5051905061258e8185612fd0565b610d898187613052565b80600160a060020a03811615156125ae57600080fd5b600160a060020a03831615156125cc576125c782613140565b6107d1565b6107d1838361314c565b7f98aa806e31e94a687a31c65769cb99670064dd7f5a87526da075c5fb4eab988060005260026020527f0c1206883be66049a02d4937078367c00b3d71dd1a9465df969363c6ddeac96d805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b61265a81610fe784610b72565b6000808460405160200180807f746f74616c45786563757465645065724461790000000000000000000000000081525060130182815260200191505060405160208183030381529060405260405180828051906020019080838360208310611e735780518252601f199092019160209182019101611e54565b6000806126df836131f9565b91506126e961320f565b90506126fa610d798361174b610b25565b61270784836122a26108cd565b6040805183815290518291600160a060020a038716917f2f9a6098d4503a127779ba975f5f6b04f842362b1809f346989e9abc0b4dedb69181900360200190a350505050565b600080600061275a61320f565b9250612765836127ee565b9092509050600160a060020a03821615801561277f575080155b151561278a57600080fd5b61279961175785610fe76114f5565b6127a4858585613256565b60408051600160a060020a038716815260208101869052815185927f3344bbb992063ed4b833dabd5d5e55fc18df085bb96654e83aafbfe22e4116ff928290030190a25050505050565b600080600260008460405160200180807f74784f75744f664c696d6974526563697069656e74000000000000000000000081525060150182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b602083106128745780518252601f199092019160209182019101612855565b51815160209384036101000a600019018019909216911617905260408051929094018290039091208652858101969096525092830160009081205484517f74784f75744f664c696d697456616c75650000000000000000000000000000008188015260318082018b9052865180830390910181526051909101958690528051600160a060020a0390921698509195869592945091925082918401908083835b602083106129325780518252601f199092019160209182019101612913565b51815160209384036101000a6000190180199092169116179052604080519290940182900390912086528501959095529290920160002054949694955050505050565b60008282111561298157fe5b50900390565b7f145286dc85799b6fb9fe322391ba2d95683077b2adf34dd576dedc437e537ba760009081526020527fba10c7a68bf463c41368d64adcf7df23c0de931ea3b09f061e2dfec302fef95f55565b816000808360405160200180807f74784f75744f664c696d697456616c7565000000000000000000000000000000815250601101826000191660001916815260200191505060405160208183030381529060405260405180828051906020019080838360208310611e735780518252601f199092019160209182019101611e54565b612a5f81612fc8565b1515612a6a57600080fd5b7fa8b0ade3e2b734f043ce298aca4cc8d19d74270223f34531d0988b7d00cba21d60005260026020527f603cd9dcbfa185d5c37504f4c8b3f16117ed744fba48d08b7aad44a162af1c93805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60408101516000108015612afc575060408101516020820151115b8015612b0c575060208101518151115b1515612b1757600080fd5b80517f4a6a899679f26b73530d8cf1001e83b6f7702e04b6fdb98f3c62dc7e47e041a5600090815260208181527f1ab29a5cca988aee50edccdd61c5bcaa7ad4b29a03b7ee50f298ceccfe14cc4e92909255908201517f0f8803acad17c63ee38bf2de71e1888bc7a079a6f73658e274b08018bea4e29c82527f9de0f81379b4d8e60fe509315d071b56e7b732abaf193e74e0d15808b0951d095560408201517fbbb088c505d18e049d114c7c91f11724e69c55ad6c5397e2b929e68b41fa05d182527f8df5c48c6b6e11d97548adc824ba0c99103ec09830fa5d53a179984085e6eaa0557fad4123ae17c414d9c6d2fec478b402e6b01856cc250fd01fbfd252fda0089d3c9082905b60200201516040518082815260200191505060405180910390a150565b8051602082015110612c4f57600080fd5b80517f21dbcab260e413c20dc13c28b7db95e2b423d1135f42bb8b7d5214a92270d237600090815260208181527fadd938dbd083a16bae12238cd914fca0afc7a30edb55b1cd5c7f1823f1b0e42192909255908201517fc0ed44c192c86d1cc1ba51340b032c2766b4a2b0041031de13c46dd7104888d582527ff8e983ee86e5e377e9e34c9131b266382c3f04113d20de077f9e12663c7a646b557f9bebf928b90863f24cc31f726a3a7545efd409f1dcf552301b1ee3710da70d3b908290612c21565b612d1b61334c565b811115612d2757600080fd5b7f2dfd6c9f781bb6bbb5369c114e949b69ebb440ef3d4dd6b2836225eb1dc3a2be60009081526020527f2de0d2cdc19d356cb53b5984f91bfd3b31fe0c678a0d190a6db39274bb34753f55565b604c1981138015612d855750604d81125b1515612d9057600080fd5b7f1e8ecaafaddea96ed9ac6d2642dcdfe1bebe58a930b1085842d8fc122b371ee560009081526020527fd5c78dd9468716ca9bb96be25d56436811b20aab3523a9904b12deef1cab239d55565b600160a060020a0381161515612df257600080fd5b7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0612e1b6110e8565b60408051600160a060020a03928316815291841660208301528051918290030190a17f02016836a56b71f0d02689e69e326f4f4c1b9057164ef592671cf0d37c8040c060005260026020527fb7802e97e87ef2842a6cce7da7ffaeaedaa2f61a6a7870b23d9d01fc9b73712e805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b7f0a6f646cd611241d8073675e00d1a1ff700fbf1b53fcf473de56d1e6e4b714ba60005260046020527f078d888f9b66f3f8bfa10909e31f1e16240db73449f0500afdbbe3a70da457cc805460ff19166001179055565b80518290600010156123a7578151601414612f2557600080fd5b612f2e82613393565b9050600160a060020a0381161515612f4557600080fd5b612f4d61339a565b600160a060020a03828116911614156123a757600080fd5b82600160a060020a031663a9059cbb83836040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050600060405180830381600087803b158015611f8157600080fd5b6000903b1190565b806000808460405160200180807f6d65737361676556616c75650000000000000000000000000000000000000000815250600c01826000191660001916815260200191505060405160208183030381529060405260405180828051906020019080838360208310611e735780518252601f199092019160209182019101611e54565b80600260008460405160200180807f6d657373616765526563697069656e740000000000000000000000000000000081525060100182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b602083106130d65780518252601f1990920191602091820191016130b7565b51815160209384036101000a60001901801990921691161790526040805192909401829003909120865285019590955292909201600020805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0395909516949094179093555050505050565b3031610f5082826133a4565b604080517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290518391600091600160a060020a038416916370a0823191602480830192602092919082900301818787803b1580156131b157600080fd5b505af11580156131c5573d6000803e3d6000fd5b505050506040513d60208110156131db57600080fd5b50519050611fe4600160a060020a038516848363ffffffff612f6516565b60006123a782613207611ba0565b600003613405565b6000613219611b49565b600160a060020a031663669f618b6040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561203157600080fd5b82600260008360405160200180807f74784f75744f664c696d6974526563697069656e74000000000000000000000081525060150182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b602083106132da5780518252601f1990920191602091820191016132bb565b51815160209384036101000a60001901801990921691161790526040805192909401829003909120865285019590955292909201600020805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039590951694909417909355506107d19150839050826129d4565b6000613356611b49565b600160a060020a031663e5789d036040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561203157600080fd5b6014015190565b60006108d7610f79565b604051600160a060020a0383169082156108fc029083906000818181858888f193505050501515610f505780826133d961348e565b600160a060020a039091168152604051908190036020019082f0801580156114e3573d6000803e3d6000fd5b60008115156134155750816123a7565b60008213156134395761343283600a84900a63ffffffff61345016565b90506123a7565b611013836000849003600a0a63ffffffff61347916565b6000821515613461575060006123a7565b5081810281838281151561347157fe5b04146123a757fe5b6000818381151561348657fe5b049392505050565b60405160218061349e833901905600608060405260405160208060218339810160405251600160a060020a038116ff00a165627a7a7230582017b3e7c6d675c558d749d97ce64669015cab10f0eb0bfdac0a520f15e8cad0010029",
  "sourceMap": "381:4151:114:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;381:4151:114;;;;;;;",
  "deployedSourceMap": "381:4151:114:-;;;;;;;;;-1:-1:-1;;;381:4151:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1453:680;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1453:680:114;-1:-1:-1;;;;;1453:680:114;;;;;;;;;3435:382:99;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3435:382:99;;;;;1265:123:68;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1265:123:68;-1:-1:-1;;;;;1265:123:68;;;;;1778:90:112;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1778:90:112;;;;;;;;-1:-1:-1;;;;;1778:90:112;;;;;;;;;;;;;;1223:160:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1223:160:72;;;;;;;;;;;;;;;;;;;;;369:100:87;;8:9:-1;5:2;;;30:1;27;20:12;5:2;369:100:87;;;;;;;;;;;;;;;;;;;;;;3397:263:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3397:263:72;;;;;2617:145;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2617:145:72;;;;3668:153:112;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3668:153:112;;;;;;;;;;;;;;;;;;;;;;;1667:119:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1667:119:72;;;;516:110:90;;8:9:-1;5:2;;;30:1;27;20:12;5:2;516:110:90;;;;1389:166:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1389:166:72;;;;;2409:637:114;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2409:637:114;-1:-1:-1;;;;;2409:637:114;;;;;1924:161:101;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1924:161:101;;;;;1561:100:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1561:100:72;;;;4352:178:114;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4352:178:114;-1:-1:-1;;;;;4352:178:114;;;;;;;;;;1585:153:68;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1585:153:68;-1:-1:-1;;;;;1585:153:68;;;;;2593:126;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2593:126:68;;;;2366:245:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2366:245:72;;;;;1895:116;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1895:116:72;;;;1909:360:99;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1909:360:99;-1:-1:-1;;;;;1909:360:99;;;;;;;1732:92:93;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1732:92:93;;;;4482:382:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4482:382:72;;;;2538:569:99;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2538:569:99;;;;;3526:136:112;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3526:136:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;964:114:66;;8:9:-1;5:2;;;30:1;27;20:12;5:2;964:114:66;;;;4060:197:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4060:197:72;;;;;3106:414:112;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3106:414:112;;;;-1:-1:-1;;;;;3106:414:112;;;;;;;;;;;;;;;;5055:722;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5055:722:112;;;;;;;;;;;3165:226:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3165:226:72;;;;;2902:111:68;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2902:111:68;;;;699:964:112;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;699:964:112;;;;;;;;;;;;-1:-1:-1;;;;;699:964:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;699:964:112;;;;;;;;;;;;;;;;;-1:-1:-1;699:964:112;-1:-1:-1;699:964:112;;-1:-1:-1;699:964:112;;;;;;;;-1:-1:-1;699:964:112;;-1:-1:-1;;699:964:112;;;-1:-1:-1;;;699:964:112;;;;;;;;-1:-1:-1;;;;;699:964:112;;-1:-1:-1;699:964:112;;3854:200:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3854:200:72;;;;;2335:114:68;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2335:114:68;;;;1078:111:79;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1078:111:79;;;;2017:97:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2017:97:72;;;;2120:240;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2120:240:72;;;;;3666:182;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3666:182:72;;;;;1992:100:93;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1992:100:93;-1:-1:-1;;;;;1992:100:93;;;;;2062:127:68;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2062:127:68;;;;;1792:97:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1792:97:72;;;;1453:680:114;1804:12;1787:6;:4;:6::i;:::-;1786:7;1778:16;;;;;;1819:13;:11;:13::i;:::-;1804:28;;1850:19;1862:6;1850:11;:19::i;:::-;1842:28;;;;;;;;1880:44;1900:15;:13;:15::i;:::-;1917:6;1880:19;:44::i;:::-;1935:13;1943:4;1935:7;:13::i;:::-;1958:42;-1:-1:-1;;;;;1958:22:114;;1981:10;1993:6;1958:42;:22;:42;:::i;:::-;2010:14;2018:5;2010:7;:14::i;:::-;2034:92;2071:5;2078:10;2090:6;2115:9;2098:27;;;;;;-1:-1:-1;;;;;2098:27:114;-1:-1:-1;;;;;2098:27:114;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2098:27:114;;;2034:36;:92::i;:::-;1453:680;;;:::o;3435:382:99:-;3558:17;3616:13;990:16:68;:14;:16::i;:::-;-1:-1:-1;;;;;968:39:68;:10;:39;960:48;;;;;;1045:29;:27;:29::i;:::-;-1:-1:-1;;;;;1026:48:68;:15;:13;:15::i;:::-;-1:-1:-1;;;;;1026:48:68;;1018:57;;;;;;3522:24:99;3535:10;3522:12;:24::i;:::-;3521:25;3513:34;;;;;;3578:28;3595:10;3578:16;:28::i;:::-;3558:48;;3632:24;3645:10;3632:12;:24::i;:::-;3616:40;;3666:27;3682:10;3666:15;:27::i;:::-;3703:44;3730:9;3741:5;3703:26;:44::i;:::-;3762:48;;;-1:-1:-1;;;;;3762:48:99;;;;;;;;;;;;3781:10;;3762:48;;;;;;;;3435:382;;;:::o;1265:123:68:-;783:7:93;:5;:7::i;:::-;-1:-1:-1;;;;;769:21:93;:10;:21;761:30;;;;;;1346:35:68;1365:15;1346:18;:35::i;:::-;1265:123;:::o;1778:90:112:-;1822:6;1847:14;:12;:14::i;:::-;1840:21;;1778:90;:::o;1223:160:72:-;1284:7;1310:11;:66;1369:4;1332:42;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1332:42:72;;;1322:53;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1322:53:72;;;;;;;;;;;;;1310:66;;;;;;;;;;;;-1:-1:-1;1310:66:72;;;1223:160;-1:-1:-1;;;;;1223:160:72:o;369:100:87:-;160:66;415:4;438:24;:11;:24;;;;;;369:100;:::o;3397:263:72:-;783:7:93;:5;:7::i;:::-;-1:-1:-1;;;;;769:21:93;:10;:21;761:30;;;;;;3501:19:72;:17;:19::i;:::-;3487:11;:33;:53;;;-1:-1:-1;3524:16:72;;3487:53;3479:62;;;;;;;;1096:66;3551:11;:34;;;;;;;;:48;;;:34;3614:39;;;;;;;;;;;;;;;;;;3397:263;:::o;2617:145::-;2749:6;2743:3;:12;;2617:145::o;3668:153:112:-;3740:17;3668:153;:::o;1667:119:72:-;1096:66;1719:7;1745:34;;;;;;;1667:119;:::o;516:110:90:-;274:66;564:7;590:29;;;;;;;516:110;:::o;1389:166:72:-;1453:7;1479:11;:69;1541:4;1501:45;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1501:45:72;;;1491:56;;;;;;;;;;;;;66:2:-1;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;2409:637:114;2525:15;2592:23;2689:12;2739:17;312:4:102;-1:-1:-1;;;;;284:53:102;;:55;;;;;-1:-1:-1;;;284:55:102;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;284:55:102;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;284:55:102;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;284:55:102;-1:-1:-1;;;;;270:69:102;:10;:69;262:78;;;;;;2504:9:114;-1:-1:-1;;;;;455:17:78;;;;447:26;;;;;;2543:14:114;:12;:14::i;:::-;-1:-1:-1;;;;;2543:24:114;;2576:4;2543:39;;;;;-1:-1:-1;;;2543:39:114;;;;;;;-1:-1:-1;;;;;2543:39:114;-1:-1:-1;;;;;2543:39:114;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2543:39:114;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2543:39:114;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2543:39:114;;-1:-1:-1;2618:17:114;:15;:17::i;:::-;2592:43;-1:-1:-1;2653:25:114;;;2645:34;;;;;;2714:15;2704:7;:25;2689:40;;2759:19;:17;:19::i;:::-;2739:39;-1:-1:-1;2808:1:114;2796:13;;2788:22;;;;;;2831:9;2824:4;:16;2820:63;;;2863:9;2856:16;;2820:63;2892:42;2912:15;:13;:15::i;:::-;2929:4;2892:19;:42::i;:::-;2944:46;2964:25;:15;2984:4;2964:25;:19;:25;:::i;:::-;2944:19;:46::i;:::-;3000:39;3012:9;3023;3034:4;3000:11;:39::i;:::-;383:1:102;2409:637:114;;;;;:::o;1924:161:101:-;1987:4;2010:11;:68;2065:10;2032:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2032:44:101;;;2022:55;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;2022:55:101;;;;;;;;;;;;;2010:68;;;;;;;;;;;;-1:-1:-1;2010:68:101;;;;;1924:161;-1:-1:-1;;;;;1924:161:101:o;1561:100:72:-;756:66;1604:7;1630:24;;;;;;;1561:100;:::o;4352:178:114:-;312:4:102;-1:-1:-1;;;;;284:53:102;;:55;;;;;-1:-1:-1;;;284:55:102;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;284:55:102;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;284:55:102;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;284:55:102;-1:-1:-1;;;;;270:69:102;:10;:69;262:78;;;;;;4473:14:114;:12;:14::i;:::-;-1:-1:-1;;;;;4455:33:114;;;;;;;4447:42;;;;;;4499:24;4511:6;4519:3;4499:11;:24::i;:::-;4352:178;;:::o;1585:153:68:-;783:7:93;:5;:7::i;:::-;-1:-1:-1;;;;;769:21:93;:10;:21;761:30;;;;;;1681:50:68;1713:17;1681:31;:50::i;2593:126::-;544:66;2653:7;2679:33;:14;:33;;;;-1:-1:-1;;;;;2679:33:68;2593:126;:::o;2366:245:72:-;2434:4;2450:17;2470:49;2511:7;2470:36;2490:15;:13;:15::i;:::-;2470:19;:36::i;:::-;:40;:49;:40;:49;:::i;:::-;2450:69;;2561:9;2536:21;:19;:21::i;:::-;:34;;:68;;;;;2585:19;:17;:19::i;:::-;2574:7;:30;;2536:68;2529:75;2366:245;-1:-1:-1;;;2366:245:72:o;1895:116::-;922:66;1945:7;1971:33;;;;;;;1895:116;:::o;1909:360:99:-;990:16:68;:14;:16::i;:::-;-1:-1:-1;;;;;968:39:68;:10;:39;960:48;;;;;;1045:29;:27;:29::i;:::-;-1:-1:-1;;;;;1026:48:68;:15;:13;:15::i;:::-;-1:-1:-1;;;;;1026:48:68;;1018:57;;;;;;2010:28:99;2031:6;2010:20;:28::i;:::-;2006:257;;;2054:47;2077:15;:13;:15::i;:::-;2094:6;2054:22;:47::i;:::-;2115:48;2144:10;2156:6;2115:28;:48::i;:::-;2006:257;;;2194:58;2233:10;2245:6;2194:38;:58::i;1732:92:93:-;1523:66;1770:7;1796:21;:14;:21;;;;-1:-1:-1;;;;;1796:21:93;1732:92;:::o;4482:382:72:-;4532:7;4551:17;4591:19;4635:14;4695:28;4571:10;:8;:10::i;:::-;4551:30;;4613:12;:10;:12::i;:::-;4591:34;;4652:33;4669:15;:13;:15::i;:::-;4652:16;:33::i;:::-;4635:50;;4740:6;4726:11;:20;:47;;4772:1;4726:47;;;4763:6;4749:11;:20;4726:47;4695:78;;4802:20;4790:9;:32;:67;;4837:20;4790:67;;;4825:9;4790:67;4783:74;;4482:382;;;;;:::o;2538:569:99:-;2863:21;2927:17;2619:16;:14;:16::i;:::-;-1:-1:-1;;;;;2619:34:99;;2654:10;2619:46;;;;;-1:-1:-1;;;2619:46:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2619:46:99;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2619:46:99;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2619:46:99;2618:47;2610:56;;;;;;2746:4;2684:16;:14;:16::i;:::-;-1:-1:-1;;;;;2684:38:99;;2723:10;2684:50;;;;;-1:-1:-1;;;2684:50:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2684:50:99;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2684:50:99;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2684:50:99;-1:-1:-1;;;;;2684:67:99;;2676:76;;;;;;2822:29;:27;:29::i;:::-;-1:-1:-1;;;;;2770:81:99;:16;:14;:16::i;:::-;-1:-1:-1;;;;;2770:36:99;;2807:10;2770:48;;;;;-1:-1:-1;;;2770:48:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2770:48:99;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2770:48:99;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2770:48:99;-1:-1:-1;;;;;2770:81:99;;2762:90;;;;;;-1:-1:-1;;2947:50:99;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;2947:50:99;;;;;;;;25:18:-1;;61:17;;2947:50:99;182:15:-1;2887:30:99;179:29:-1;;;160:49;;;2887:30:99;3007:16;:14;:16::i;:::-;-1:-1:-1;;;;;3007:37:99;;3045:29;:27;:29::i;:::-;3076:4;3082:17;:15;:17::i;:::-;3007:93;;;;;-1:-1:-1;;;3007:93:99;;;;;;;-1:-1:-1;;;;;3007:93:99;-1:-1:-1;;;;;3007:93:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3007:93:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3007:93:99;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3007:93:99;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;2538:569:99:o;3526:136:112:-;3647:1;3650;3587:12;3526:136;;;:::o;964:114:66:-;648:66;1013:7;1039:32;;;;;;;964:114;:::o;4060:197:72:-;783:7:93;:5;:7::i;:::-;-1:-1:-1;;;;;769:21:93;:10;:21;761:30;;;;;;4149:1:72;4137:9;:13;:41;;;;;4166:12;:10;:12::i;:::-;4154:9;:24;4137:41;:67;;;;;4194:10;:8;:10::i;:::-;4182:9;:22;4137:67;4129:76;;;;;;;;447:66;4215:11;:23;;;;;;:35;4060:197::o;3106:414:112:-;3193:4;3209:12;3224:13;:11;:13::i;:::-;3209:28;-1:-1:-1;3255:10:112;-1:-1:-1;;;;;3255:28:112;;;3247:37;;;;;;3299:6;:4;:6::i;:::-;3298:7;3294:124;;;3329:19;3341:6;3329:11;:19::i;:::-;3321:28;;;;;;;;3363:44;3383:15;:13;:15::i;:::-;3400:6;3363:19;:44::i;:::-;3427:65;3464:5;3471;3478:6;3486:5;;3427:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3427:36:112;;-1:-1:-1;;;;;3427:65:112:i;:::-;-1:-1:-1;3509:4:112;;3106:414;-1:-1:-1;;;;;3106:414:112:o;5055:722::-;5217:17;5236:13;5436:20;312:4:102;-1:-1:-1;;;;;284:53:102;;:55;;;;;-1:-1:-1;;;284:55:102;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;284:55:102;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;284:55:102;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;284:55:102;-1:-1:-1;;;;;270:69:102;:10;:69;262:78;;;;;;5253:24:112;5267:9;5253:13;:24::i;:::-;5216:61;;-1:-1:-1;5216:61:112;-1:-1:-1;;;;;;5295:23:112;;;;;;:36;;;5330:1;5322:5;:9;5295:36;:62;;;;;5344:13;5335:5;:22;;5295:62;5287:71;;;;;;;;5368:58;5388:37;5411:13;5388:18;:16;:18::i;:::-;:22;:37;:22;:37;:::i;:::-;5368:19;:58::i;:::-;5459:24;:5;5469:13;5459:24;:9;:24;:::i;:::-;5436:47;;5493:46;5515:12;5529:9;5493:21;:46::i;:::-;5554:61;;;;;;;;;;;;;;5576:9;;5554:61;;;;;;;;5629:17;5625:146;;;5687:10;:8;:10::i;:::-;5670:27;;;5662:36;;;;;;5712:48;5724:9;5735;5746:13;5712:11;:48::i;3165:226:72:-;783:7:93;:5;:7::i;:::-;-1:-1:-1;;;;;769:21:93;:10;:21;761:30;;;;;;3260:10:72;:8;:10::i;:::-;3246:11;:24;:44;;;-1:-1:-1;3274:16:72;;3246:44;3238:53;;;;;;;;756:66;3301:11;:24;;;;;;;;:38;;;:24;3354:30;;;;;;;;;;;;;;;;;;3165:226;:::o;2902:111:68:-;713:66;2950:7;2976:30;;;;;;;2902:111;:::o;699:964:112:-;1091:44:93;;;22:32:-1;6:49;;1091:44:93;;;;;49:4:-1;25:18;;61:17;;1091:44:93;182:15:-1;1114:20:93;179:29:-1;160:49;;1072:64:93;;;;1171:4:112;;1080::93;;1091:44;1072:64;;;25:18:-1;1072:64:93;;25:18:-1;1171:4:112;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1072:64:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1071:65;:208;;;;1252:4;-1:-1:-1;;;;;1224:53:93;;:55;;;;;-1:-1:-1;;;1224:55:93;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1224:55:93;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1224:55:93;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1224:55:93;-1:-1:-1;;;;;1210:69:93;:10;:69;1071:208;:299;;;-1:-1:-1;1343:10:93;1365:4;1343:27;1071:299;1050:382;;;;;;;;1196:15:112;:13;:15::i;:::-;1195:16;1187:25;;;;;;1223:35;1242:15;1223:18;:35::i;:::-;1268:50;1300:17;1268:31;:50::i;:::-;1328:28;1343:12;1328:14;:28::i;:::-;1366:44;1377:32;1366:10;:44::i;:::-;1420:63;1440:42;1420:19;:63::i;:::-;1493:37;1513:16;1493:19;:37::i;:::-;1540:31;1557:13;1540:16;:31::i;:::-;1581:17;1591:6;1581:9;:17::i;:::-;1608:15;:13;:15::i;:::-;1641;:13;:15::i;:::-;1634:22;699:964;-1:-1:-1;;;;;;;;;699:964:112:o;3854:200:72:-;783:7:93;:5;:7::i;:::-;-1:-1:-1;;;;;769:21:93;:10;:21;761:30;;;;;;3931:14:72;;;:70;;;3962:10;:8;:10::i;:::-;3950:9;:22;:50;;;;;3988:12;:10;:12::i;:::-;3976:9;:24;3950:50;3923:79;;;;;;;;601:66;4012:11;:23;;;;;;:35;3854:200::o;2335:114:68:-;377:66;2382:4;2410:31;:14;:31;;;;-1:-1:-1;;;;;2410:31:68;2335:114;:::o;1078:111:79:-;260:66;1123:6;1155:26;;;;;;;1078:111;:::o;2017:97:72:-;447:66;2058:7;2084:23;;;;;;;2017:97;:::o;2120:240::-;2179:4;2195:17;2215:46;2253:7;2215:33;2232:15;:13;:15::i;2215:46::-;2195:66;;2294:9;2278:12;:10;:12::i;:::-;:25;;:50;;;;;2318:10;:8;:10::i;:::-;2307:7;:21;;2278:50;:75;;;;;2343:10;:8;:10::i;:::-;2332:21;;;;;2120:240;-1:-1:-1;;2120:240:72:o;3666:182::-;783:7:93;:5;:7::i;:::-;-1:-1:-1;;;;;769:21:93;:10;:21;761:30;;;;;;3764:21:72;:19;:21::i;:::-;3752:33;;3744:42;;;;;;922:66;3796:11;:33;;;;;;:45;3666:182::o;1992:100:93:-;783:7;:5;:7::i;:::-;-1:-1:-1;;;;;769:21:93;:10;:21;761:30;;;;;;2066:19;2076:8;2066:9;:19::i;2062:127:68:-;783:7:93;:5;:7::i;:::-;-1:-1:-1;;;;;769:21:93;:10;:21;761:30;;;;;;2145:37:68;2165:16;2145:19;:37::i;1792:97:72:-;601:66;1833:7;1859:23;;;;;;;1792:97;:::o;267:81:94:-;155:66;301:4;324:17;:11;:17;;;;;;267:81;:::o;2768:188:72:-;2915:34;2942:6;2915:22;2932:4;2915:16;:22::i;:34::-;2846:11;:66;2905:4;2868:42;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2868:42:72;;;2858:53;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;2858:53:72;;;;;;;;;;;;;2846:66;;;;;;;;;;;;-1:-1:-1;2846:66:72;:103;;;;-1:-1:-1;;;;;2768:188:72:o;354:80:94:-;155:66;402:17;;:11;:17;;;:25;;-1:-1:-1;;402:25:94;;;;;;;;;;354:80::o;1173:366:22:-;1265:62;;;;;;-1:-1:-1;;;;;1265:62:22;;;;;;;1313:4;1265:62;;;;;;;;;;;;:32;;;;;;:62;;;;;-1:-1:-1;;1265:62:22;;;;;;;;-1:-1:-1;1265:32:22;:62;;;5:2:-1;;;;30:1;27;20:12;5:2;1265:62:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1265:62:22;;;;1363:14;1360:2;;;1417;1414:1;1411;1396:24;1453:1;1447:8;1440:16;1437:2;;;1489:1;1486;1479:12;3280:332:114;3453:6;:4;:6::i;:::-;3452:7;3448:158;;;3475:50;3495:29;3517:6;3495:17;:15;:17::i;3475:50::-;3539:56;3551:5;3558:28;3573:5;3580;3558:14;:28::i;:::-;3588:6;3539:11;:56::i;:::-;3280:332;;;;:::o;4237:113:68:-;4285:7;4311:16;:14;:16::i;:::-;-1:-1:-1;;;;;4311:30:68;;:32;;;;;-1:-1:-1;;;4311:32:68;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4311:32:68;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4311:32:68;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4311:32:68;;-1:-1:-1;4237:113:68;:::o;1302:177:101:-;1371:7;1397:14;:75;1459:10;1422:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1422:48:101;;;1412:59;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1412:59:101;;;;;;;;;;;;;1397:75;;;;;;;;;;;;-1:-1:-1;1397:75:101;;-1:-1:-1;;;;;1397:75:101;;1302:177;-1:-1:-1;;;;;1302:177:101:o;622:166::-;687:7;713:11;:68;768:10;735:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;735:44:101;;;725:55;;;;;;;;;;;;;66:2:-1;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;1631:146:101;1766:4;1695:11;:68;1750:10;1717:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1717:44:101;;;1707:55;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1707:55:101;;;;;;;;;;;;;1695:68;;;;;;;;;;;;-1:-1:-1;1695:68:101;:75;;-1:-1:-1;;1695:75:101;;;;;;;;;;;-1:-1:-1;;;;1631:146:101:o;3841:204:114:-;3932:50;3952:29;3974:6;3952:17;:15;:17::i;3932:50::-;3992:46;4019:10;4031:6;3992:13;:11;:13::i;:::-;-1:-1:-1;;;;;3992:26:114;;:46;;:26;:46;:::i;3154:187:68:-;3234:40;3258:15;3234:23;:40::i;:::-;3226:49;;;;;;;;377:66;3285:31;;:14;:31;;;:49;;-1:-1:-1;;3285:49:68;-1:-1:-1;;;;;3285:49:68;;;;;;;;;;3154:187::o;368:115:63:-;95:66:83;415:6:63;447:28;:14;:28;;;;-1:-1:-1;;;;;447:28:63;368:115;:::o;1238:128:160:-;1319:7;;;1339;;;;1332:15;;;;1238:128;;;;:::o;776:113:90:-;274:66;842:11;:29;;;;;;:40;776:113::o;1105:506:99:-;1282:57;;;-1:-1:-1;;;;;1282:57:99;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1282:57:99;;;;;;;;25:18:-1;;61:17;;1282:57:99;182:15:-1;1219:33:99;179:29:-1;;;160:49;;;1219:33:99;1195:21;1371:16;:14;:16::i;:::-;-1:-1:-1;;;;;1371:37:99;;1422:29;:27;:29::i;:::-;1465:4;1483:17;:15;:17::i;:::-;1371:139;;;;;-1:-1:-1;;;1371:139:99;;;;;;;-1:-1:-1;;;;;1371:139:99;-1:-1:-1;;;;;1371:139:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1371:139:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1371:139:99;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1371:139:99;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1371:139:99;;-1:-1:-1;1521:35:99;1371:139;1549:6;1521:15;:35::i;:::-;1566:38;1586:10;1598:5;1566:19;:38::i;892:225:78:-;964:3;-1:-1:-1;;;;;455:17:78;;;;447:26;;;;;;-1:-1:-1;;;;;983:20:78;;;979:132;;;1019:21;1036:3;1019:16;:21::i;:::-;979:132;;;1071:29;1088:6;1096:3;1071:16;:29::i;3503:147:68:-;544:66;3590:33;;:14;:33;;;:53;;-1:-1:-1;;3590:53:68;-1:-1:-1;;;;;3590:53:68;;;;;;;;;;3503:147::o;2962:197:72:-;3115:37;3145:6;3115:25;3135:4;3115:19;:25::i;:37::-;3043:11;:69;3105:4;3065:45;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3065:45:72;;;3055:56;;;;;;;;;;;;;66:2:-1;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;711:354:114;804:13;851:18;820:21;834:6;820:13;:21::i;:::-;804:37;;872:11;:9;:11::i;:::-;851:32;;894:49;914:28;936:5;914:17;:15;:17::i;894:49::-;953:45;980:10;992:5;953:13;:11;:13::i;:45::-;1014:44;;;;;;;;1047:10;;-1:-1:-1;;;;;1014:44:114;;;;;;;;;;;;711:354;;;;:::o;4055:497:112:-;4158:18;4200:17;4227:13;4179:11;:9;:11::i;:::-;4158:32;;4271:25;4285:10;4271:13;:25::i;:::-;4250:46;;-1:-1:-1;4250:46:112;-1:-1:-1;;;;;;4314:23:112;;;:37;;;;-1:-1:-1;4341:10:112;;4314:37;4306:46;;;;;;;;4362:51;4382:30;4405:6;4382:18;:16;:18::i;4362:51::-;4423:48;4440:10;4452:6;4460:10;4423:16;:48::i;:::-;4486:59;;;-1:-1:-1;;;;;4486:59:112;;;;;;;;;;;;4534:10;;4486:59;;;;;;;;4055:497;;;;;:::o;1670:300:66:-;1736:17;1755:13;1792:14;:80;1859:10;1817:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1817:53:66;;;1807:64;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1807:64:66;;;;;;;;;;;;;1792:80;;;;;;;;;-1:-1:-1;1792:80:66;;;-1:-1:-1;1792:80:66;;;;1912:49;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1912::66;;;;;;;;1902:60;;-1:-1:-1;;;;;1792:80:66;;;;-1:-1:-1;;;;;1912:49:66;;-1:-1:-1;1912:49:66;;-1:-1:-1;1912:49:66;;1902:60;;;;1912:49;1902:60;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1902:60:66;;;;;;;;;;;;;1890:73;;;;;;;;;;;;-1:-1:-1;1890:73:66;;1670:300;;1890:73;;-1:-1:-1;;;;;1670:300:66:o;1060:116:160:-;1120:7;1142:8;;;;1135:16;;;;-1:-1:-1;1164:7:160;;;1060:116::o;1278:112:66:-;648:66;1342:11;:32;;;;;;:41;1278:112::o;2842:175::-;3004:6;2928:11;:73;2988:10;2950:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2950::66;;;2940:60;;;;;;;;;;;;;66:2:-1;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;489::63;556:31;580:6;556:23;:31::i;:::-;548:40;;;;;;;;95:66:83;598:28:63;;:14;:28;;;:37;;-1:-1:-1;;598:37:63;-1:-1:-1;;;;;598:37:63;;;;;;;;;;489:153::o;4870:446:72:-;4950:10;;;;4963:1;-1:-1:-1;4950:73:72;;;;-1:-1:-1;5013:10:72;;;;;5000;;;:23;4950:73;:139;;;;-1:-1:-1;5079:10:72;;;;5066;;:23;4950:139;4929:195;;;;;;;;5162:10;;756:66;5170:1;5135:24;;;5162:10;5135:24;;;;:37;;;;5208:10;;;;601:66;5182:23;;;:36;5254:10;;;;447:66;5228:23;;;:36;5280:29;;5162:7;;5298:10;;;;;5280:29;;;;;;;;;;;;;;;;;;4870:446;:::o;5322:314::-;5411:10;;;5398;;;:23;5390:32;;;;;;5509:10;;1096:66;5517:1;5472:34;;;5509:10;5472:34;;;;:47;;;;5565:10;;;;922:66;5529:33;;;:46;5591:38;;5509:7;;5618:10;;3850:182:68;3952:13;:11;:13::i;:::-;3932:33;;;3924:42;;;;;;713:66;3976:11;:30;;;;;;:49;3850:182::o;718:247:79:-;-1:-1:-1;;876:6:79;:12;:27;;;;;901:2;892:6;:11;876:27;868:36;;;;;;;;260:66;914:11;:26;;;;;;:44;718:247::o;2149:190:93:-;-1:-1:-1;;;;;2213:22:93;;;;2205:31;;;;;;2251:39;2272:7;:5;:7::i;:::-;2251:39;;;-1:-1:-1;;;;;2251:39:93;;;;;;;;;;;;;;;;;;;;;1523:66;2300:21;;:14;:21;;;:32;;-1:-1:-1;;2300:32:93;-1:-1:-1;;;;;2300:32:93;;;;;;;;;;2149:190::o;281:82:87:-;160:66;325:24;;:11;:24;;;:31;;-1:-1:-1;;325:31:87;352:4;325:31;;;281:82::o;388:373:77:-;523:12;;504:5;;463:17;-1:-1:-1;519:236:77;;;563:12;;579:2;563:18;555:27;;;;;;608;629:5;608:20;:27::i;:::-;596:39;-1:-1:-1;;;;;;657:23:77;;;;649:32;;;;;;716:27;:25;:27::i;:::-;-1:-1:-1;;;;;703:40:77;;;;;;;695:49;;;;;579:339:22;677:6;-1:-1:-1;;;;;665:28:22;;694:3;699:6;665:41;;;;;-1:-1:-1;;;665:41:22;;;;;;;-1:-1:-1;;;;;665:41:22;-1:-1:-1;;;;;665:41:22;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;438:578:159;496:4;971:18;;1003:8;;438:578::o;311:164:101:-;462:6;391:11;:68;446:10;413:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;413:44:101;;;403:55;;;;;;;;;;;;;66:2:-1;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;992:183:101;1158:10;1080:14;:75;1142:10;1105:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1105:48:101;;;1095:59;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1095:59:101;;;;;;;;;;;;;1080:75;;;;;;;;;;;;-1:-1:-1;1080:75:101;:88;;-1:-1:-1;;1080:88:101;-1:-1:-1;;;;;1080:88:101;;;;;;;;;;;-1:-1:-1;;;;;992:183:101:o;1270:145:78:-;1352:4;1344:21;1375:33;1397:3;1344:21;1375;:33::i;1656:210::-;1795:21;;;;;;1811:4;1795:21;;;;;;1760:6;;1730:16;;-1:-1:-1;;;;;1795:15:78;;;;;:21;;;;;;;;;;;;;;1730:16;1795:15;:21;;;5:2:-1;;;;30:1;27;20:12;5:2;1795:21:78;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1795:21:78;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1795:21:78;;-1:-1:-1;1826:33:78;-1:-1:-1;;;;;1826:19:78;;1846:3;1795:21;1826:33;:19;:33;:::i;1396:130:79:-;1458:7;1484:35;1495:6;1504:14;:12;:14::i;:::-;1503:15;;1484:10;:35::i;4512:105:68:-;4556:7;4582:16;:14;:16::i;:::-;-1:-1:-1;;;;;4582:26:68;;:28;;;;;-1:-1:-1;;;4582:28:68;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;2305:252:66;2489:10;2406:14;:80;2473:10;2431:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2431:53:66;;;2421:64;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;2421:64:66;;;;;;;;;;;;;2406:80;;;;;;;;;;;;-1:-1:-1;2406:80:66;:93;;-1:-1:-1;;2406:93:66;-1:-1:-1;;;;;2406:93:66;;;;;;;;;;;-1:-1:-1;2509:41:66;;-1:-1:-1;2531:6:66;;-1:-1:-1;2539:10:66;2509:21;:41::i;4800:109:68:-;4846:7;4872:16;:14;:16::i;:::-;-1:-1:-1;;;;;4872:28:68;;:30;;;;;-1:-1:-1;;;4872:30:68;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;1216:154:20;1350:2;1338:15;1332:22;;1310:54::o;1874:122:112:-;1934:7;1960:29;:27;:29::i;431:177:18:-;513:22;;-1:-1:-1;;;;;513:14:18;;;:22;;;;;528:6;;513:22;;;;528:6;513:14;:22;;;;;;;512:23;508:94;;;573:6;581:9;551:40;;:::i;:::-;-1:-1:-1;;;;;551:40:18;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;2040:290:79;2113:7;2136:11;;2132:55;;;-1:-1:-1;2170:6:79;2163:13;;2132:55;2209:1;2200:6;:10;2196:79;;;2233:31;:6;2244:2;:19;;;2233:31;:10;:31;:::i;:::-;2226:38;;;;2196:79;2291:32;:6;2314:7;;;;2302:2;:20;2291:32;:10;:32;:::i;203:380:160:-;263:9;489:7;;485:36;;;-1:-1:-1;513:1:160;506:8;;485:36;-1:-1:-1;531:7:160;;;536:2;531;:7;551:6;;;;;;;;:12;544:20;;;665:283;725:7;941:2;936;:7;;;;;;;;;665:283;-1:-1:-1;;;665:283:160:o;381:4151:114:-;;;;;;;;;;:::o",
  "source": "pragma solidity 0.4.24;\n\nimport \"./BasicAMBErc677ToErc677.sol\";\nimport \"../../libraries/SafeERC20.sol\";\nimport \"../MediatorBalanceStorage.sol\";\n\n/**\n* @title ForeignAMBErc677ToErc677\n* @dev Foreign side implementation for erc677-to-erc677 mediator intended to work on top of AMB bridge.\n* It is designed to be used as an implementation contract of EternalStorageProxy contract.\n*/\ncontract ForeignAMBErc677ToErc677 is BasicAMBErc677ToErc677, MediatorBalanceStorage {\n    using SafeERC20 for ERC677;\n\n    /**\n     * @dev Executes action on the request to withdraw tokens relayed from the other network\n     * @param _recipient address of tokens receiver\n     * @param _value amount of bridged tokens\n     */\n    function executeActionOnBridgedTokens(address _recipient, uint256 _value) internal {\n        uint256 value = _unshiftValue(_value);\n        bytes32 _messageId = messageId();\n\n        _setMediatorBalance(mediatorBalance().sub(value));\n        erc677token().safeTransfer(_recipient, value);\n\n        emit TokensBridged(_recipient, value, _messageId);\n    }\n\n    /**\n    * @dev Initiates the bridge operation that will lock the amount of tokens transferred and mint the tokens on\n    * the other network. The user should first call Approve method of the ERC677 token.\n    * @param _receiver address that will receive the minted tokens on the other network.\n    * @param _value amount of tokens to be transferred to the other network.\n    */\n    function relayTokens(address _receiver, uint256 _value) external {\n        // This lock is to prevent calling passMessage twice if a ERC677 token is used.\n        // When transferFrom is called, after the transfer, the ERC677 token will call onTokenTransfer from this contract\n        // which will call passMessage.\n        require(!lock());\n        ERC677 token = erc677token();\n        require(withinLimit(_value));\n        addTotalSpentPerDay(getCurrentDay(), _value);\n\n        setLock(true);\n        token.safeTransferFrom(msg.sender, _value);\n        setLock(false);\n        bridgeSpecificActionsOnTokenTransfer(token, msg.sender, _value, abi.encodePacked(_receiver));\n    }\n\n    /**\n     * @dev Allows to send to the other network the amount of locked tokens that can be forced into the contract\n     * without the invocation of the required methods.\n     * @param _receiver the address that will receive the tokens on the other network\n     */\n    function fixMediatorBalance(address _receiver) external onlyIfUpgradeabilityOwner validAddress(_receiver) {\n        uint256 balance = _erc677token().balanceOf(address(this));\n        uint256 expectedBalance = mediatorBalance();\n        require(balance > expectedBalance);\n        uint256 diff = balance - expectedBalance;\n        uint256 available = maxAvailablePerTx();\n        require(available > 0);\n        if (diff > available) {\n            diff = available;\n        }\n        addTotalSpentPerDay(getCurrentDay(), diff);\n        _setMediatorBalance(expectedBalance.add(diff));\n        passMessage(_receiver, _receiver, diff);\n    }\n\n    /**\n     * @dev Executes action on deposit of bridged tokens\n     * @param _from address of tokens sender\n     * @param _value requsted amount of bridged tokens\n     * @param _data alternative receiver, if specified\n     */\n    function bridgeSpecificActionsOnTokenTransfer(\n        ERC677, /* _token */\n        address _from,\n        uint256 _value,\n        bytes _data\n    ) internal {\n        if (!lock()) {\n            _setMediatorBalance(mediatorBalance().add(_value));\n            passMessage(_from, chooseReceiver(_from, _data), _value);\n        }\n    }\n\n    /**\n    * @dev Unlock back the amount of tokens that were bridged to the other network but failed.\n    * @param _recipient address that will receive the tokens\n    * @param _value amount of tokens to be received\n    */\n    function executeActionOnFixedTokens(address _recipient, uint256 _value) internal {\n        _setMediatorBalance(mediatorBalance().sub(_value));\n        erc677token().safeTransfer(_recipient, _value);\n    }\n\n    /**\n    * @dev Allows to transfer any locked token on this contract that is not part of the bridge operations.\n    * @param _token address of the token, if it is not provided, native tokens will be transferred.\n    * @param _to address that will receive the locked tokens on this contract.\n    */\n    function claimTokens(address _token, address _to) external onlyIfUpgradeabilityOwner {\n        require(_token != address(_erc677token()));\n        claimValues(_token, _to);\n    }\n}\n",
  "sourcePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/amb_erc677_to_erc677/ForeignAMBErc677ToErc677.sol",
  "ast": {
    "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/amb_erc677_to_erc677/ForeignAMBErc677ToErc677.sol",
    "exportedSymbols": {
      "ForeignAMBErc677ToErc677": [
        19467
      ]
    },
    "id": 19468,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 19200,
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:114"
      },
      {
        "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/amb_erc677_to_erc677/BasicAMBErc677ToErc677.sol",
        "file": "./BasicAMBErc677ToErc677.sol",
        "id": 19201,
        "nodeType": "ImportDirective",
        "scope": 19468,
        "sourceUnit": 19170,
        "src": "25:38:114",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/libraries/SafeERC20.sol",
        "file": "../../libraries/SafeERC20.sol",
        "id": 19202,
        "nodeType": "ImportDirective",
        "scope": 19468,
        "sourceUnit": 2407,
        "src": "64:39:114",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/MediatorBalanceStorage.sol",
        "file": "../MediatorBalanceStorage.sol",
        "id": 19203,
        "nodeType": "ImportDirective",
        "scope": 19468,
        "sourceUnit": 15124,
        "src": "104:39:114",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 19204,
              "name": "BasicAMBErc677ToErc677",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19169,
              "src": "418:22:114",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BasicAMBErc677ToErc677_$19169",
                "typeString": "contract BasicAMBErc677ToErc677"
              }
            },
            "id": 19205,
            "nodeType": "InheritanceSpecifier",
            "src": "418:22:114"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 19206,
              "name": "MediatorBalanceStorage",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15123,
              "src": "442:22:114",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MediatorBalanceStorage_$15123",
                "typeString": "contract MediatorBalanceStorage"
              }
            },
            "id": 19207,
            "nodeType": "InheritanceSpecifier",
            "src": "442:22:114"
          }
        ],
        "contractDependencies": [
          1500,
          9266,
          10090,
          10871,
          11468,
          12916,
          13954,
          14052,
          14172,
          14357,
          14798,
          15123,
          15318,
          15349,
          16261,
          16390,
          16409,
          16712,
          19169
        ],
        "contractKind": "contract",
        "documentation": "@title ForeignAMBErc677ToErc677\n@dev Foreign side implementation for erc677-to-erc677 mediator intended to work on top of AMB bridge.\nIt is designed to be used as an implementation contract of EternalStorageProxy contract.",
        "fullyImplemented": true,
        "id": 19467,
        "linearizedBaseContracts": [
          19467,
          15123,
          19169,
          16261,
          16390,
          10090,
          13954,
          14357,
          1500,
          12916,
          14172,
          11468,
          15318,
          10871,
          16712,
          14052,
          16409,
          15349,
          14798,
          9266
        ],
        "name": "ForeignAMBErc677ToErc677",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 19210,
            "libraryName": {
              "contractScope": null,
              "id": 19208,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2406,
              "src": "477:9:114",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$2406",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "471:27:114",
            "typeName": {
              "contractScope": null,
              "id": 19209,
              "name": "ERC677",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1469,
              "src": "491:6:114",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC677_$1469",
                "typeString": "contract ERC677"
              }
            }
          },
          {
            "body": {
              "id": 19249,
              "nodeType": "Block",
              "src": "794:271:114",
              "statements": [
                {
                  "assignments": [
                    19218
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 19218,
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "scope": 19250,
                      "src": "804:13:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 19217,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "804:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 19222,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 19220,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19214,
                        "src": "834:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 19219,
                      "name": "_unshiftValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14116,
                      "src": "820:13:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 19221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "820:21:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "804:37:114"
                },
                {
                  "assignments": [
                    19224
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 19224,
                      "name": "_messageId",
                      "nodeType": "VariableDeclaration",
                      "scope": 19250,
                      "src": "851:18:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 19223,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "851:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 19227,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 19225,
                      "name": "messageId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11456,
                      "src": "872:9:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
                        "typeString": "function () view returns (bytes32)"
                      }
                    },
                    "id": 19226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "872:11:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "851:32:114"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 19232,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19218,
                            "src": "936:5:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 19229,
                              "name": "mediatorBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15110,
                              "src": "914:15:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 19230,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "914:17:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 19231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29958,
                          "src": "914:21:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 19233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "914:28:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 19228,
                      "name": "_setMediatorBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15122,
                      "src": "894:19:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 19234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "894:49:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19235,
                  "nodeType": "ExpressionStatement",
                  "src": "894:49:114"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 19239,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19212,
                        "src": "980:10:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19240,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19218,
                        "src": "992:5:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 19236,
                          "name": "erc677token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18882,
                          "src": "953:11:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ERC677_$1469_$",
                            "typeString": "function () view returns (contract ERC677)"
                          }
                        },
                        "id": 19237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "953:13:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC677_$1469",
                          "typeString": "contract ERC677"
                        }
                      },
                      "id": 19238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2383,
                      "src": "953:26:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_address_$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 19241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "953:45:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19242,
                  "nodeType": "ExpressionStatement",
                  "src": "953:45:114"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 19244,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19212,
                        "src": "1028:10:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19245,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19218,
                        "src": "1040:5:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19246,
                        "name": "_messageId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19224,
                        "src": "1047:10:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 19243,
                      "name": "TokensBridged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16056,
                      "src": "1014:13:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,uint256,bytes32)"
                      }
                    },
                    "id": 19247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1014:44:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19248,
                  "nodeType": "EmitStatement",
                  "src": "1009:49:114"
                }
              ]
            },
            "documentation": "@dev Executes action on the request to withdraw tokens relayed from the other network\n@param _recipient address of tokens receiver\n@param _value amount of bridged tokens",
            "id": 19250,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "executeActionOnBridgedTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19212,
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 19250,
                  "src": "749:18:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19211,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "749:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19214,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 19250,
                  "src": "769:14:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19213,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "769:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "748:36:114"
            },
            "payable": false,
            "returnParameters": {
              "id": 19216,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "794:0:114"
            },
            "scope": 19467,
            "src": "711:354:114",
            "stateMutability": "nonpayable",
            "superFunction": 16253,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 19307,
              "nodeType": "Block",
              "src": "1518:615:114",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 19260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1786:7:114",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 19258,
                            "name": "lock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15336,
                            "src": "1787:4:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
                              "typeString": "function () returns (bool)"
                            }
                          },
                          "id": 19259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1787:6:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 19257,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        30716,
                        30717
                      ],
                      "referencedDeclaration": 30716,
                      "src": "1778:7:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 19261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1778:16:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19262,
                  "nodeType": "ExpressionStatement",
                  "src": "1778:16:114"
                },
                {
                  "assignments": [
                    19264
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 19264,
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "scope": 19308,
                      "src": "1804:12:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC677_$1469",
                        "typeString": "contract ERC677"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 19263,
                        "name": "ERC677",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1469,
                        "src": "1804:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC677_$1469",
                          "typeString": "contract ERC677"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 19267,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 19265,
                      "name": "erc677token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18882,
                      "src": "1819:11:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ERC677_$1469_$",
                        "typeString": "function () view returns (contract ERC677)"
                      }
                    },
                    "id": 19266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1819:13:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC677_$1469",
                      "typeString": "contract ERC677"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1804:28:114"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 19270,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19254,
                            "src": "1862:6:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 19269,
                          "name": "withinLimit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12544,
                          "src": "1850:11:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 19271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1850:19:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 19268,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        30716,
                        30717
                      ],
                      "referencedDeclaration": 30716,
                      "src": "1842:7:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 19272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1842:28:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19273,
                  "nodeType": "ExpressionStatement",
                  "src": "1842:28:114"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 19275,
                          "name": "getCurrentDay",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12582,
                          "src": "1900:13:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 19276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1900:15:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19277,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19254,
                        "src": "1917:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 19274,
                      "name": "addTotalSpentPerDay",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12607,
                      "src": "1880:19:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 19278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1880:44:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19279,
                  "nodeType": "ExpressionStatement",
                  "src": "1880:44:114"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 19281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1943:4:114",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 19280,
                      "name": "setLock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15348,
                      "src": "1935:7:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 19282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1935:13:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19283,
                  "nodeType": "ExpressionStatement",
                  "src": "1935:13:114"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 19287,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30713,
                          "src": "1981:3:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 19288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1981:10:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19289,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19254,
                        "src": "1993:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 19284,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19264,
                        "src": "1958:5:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC677_$1469",
                          "typeString": "contract ERC677"
                        }
                      },
                      "id": 19286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2405,
                      "src": "1958:22:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_address_$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 19290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1958:42:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19291,
                  "nodeType": "ExpressionStatement",
                  "src": "1958:42:114"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 19293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2018:5:114",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 19292,
                      "name": "setLock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15348,
                      "src": "2010:7:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 19294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2010:14:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19295,
                  "nodeType": "ExpressionStatement",
                  "src": "2010:14:114"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 19297,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19264,
                        "src": "2071:5:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC677_$1469",
                          "typeString": "contract ERC677"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 19298,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30713,
                          "src": "2078:3:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 19299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2078:10:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19300,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19254,
                        "src": "2090:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 19303,
                            "name": "_receiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19252,
                            "src": "2115:9:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 19301,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30700,
                            "src": "2098:3:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 19302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2098:16:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 19304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2098:27:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC677_$1469",
                          "typeString": "contract ERC677"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 19296,
                      "name": "bridgeSpecificActionsOnTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19419
                      ],
                      "referencedDeclaration": 19419,
                      "src": "2034:36:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC677_$1469_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (contract ERC677,address,uint256,bytes memory)"
                      }
                    },
                    "id": 19305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2034:92:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19306,
                  "nodeType": "ExpressionStatement",
                  "src": "2034:92:114"
                }
              ]
            },
            "documentation": "@dev Initiates the bridge operation that will lock the amount of tokens transferred and mint the tokens on\nthe other network. The user should first call Approve method of the ERC677 token.\n@param _receiver address that will receive the minted tokens on the other network.\n@param _value amount of tokens to be transferred to the other network.",
            "id": 19308,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "relayTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19255,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19252,
                  "name": "_receiver",
                  "nodeType": "VariableDeclaration",
                  "scope": 19308,
                  "src": "1474:17:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19251,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1474:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19254,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 19308,
                  "src": "1493:14:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19253,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1493:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1473:35:114"
            },
            "payable": false,
            "returnParameters": {
              "id": 19256,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1518:0:114"
            },
            "scope": 19467,
            "src": "1453:680:114",
            "stateMutability": "nonpayable",
            "superFunction": 18956,
            "visibility": "external"
          },
          {
            "body": {
              "id": 19384,
              "nodeType": "Block",
              "src": "2515:531:114",
              "statements": [
                {
                  "assignments": [
                    19319
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 19319,
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 19385,
                      "src": "2525:15:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 19318,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2525:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 19327,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 19324,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31032,
                            "src": "2576:4:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ForeignAMBErc677ToErc677_$19467",
                              "typeString": "contract ForeignAMBErc677ToErc677"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ForeignAMBErc677ToErc677_$19467",
                              "typeString": "contract ForeignAMBErc677ToErc677"
                            }
                          ],
                          "id": 19323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2568:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 19325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2568:13:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 19320,
                          "name": "_erc677token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10012,
                          "src": "2543:12:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ERC677_$1469_$",
                            "typeString": "function () view returns (contract ERC677)"
                          }
                        },
                        "id": 19321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2543:14:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC677_$1469",
                          "typeString": "contract ERC677"
                        }
                      },
                      "id": 19322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30327,
                      "src": "2543:24:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 19326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2543:39:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2525:57:114"
                },
                {
                  "assignments": [
                    19329
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 19329,
                      "name": "expectedBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 19385,
                      "src": "2592:23:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 19328,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2592:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 19332,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 19330,
                      "name": "mediatorBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15110,
                      "src": "2618:15:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 19331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2618:17:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2592:43:114"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 19336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 19334,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19319,
                          "src": "2653:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 19335,
                          "name": "expectedBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19329,
                          "src": "2663:15:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2653:25:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 19333,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        30716,
                        30717
                      ],
                      "referencedDeclaration": 30716,
                      "src": "2645:7:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 19337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2645:34:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19338,
                  "nodeType": "ExpressionStatement",
                  "src": "2645:34:114"
                },
                {
                  "assignments": [
                    19340
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 19340,
                      "name": "diff",
                      "nodeType": "VariableDeclaration",
                      "scope": 19385,
                      "src": "2689:12:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 19339,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2689:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 19344,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 19343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 19341,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19319,
                      "src": "2704:7:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 19342,
                      "name": "expectedBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19329,
                      "src": "2714:15:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2704:25:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2689:40:114"
                },
                {
                  "assignments": [
                    19346
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 19346,
                      "name": "available",
                      "nodeType": "VariableDeclaration",
                      "scope": 19385,
                      "src": "2739:17:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 19345,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2739:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 19349,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 19347,
                      "name": "maxAvailablePerTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12813,
                      "src": "2759:17:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 19348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2759:19:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2739:39:114"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 19353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 19351,
                          "name": "available",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19346,
                          "src": "2796:9:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 19352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2808:1:114",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2796:13:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 19350,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        30716,
                        30717
                      ],
                      "referencedDeclaration": 30716,
                      "src": "2788:7:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 19354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2788:22:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19355,
                  "nodeType": "ExpressionStatement",
                  "src": "2788:22:114"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 19358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 19356,
                      "name": "diff",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19340,
                      "src": "2824:4:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 19357,
                      "name": "available",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19346,
                      "src": "2831:9:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2824:16:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 19364,
                  "nodeType": "IfStatement",
                  "src": "2820:63:114",
                  "trueBody": {
                    "id": 19363,
                    "nodeType": "Block",
                    "src": "2842:41:114",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 19361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 19359,
                            "name": "diff",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19340,
                            "src": "2856:4:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 19360,
                            "name": "available",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19346,
                            "src": "2863:9:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2856:16:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 19362,
                        "nodeType": "ExpressionStatement",
                        "src": "2856:16:114"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 19366,
                          "name": "getCurrentDay",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12582,
                          "src": "2912:13:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 19367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2912:15:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19368,
                        "name": "diff",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19340,
                        "src": "2929:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 19365,
                      "name": "addTotalSpentPerDay",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12607,
                      "src": "2892:19:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 19369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2892:42:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19370,
                  "nodeType": "ExpressionStatement",
                  "src": "2892:42:114"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 19374,
                            "name": "diff",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19340,
                            "src": "2984:4:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 19372,
                            "name": "expectedBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19329,
                            "src": "2964:15:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 19373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29982,
                          "src": "2964:19:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 19375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2964:25:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 19371,
                      "name": "_setMediatorBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15122,
                      "src": "2944:19:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 19376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2944:46:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19377,
                  "nodeType": "ExpressionStatement",
                  "src": "2944:46:114"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 19379,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19310,
                        "src": "3012:9:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19380,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19310,
                        "src": "3023:9:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19381,
                        "name": "diff",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19340,
                        "src": "3034:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 19378,
                      "name": "passMessage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16103,
                      "src": "3000:11:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 19382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3000:39:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19383,
                  "nodeType": "ExpressionStatement",
                  "src": "3000:39:114"
                }
              ]
            },
            "documentation": "@dev Allows to send to the other network the amount of locked tokens that can be forced into the contract\nwithout the invocation of the required methods.\n@param _receiver the address that will receive the tokens on the other network",
            "id": 19385,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 19313,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 19312,
                  "name": "onlyIfUpgradeabilityOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 16408,
                  "src": "2465:25:114",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2465:25:114"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 19315,
                    "name": "_receiver",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19310,
                    "src": "2504:9:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 19316,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 19314,
                  "name": "validAddress",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 13975,
                  "src": "2491:12:114",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2491:23:114"
              }
            ],
            "name": "fixMediatorBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19311,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19310,
                  "name": "_receiver",
                  "nodeType": "VariableDeclaration",
                  "scope": 19385,
                  "src": "2437:17:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19309,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2437:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2436:19:114"
            },
            "payable": false,
            "returnParameters": {
              "id": 19317,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2515:0:114"
            },
            "scope": 19467,
            "src": "2409:637:114",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 19418,
              "nodeType": "Block",
              "src": "3438:174:114",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 19398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3452:7:114",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 19396,
                        "name": "lock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15336,
                        "src": "3453:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
                          "typeString": "function () returns (bool)"
                        }
                      },
                      "id": 19397,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3453:6:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 19417,
                  "nodeType": "IfStatement",
                  "src": "3448:158:114",
                  "trueBody": {
                    "id": 19416,
                    "nodeType": "Block",
                    "src": "3461:145:114",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 19403,
                                  "name": "_value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 19391,
                                  "src": "3517:6:114",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 19400,
                                    "name": "mediatorBalance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15110,
                                    "src": "3495:15:114",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                      "typeString": "function () view returns (uint256)"
                                    }
                                  },
                                  "id": 19401,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3495:17:114",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 19402,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "add",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 29982,
                                "src": "3495:21:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 19404,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3495:29:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 19399,
                            "name": "_setMediatorBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15122,
                            "src": "3475:19:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 19405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3475:50:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 19406,
                        "nodeType": "ExpressionStatement",
                        "src": "3475:50:114"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 19408,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19389,
                              "src": "3551:5:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 19410,
                                  "name": "_from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 19389,
                                  "src": "3573:5:114",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 19411,
                                  "name": "_data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 19393,
                                  "src": "3580:5:114",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 19409,
                                "name": "chooseReceiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13948,
                                "src": "3558:14:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$returns$_t_address_$",
                                  "typeString": "function (address,bytes memory) view returns (address)"
                                }
                              },
                              "id": 19412,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3558:28:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 19413,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19391,
                              "src": "3588:6:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 19407,
                            "name": "passMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16103,
                            "src": "3539:11:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 19414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3539:56:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 19415,
                        "nodeType": "ExpressionStatement",
                        "src": "3539:56:114"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev Executes action on deposit of bridged tokens\n@param _from address of tokens sender\n@param _value requsted amount of bridged tokens\n@param _data alternative receiver, if specified",
            "id": 19419,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "bridgeSpecificActionsOnTokenTransfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19394,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19387,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 19419,
                  "src": "3335:6:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC677_$1469",
                    "typeString": "contract ERC677"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 19386,
                    "name": "ERC677",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1469,
                    "src": "3335:6:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC677_$1469",
                      "typeString": "contract ERC677"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19389,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 19419,
                  "src": "3364:13:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19388,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3364:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19391,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 19419,
                  "src": "3387:14:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19390,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3387:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19393,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 19419,
                  "src": "3411:11:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 19392,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3411:5:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3325:103:114"
            },
            "payable": false,
            "returnParameters": {
              "id": 19395,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3438:0:114"
            },
            "scope": 19467,
            "src": "3280:332:114",
            "stateMutability": "nonpayable",
            "superFunction": 10089,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 19441,
              "nodeType": "Block",
              "src": "3922:123:114",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 19430,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19423,
                            "src": "3974:6:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 19427,
                              "name": "mediatorBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15110,
                              "src": "3952:15:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 19428,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3952:17:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 19429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29958,
                          "src": "3952:21:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 19431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3952:29:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 19426,
                      "name": "_setMediatorBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15122,
                      "src": "3932:19:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 19432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3932:50:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19433,
                  "nodeType": "ExpressionStatement",
                  "src": "3932:50:114"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 19437,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19421,
                        "src": "4019:10:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19438,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19423,
                        "src": "4031:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 19434,
                          "name": "erc677token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18882,
                          "src": "3992:11:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ERC677_$1469_$",
                            "typeString": "function () view returns (contract ERC677)"
                          }
                        },
                        "id": 19435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3992:13:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC677_$1469",
                          "typeString": "contract ERC677"
                        }
                      },
                      "id": 19436,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2383,
                      "src": "3992:26:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_address_$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 19439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3992:46:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19440,
                  "nodeType": "ExpressionStatement",
                  "src": "3992:46:114"
                }
              ]
            },
            "documentation": "@dev Unlock back the amount of tokens that were bridged to the other network but failed.\n@param _recipient address that will receive the tokens\n@param _value amount of tokens to be received",
            "id": 19442,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "executeActionOnFixedTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19421,
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 19442,
                  "src": "3877:18:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19420,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3877:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19423,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 19442,
                  "src": "3897:14:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19422,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3897:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3876:36:114"
            },
            "payable": false,
            "returnParameters": {
              "id": 19425,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3922:0:114"
            },
            "scope": 19467,
            "src": "3841:204:114",
            "stateMutability": "nonpayable",
            "superFunction": 16260,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 19465,
              "nodeType": "Block",
              "src": "4437:93:114",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 19457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 19452,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19444,
                          "src": "4455:6:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 19454,
                                "name": "_erc677token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10012,
                                "src": "4473:12:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ERC677_$1469_$",
                                  "typeString": "function () view returns (contract ERC677)"
                                }
                              },
                              "id": 19455,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4473:14:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC677_$1469",
                                "typeString": "contract ERC677"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC677_$1469",
                                "typeString": "contract ERC677"
                              }
                            ],
                            "id": 19453,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4465:7:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 19456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4465:23:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4455:33:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 19451,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        30716,
                        30717
                      ],
                      "referencedDeclaration": 30716,
                      "src": "4447:7:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 19458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4447:42:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19459,
                  "nodeType": "ExpressionStatement",
                  "src": "4447:42:114"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 19461,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19444,
                        "src": "4511:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19462,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19446,
                        "src": "4519:3:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 19460,
                      "name": "claimValues",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14003,
                      "src": "4499:11:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 19463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4499:24:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19464,
                  "nodeType": "ExpressionStatement",
                  "src": "4499:24:114"
                }
              ]
            },
            "documentation": "@dev Allows to transfer any locked token on this contract that is not part of the bridge operations.\n@param _token address of the token, if it is not provided, native tokens will be transferred.\n@param _to address that will receive the locked tokens on this contract.",
            "id": 19466,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 19449,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 19448,
                  "name": "onlyIfUpgradeabilityOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 16408,
                  "src": "4411:25:114",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4411:25:114"
              }
            ],
            "name": "claimTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19447,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19444,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 19466,
                  "src": "4373:14:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19443,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4373:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19446,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 19466,
                  "src": "4389:11:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19445,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4389:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4372:29:114"
            },
            "payable": false,
            "returnParameters": {
              "id": 19450,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4437:0:114"
            },
            "scope": 19467,
            "src": "4352:178:114",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 19468,
        "src": "381:4151:114"
      }
    ],
    "src": "0:4533:114"
  },
  "legacyAST": {
    "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/amb_erc677_to_erc677/ForeignAMBErc677ToErc677.sol",
    "exportedSymbols": {
      "ForeignAMBErc677ToErc677": [
        19467
      ]
    },
    "id": 19468,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 19200,
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:114"
      },
      {
        "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/amb_erc677_to_erc677/BasicAMBErc677ToErc677.sol",
        "file": "./BasicAMBErc677ToErc677.sol",
        "id": 19201,
        "nodeType": "ImportDirective",
        "scope": 19468,
        "sourceUnit": 19170,
        "src": "25:38:114",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/libraries/SafeERC20.sol",
        "file": "../../libraries/SafeERC20.sol",
        "id": 19202,
        "nodeType": "ImportDirective",
        "scope": 19468,
        "sourceUnit": 2407,
        "src": "64:39:114",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/MediatorBalanceStorage.sol",
        "file": "../MediatorBalanceStorage.sol",
        "id": 19203,
        "nodeType": "ImportDirective",
        "scope": 19468,
        "sourceUnit": 15124,
        "src": "104:39:114",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 19204,
              "name": "BasicAMBErc677ToErc677",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19169,
              "src": "418:22:114",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BasicAMBErc677ToErc677_$19169",
                "typeString": "contract BasicAMBErc677ToErc677"
              }
            },
            "id": 19205,
            "nodeType": "InheritanceSpecifier",
            "src": "418:22:114"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 19206,
              "name": "MediatorBalanceStorage",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15123,
              "src": "442:22:114",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MediatorBalanceStorage_$15123",
                "typeString": "contract MediatorBalanceStorage"
              }
            },
            "id": 19207,
            "nodeType": "InheritanceSpecifier",
            "src": "442:22:114"
          }
        ],
        "contractDependencies": [
          1500,
          9266,
          10090,
          10871,
          11468,
          12916,
          13954,
          14052,
          14172,
          14357,
          14798,
          15123,
          15318,
          15349,
          16261,
          16390,
          16409,
          16712,
          19169
        ],
        "contractKind": "contract",
        "documentation": "@title ForeignAMBErc677ToErc677\n@dev Foreign side implementation for erc677-to-erc677 mediator intended to work on top of AMB bridge.\nIt is designed to be used as an implementation contract of EternalStorageProxy contract.",
        "fullyImplemented": true,
        "id": 19467,
        "linearizedBaseContracts": [
          19467,
          15123,
          19169,
          16261,
          16390,
          10090,
          13954,
          14357,
          1500,
          12916,
          14172,
          11468,
          15318,
          10871,
          16712,
          14052,
          16409,
          15349,
          14798,
          9266
        ],
        "name": "ForeignAMBErc677ToErc677",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 19210,
            "libraryName": {
              "contractScope": null,
              "id": 19208,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2406,
              "src": "477:9:114",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$2406",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "471:27:114",
            "typeName": {
              "contractScope": null,
              "id": 19209,
              "name": "ERC677",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1469,
              "src": "491:6:114",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC677_$1469",
                "typeString": "contract ERC677"
              }
            }
          },
          {
            "body": {
              "id": 19249,
              "nodeType": "Block",
              "src": "794:271:114",
              "statements": [
                {
                  "assignments": [
                    19218
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 19218,
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "scope": 19250,
                      "src": "804:13:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 19217,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "804:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 19222,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 19220,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19214,
                        "src": "834:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 19219,
                      "name": "_unshiftValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14116,
                      "src": "820:13:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 19221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "820:21:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "804:37:114"
                },
                {
                  "assignments": [
                    19224
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 19224,
                      "name": "_messageId",
                      "nodeType": "VariableDeclaration",
                      "scope": 19250,
                      "src": "851:18:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 19223,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "851:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 19227,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 19225,
                      "name": "messageId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11456,
                      "src": "872:9:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
                        "typeString": "function () view returns (bytes32)"
                      }
                    },
                    "id": 19226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "872:11:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "851:32:114"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 19232,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19218,
                            "src": "936:5:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 19229,
                              "name": "mediatorBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15110,
                              "src": "914:15:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 19230,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "914:17:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 19231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29958,
                          "src": "914:21:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 19233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "914:28:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 19228,
                      "name": "_setMediatorBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15122,
                      "src": "894:19:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 19234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "894:49:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19235,
                  "nodeType": "ExpressionStatement",
                  "src": "894:49:114"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 19239,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19212,
                        "src": "980:10:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19240,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19218,
                        "src": "992:5:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 19236,
                          "name": "erc677token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18882,
                          "src": "953:11:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ERC677_$1469_$",
                            "typeString": "function () view returns (contract ERC677)"
                          }
                        },
                        "id": 19237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "953:13:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC677_$1469",
                          "typeString": "contract ERC677"
                        }
                      },
                      "id": 19238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2383,
                      "src": "953:26:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_address_$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 19241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "953:45:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19242,
                  "nodeType": "ExpressionStatement",
                  "src": "953:45:114"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 19244,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19212,
                        "src": "1028:10:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19245,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19218,
                        "src": "1040:5:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19246,
                        "name": "_messageId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19224,
                        "src": "1047:10:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 19243,
                      "name": "TokensBridged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16056,
                      "src": "1014:13:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,uint256,bytes32)"
                      }
                    },
                    "id": 19247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1014:44:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19248,
                  "nodeType": "EmitStatement",
                  "src": "1009:49:114"
                }
              ]
            },
            "documentation": "@dev Executes action on the request to withdraw tokens relayed from the other network\n@param _recipient address of tokens receiver\n@param _value amount of bridged tokens",
            "id": 19250,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "executeActionOnBridgedTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19212,
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 19250,
                  "src": "749:18:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19211,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "749:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19214,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 19250,
                  "src": "769:14:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19213,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "769:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "748:36:114"
            },
            "payable": false,
            "returnParameters": {
              "id": 19216,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "794:0:114"
            },
            "scope": 19467,
            "src": "711:354:114",
            "stateMutability": "nonpayable",
            "superFunction": 16253,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 19307,
              "nodeType": "Block",
              "src": "1518:615:114",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 19260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1786:7:114",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 19258,
                            "name": "lock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15336,
                            "src": "1787:4:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
                              "typeString": "function () returns (bool)"
                            }
                          },
                          "id": 19259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1787:6:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 19257,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        30716,
                        30717
                      ],
                      "referencedDeclaration": 30716,
                      "src": "1778:7:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 19261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1778:16:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19262,
                  "nodeType": "ExpressionStatement",
                  "src": "1778:16:114"
                },
                {
                  "assignments": [
                    19264
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 19264,
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "scope": 19308,
                      "src": "1804:12:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC677_$1469",
                        "typeString": "contract ERC677"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 19263,
                        "name": "ERC677",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1469,
                        "src": "1804:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC677_$1469",
                          "typeString": "contract ERC677"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 19267,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 19265,
                      "name": "erc677token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18882,
                      "src": "1819:11:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ERC677_$1469_$",
                        "typeString": "function () view returns (contract ERC677)"
                      }
                    },
                    "id": 19266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1819:13:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC677_$1469",
                      "typeString": "contract ERC677"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1804:28:114"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 19270,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19254,
                            "src": "1862:6:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 19269,
                          "name": "withinLimit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12544,
                          "src": "1850:11:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 19271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1850:19:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 19268,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        30716,
                        30717
                      ],
                      "referencedDeclaration": 30716,
                      "src": "1842:7:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 19272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1842:28:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19273,
                  "nodeType": "ExpressionStatement",
                  "src": "1842:28:114"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 19275,
                          "name": "getCurrentDay",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12582,
                          "src": "1900:13:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 19276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1900:15:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19277,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19254,
                        "src": "1917:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 19274,
                      "name": "addTotalSpentPerDay",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12607,
                      "src": "1880:19:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 19278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1880:44:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19279,
                  "nodeType": "ExpressionStatement",
                  "src": "1880:44:114"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 19281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1943:4:114",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 19280,
                      "name": "setLock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15348,
                      "src": "1935:7:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 19282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1935:13:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19283,
                  "nodeType": "ExpressionStatement",
                  "src": "1935:13:114"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 19287,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30713,
                          "src": "1981:3:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 19288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1981:10:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19289,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19254,
                        "src": "1993:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 19284,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19264,
                        "src": "1958:5:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC677_$1469",
                          "typeString": "contract ERC677"
                        }
                      },
                      "id": 19286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2405,
                      "src": "1958:22:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_address_$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 19290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1958:42:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19291,
                  "nodeType": "ExpressionStatement",
                  "src": "1958:42:114"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 19293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2018:5:114",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 19292,
                      "name": "setLock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15348,
                      "src": "2010:7:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 19294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2010:14:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19295,
                  "nodeType": "ExpressionStatement",
                  "src": "2010:14:114"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 19297,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19264,
                        "src": "2071:5:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC677_$1469",
                          "typeString": "contract ERC677"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 19298,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30713,
                          "src": "2078:3:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 19299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2078:10:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19300,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19254,
                        "src": "2090:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 19303,
                            "name": "_receiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19252,
                            "src": "2115:9:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 19301,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30700,
                            "src": "2098:3:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 19302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2098:16:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 19304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2098:27:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC677_$1469",
                          "typeString": "contract ERC677"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 19296,
                      "name": "bridgeSpecificActionsOnTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19419
                      ],
                      "referencedDeclaration": 19419,
                      "src": "2034:36:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC677_$1469_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (contract ERC677,address,uint256,bytes memory)"
                      }
                    },
                    "id": 19305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2034:92:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19306,
                  "nodeType": "ExpressionStatement",
                  "src": "2034:92:114"
                }
              ]
            },
            "documentation": "@dev Initiates the bridge operation that will lock the amount of tokens transferred and mint the tokens on\nthe other network. The user should first call Approve method of the ERC677 token.\n@param _receiver address that will receive the minted tokens on the other network.\n@param _value amount of tokens to be transferred to the other network.",
            "id": 19308,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "relayTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19255,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19252,
                  "name": "_receiver",
                  "nodeType": "VariableDeclaration",
                  "scope": 19308,
                  "src": "1474:17:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19251,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1474:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19254,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 19308,
                  "src": "1493:14:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19253,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1493:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1473:35:114"
            },
            "payable": false,
            "returnParameters": {
              "id": 19256,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1518:0:114"
            },
            "scope": 19467,
            "src": "1453:680:114",
            "stateMutability": "nonpayable",
            "superFunction": 18956,
            "visibility": "external"
          },
          {
            "body": {
              "id": 19384,
              "nodeType": "Block",
              "src": "2515:531:114",
              "statements": [
                {
                  "assignments": [
                    19319
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 19319,
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 19385,
                      "src": "2525:15:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 19318,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2525:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 19327,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 19324,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31032,
                            "src": "2576:4:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ForeignAMBErc677ToErc677_$19467",
                              "typeString": "contract ForeignAMBErc677ToErc677"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ForeignAMBErc677ToErc677_$19467",
                              "typeString": "contract ForeignAMBErc677ToErc677"
                            }
                          ],
                          "id": 19323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2568:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 19325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2568:13:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 19320,
                          "name": "_erc677token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10012,
                          "src": "2543:12:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ERC677_$1469_$",
                            "typeString": "function () view returns (contract ERC677)"
                          }
                        },
                        "id": 19321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2543:14:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC677_$1469",
                          "typeString": "contract ERC677"
                        }
                      },
                      "id": 19322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30327,
                      "src": "2543:24:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 19326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2543:39:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2525:57:114"
                },
                {
                  "assignments": [
                    19329
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 19329,
                      "name": "expectedBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 19385,
                      "src": "2592:23:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 19328,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2592:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 19332,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 19330,
                      "name": "mediatorBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15110,
                      "src": "2618:15:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 19331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2618:17:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2592:43:114"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 19336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 19334,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19319,
                          "src": "2653:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 19335,
                          "name": "expectedBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19329,
                          "src": "2663:15:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2653:25:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 19333,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        30716,
                        30717
                      ],
                      "referencedDeclaration": 30716,
                      "src": "2645:7:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 19337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2645:34:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19338,
                  "nodeType": "ExpressionStatement",
                  "src": "2645:34:114"
                },
                {
                  "assignments": [
                    19340
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 19340,
                      "name": "diff",
                      "nodeType": "VariableDeclaration",
                      "scope": 19385,
                      "src": "2689:12:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 19339,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2689:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 19344,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 19343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 19341,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19319,
                      "src": "2704:7:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 19342,
                      "name": "expectedBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19329,
                      "src": "2714:15:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2704:25:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2689:40:114"
                },
                {
                  "assignments": [
                    19346
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 19346,
                      "name": "available",
                      "nodeType": "VariableDeclaration",
                      "scope": 19385,
                      "src": "2739:17:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 19345,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2739:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 19349,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 19347,
                      "name": "maxAvailablePerTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12813,
                      "src": "2759:17:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 19348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2759:19:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2739:39:114"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 19353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 19351,
                          "name": "available",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19346,
                          "src": "2796:9:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 19352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2808:1:114",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2796:13:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 19350,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        30716,
                        30717
                      ],
                      "referencedDeclaration": 30716,
                      "src": "2788:7:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 19354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2788:22:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19355,
                  "nodeType": "ExpressionStatement",
                  "src": "2788:22:114"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 19358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 19356,
                      "name": "diff",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19340,
                      "src": "2824:4:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 19357,
                      "name": "available",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19346,
                      "src": "2831:9:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2824:16:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 19364,
                  "nodeType": "IfStatement",
                  "src": "2820:63:114",
                  "trueBody": {
                    "id": 19363,
                    "nodeType": "Block",
                    "src": "2842:41:114",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 19361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 19359,
                            "name": "diff",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19340,
                            "src": "2856:4:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 19360,
                            "name": "available",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19346,
                            "src": "2863:9:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2856:16:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 19362,
                        "nodeType": "ExpressionStatement",
                        "src": "2856:16:114"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 19366,
                          "name": "getCurrentDay",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12582,
                          "src": "2912:13:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 19367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2912:15:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19368,
                        "name": "diff",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19340,
                        "src": "2929:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 19365,
                      "name": "addTotalSpentPerDay",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12607,
                      "src": "2892:19:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 19369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2892:42:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19370,
                  "nodeType": "ExpressionStatement",
                  "src": "2892:42:114"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 19374,
                            "name": "diff",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19340,
                            "src": "2984:4:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 19372,
                            "name": "expectedBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19329,
                            "src": "2964:15:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 19373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29982,
                          "src": "2964:19:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 19375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2964:25:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 19371,
                      "name": "_setMediatorBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15122,
                      "src": "2944:19:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 19376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2944:46:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19377,
                  "nodeType": "ExpressionStatement",
                  "src": "2944:46:114"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 19379,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19310,
                        "src": "3012:9:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19380,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19310,
                        "src": "3023:9:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19381,
                        "name": "diff",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19340,
                        "src": "3034:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 19378,
                      "name": "passMessage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16103,
                      "src": "3000:11:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 19382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3000:39:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19383,
                  "nodeType": "ExpressionStatement",
                  "src": "3000:39:114"
                }
              ]
            },
            "documentation": "@dev Allows to send to the other network the amount of locked tokens that can be forced into the contract\nwithout the invocation of the required methods.\n@param _receiver the address that will receive the tokens on the other network",
            "id": 19385,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 19313,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 19312,
                  "name": "onlyIfUpgradeabilityOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 16408,
                  "src": "2465:25:114",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2465:25:114"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 19315,
                    "name": "_receiver",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19310,
                    "src": "2504:9:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 19316,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 19314,
                  "name": "validAddress",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 13975,
                  "src": "2491:12:114",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2491:23:114"
              }
            ],
            "name": "fixMediatorBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19311,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19310,
                  "name": "_receiver",
                  "nodeType": "VariableDeclaration",
                  "scope": 19385,
                  "src": "2437:17:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19309,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2437:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2436:19:114"
            },
            "payable": false,
            "returnParameters": {
              "id": 19317,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2515:0:114"
            },
            "scope": 19467,
            "src": "2409:637:114",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 19418,
              "nodeType": "Block",
              "src": "3438:174:114",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 19398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3452:7:114",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 19396,
                        "name": "lock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15336,
                        "src": "3453:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
                          "typeString": "function () returns (bool)"
                        }
                      },
                      "id": 19397,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3453:6:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 19417,
                  "nodeType": "IfStatement",
                  "src": "3448:158:114",
                  "trueBody": {
                    "id": 19416,
                    "nodeType": "Block",
                    "src": "3461:145:114",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 19403,
                                  "name": "_value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 19391,
                                  "src": "3517:6:114",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 19400,
                                    "name": "mediatorBalance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15110,
                                    "src": "3495:15:114",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                      "typeString": "function () view returns (uint256)"
                                    }
                                  },
                                  "id": 19401,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3495:17:114",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 19402,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "add",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 29982,
                                "src": "3495:21:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 19404,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3495:29:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 19399,
                            "name": "_setMediatorBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15122,
                            "src": "3475:19:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 19405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3475:50:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 19406,
                        "nodeType": "ExpressionStatement",
                        "src": "3475:50:114"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 19408,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19389,
                              "src": "3551:5:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 19410,
                                  "name": "_from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 19389,
                                  "src": "3573:5:114",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 19411,
                                  "name": "_data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 19393,
                                  "src": "3580:5:114",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 19409,
                                "name": "chooseReceiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13948,
                                "src": "3558:14:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$returns$_t_address_$",
                                  "typeString": "function (address,bytes memory) view returns (address)"
                                }
                              },
                              "id": 19412,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3558:28:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 19413,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19391,
                              "src": "3588:6:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 19407,
                            "name": "passMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16103,
                            "src": "3539:11:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 19414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3539:56:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 19415,
                        "nodeType": "ExpressionStatement",
                        "src": "3539:56:114"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev Executes action on deposit of bridged tokens\n@param _from address of tokens sender\n@param _value requsted amount of bridged tokens\n@param _data alternative receiver, if specified",
            "id": 19419,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "bridgeSpecificActionsOnTokenTransfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19394,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19387,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 19419,
                  "src": "3335:6:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC677_$1469",
                    "typeString": "contract ERC677"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 19386,
                    "name": "ERC677",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1469,
                    "src": "3335:6:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC677_$1469",
                      "typeString": "contract ERC677"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19389,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 19419,
                  "src": "3364:13:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19388,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3364:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19391,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 19419,
                  "src": "3387:14:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19390,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3387:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19393,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 19419,
                  "src": "3411:11:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 19392,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3411:5:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3325:103:114"
            },
            "payable": false,
            "returnParameters": {
              "id": 19395,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3438:0:114"
            },
            "scope": 19467,
            "src": "3280:332:114",
            "stateMutability": "nonpayable",
            "superFunction": 10089,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 19441,
              "nodeType": "Block",
              "src": "3922:123:114",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 19430,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19423,
                            "src": "3974:6:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 19427,
                              "name": "mediatorBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15110,
                              "src": "3952:15:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 19428,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3952:17:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 19429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29958,
                          "src": "3952:21:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 19431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3952:29:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 19426,
                      "name": "_setMediatorBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15122,
                      "src": "3932:19:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 19432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3932:50:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19433,
                  "nodeType": "ExpressionStatement",
                  "src": "3932:50:114"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 19437,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19421,
                        "src": "4019:10:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19438,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19423,
                        "src": "4031:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 19434,
                          "name": "erc677token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18882,
                          "src": "3992:11:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ERC677_$1469_$",
                            "typeString": "function () view returns (contract ERC677)"
                          }
                        },
                        "id": 19435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3992:13:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC677_$1469",
                          "typeString": "contract ERC677"
                        }
                      },
                      "id": 19436,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2383,
                      "src": "3992:26:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_address_$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 19439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3992:46:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19440,
                  "nodeType": "ExpressionStatement",
                  "src": "3992:46:114"
                }
              ]
            },
            "documentation": "@dev Unlock back the amount of tokens that were bridged to the other network but failed.\n@param _recipient address that will receive the tokens\n@param _value amount of tokens to be received",
            "id": 19442,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "executeActionOnFixedTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19421,
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 19442,
                  "src": "3877:18:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19420,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3877:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19423,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 19442,
                  "src": "3897:14:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19422,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3897:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3876:36:114"
            },
            "payable": false,
            "returnParameters": {
              "id": 19425,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3922:0:114"
            },
            "scope": 19467,
            "src": "3841:204:114",
            "stateMutability": "nonpayable",
            "superFunction": 16260,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 19465,
              "nodeType": "Block",
              "src": "4437:93:114",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 19457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 19452,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19444,
                          "src": "4455:6:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 19454,
                                "name": "_erc677token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10012,
                                "src": "4473:12:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ERC677_$1469_$",
                                  "typeString": "function () view returns (contract ERC677)"
                                }
                              },
                              "id": 19455,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4473:14:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC677_$1469",
                                "typeString": "contract ERC677"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC677_$1469",
                                "typeString": "contract ERC677"
                              }
                            ],
                            "id": 19453,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4465:7:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 19456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4465:23:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4455:33:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 19451,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        30716,
                        30717
                      ],
                      "referencedDeclaration": 30716,
                      "src": "4447:7:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 19458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4447:42:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19459,
                  "nodeType": "ExpressionStatement",
                  "src": "4447:42:114"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 19461,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19444,
                        "src": "4511:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19462,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19446,
                        "src": "4519:3:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 19460,
                      "name": "claimValues",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14003,
                      "src": "4499:11:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 19463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4499:24:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19464,
                  "nodeType": "ExpressionStatement",
                  "src": "4499:24:114"
                }
              ]
            },
            "documentation": "@dev Allows to transfer any locked token on this contract that is not part of the bridge operations.\n@param _token address of the token, if it is not provided, native tokens will be transferred.\n@param _to address that will receive the locked tokens on this contract.",
            "id": 19466,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 19449,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 19448,
                  "name": "onlyIfUpgradeabilityOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 16408,
                  "src": "4411:25:114",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4411:25:114"
              }
            ],
            "name": "claimTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19447,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19444,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 19466,
                  "src": "4373:14:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19443,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4373:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19446,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 19466,
                  "src": "4389:11:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19445,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4389:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4372:29:114"
            },
            "payable": false,
            "returnParameters": {
              "id": 19450,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4437:0:114"
            },
            "scope": 19467,
            "src": "4352:178:114",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 19468,
        "src": "381:4151:114"
      }
    ],
    "src": "0:4533:114"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-11-26T16:22:39.897Z",
  "devdoc": {
    "methods": {
      "bridgeContract()": {
        "details": "Get the AMB interface for the bridge contract address",
        "return": "AMB interface for the bridge contract address"
      },
      "claimTokens(address,address)": {
        "details": "Allows to transfer any locked token on this contract that is not part of the bridge operations.",
        "params": {
          "_to": "address that will receive the locked tokens on this contract.",
          "_token": "address of the token, if it is not provided, native tokens will be transferred."
        }
      },
      "decimalShift()": {
        "details": "Returns the value of foreign-to-home decimal shift.",
        "return": "decimal shift."
      },
      "erc677token()": {
        "details": "Public getter for token contract.",
        "return": "address of the used token contract"
      },
      "fixAssetsAboveLimits(bytes32,bool,uint256)": {
        "details": "Fixes locked tokens, that were out of execution limits during the call to handleBridgedTokens",
        "params": {
          "messageId": "reference for bridge operation that was out of execution limits",
          "unlockOnOtherSide": "true if fixed tokens should be unlocked to the other side of the bridge",
          "valueToUnlock": "unlocked amount of tokens, should be less than saved txAboveLimitsValue. Should be less than maxPerTx(), if tokens need to be unlocked on the other side."
        }
      },
      "fixFailedMessage(bytes32)": {
        "details": "Handles the request to fix transferred assets which bridged message execution failed on the other network. It uses the information stored by passMessage method when the assets were initially transferred",
        "params": {
          "_messageId": "id of the message which execution failed on the other network."
        }
      },
      "fixMediatorBalance(address)": {
        "details": "Allows to send to the other network the amount of locked tokens that can be forced into the contract without the invocation of the required methods.",
        "params": {
          "_receiver": "the address that will receive the tokens on the other network"
        }
      },
      "handleBridgedTokens(address,uint256)": {
        "details": "Handles the bridged tokens. Checks that the value is inside the execution limits and invokes the method to execute the Mint or Unlock accordingly.",
        "params": {
          "_recipient": "address that will receive the tokens",
          "_value": "amount of tokens to be received"
        }
      },
      "maxAvailablePerTx()": {
        "details": "Retrieves maximum available bridge amount per one transaction taking into account maxPerTx() and dailyLimit() parameters.",
        "return": "minimum of maxPerTx parameter and remaining daily quota."
      },
      "mediatorBalance()": {
        "details": "Tells the expected mediator balance.",
        "return": "the current expected mediator balance."
      },
      "mediatorContractOnOtherSide()": {
        "details": "Tells the mediator contract address from the other network.",
        "return": "the address of the mediator contract."
      },
      "messageFixed(bytes32)": {
        "details": "Tells if a message sent to the AMB bridge has been fixed.",
        "return": "bool indicating the status of the message."
      },
      "outOfLimitAmount()": {
        "details": "Total amount coins/tokens that were bridged from the other side and are out of execution limits.",
        "return": "total amount of all bridge operations above limits."
      },
      "owner()": {
        "details": "Tells the address of the owner",
        "return": "the address of the owner"
      },
      "relayTokens(address,uint256)": {
        "details": "Initiates the bridge operation that will lock the amount of tokens transferred and mint the tokens on the other network. The user should first call Approve method of the ERC677 token.",
        "params": {
          "_receiver": "address that will receive the minted tokens on the other network.",
          "_value": "amount of tokens to be transferred to the other network."
        }
      },
      "requestFailedMessageFix(bytes32)": {
        "details": "Method to be called when a bridged message execution failed. It will generate a new message requesting to fix/roll back the transferred assets on the other network.",
        "params": {
          "_messageId": "id of the message which execution failed."
        }
      },
      "requestGasLimit()": {
        "details": "Tells the gas limit to be used in the message execution by the AMB bridge on the other network.",
        "return": "the gas limit for the message execution."
      },
      "setBridgeContract(address)": {
        "details": "Sets the AMB bridge contract address. Only the owner can call this method.",
        "params": {
          "_bridgeContract": "the address of the bridge contract."
        }
      },
      "setMediatorContractOnOtherSide(address)": {
        "details": "Sets the mediator contract address from the other network. Only the owner can call this method.",
        "params": {
          "_mediatorContract": "the address of the mediator contract."
        }
      },
      "setRequestGasLimit(uint256)": {
        "details": "Sets the gas limit to be used in the message execution by the AMB bridge on the other network. This value can't exceed the parameter maxGasPerTx defined on the AMB bridge. Only the owner can call this method.",
        "params": {
          "_requestGasLimit": "the gas limit for the message execution."
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "the address to transfer ownership to."
        }
      }
    },
    "title": "ForeignAMBErc677ToErc677"
  },
  "userdoc": {
    "methods": {}
  }
}