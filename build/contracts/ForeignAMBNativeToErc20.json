{
  "contractName": "ForeignAMBNativeToErc20",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_messageId",
          "type": "bytes32"
        }
      ],
      "name": "fixFailedMessage",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_bridgeContract",
          "type": "address"
        }
      ],
      "name": "setBridgeContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_day",
          "type": "uint256"
        }
      ],
      "name": "totalSpentPerDay",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isInitialized",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_dailyLimit",
          "type": "uint256"
        }
      ],
      "name": "setExecutionDailyLimit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCurrentDay",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBridgeMode",
      "outputs": [
        {
          "name": "_data",
          "type": "bytes4"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "executionDailyLimit",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_day",
          "type": "uint256"
        }
      ],
      "name": "totalExecutedPerDay",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_messageId",
          "type": "bytes32"
        }
      ],
      "name": "messageFixed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_feeManager",
          "type": "address"
        }
      ],
      "name": "setFeeManagerContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "dailyLimit",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_mediatorContract",
          "type": "address"
        }
      ],
      "name": "setMediatorContractOnOtherSide",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "mediatorContractOnOtherSide",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withinExecutionLimit",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "executionMaxPerTx",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_recipient",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "handleBridgedTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "maxAvailablePerTx",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_messageId",
          "type": "bytes32"
        }
      ],
      "name": "requestFailedMessageFix",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBridgeInterfacesVersion",
      "outputs": [
        {
          "name": "major",
          "type": "uint64"
        },
        {
          "name": "minor",
          "type": "uint64"
        },
        {
          "name": "patch",
          "type": "uint64"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_minPerTx",
          "type": "uint256"
        }
      ],
      "name": "setMinPerTx",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_dailyLimit",
          "type": "uint256"
        }
      ],
      "name": "setDailyLimit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "requestGasLimit",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_maxPerTx",
          "type": "uint256"
        }
      ],
      "name": "setMaxPerTx",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "bridgeContract",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimalShift",
      "outputs": [
        {
          "name": "",
          "type": "int256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "feeManagerContract",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "minPerTx",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withinLimit",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_maxPerTx",
          "type": "uint256"
        }
      ],
      "name": "setExecutionMaxPerTx",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_requestGasLimit",
          "type": "uint256"
        }
      ],
      "name": "setRequestGasLimit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "maxPerTx",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "feeAmount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "messageId",
          "type": "bytes32"
        }
      ],
      "name": "FeeDistributed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "messageId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "FailedMessageFixed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "messageId",
          "type": "bytes32"
        }
      ],
      "name": "TokensBridged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "newLimit",
          "type": "uint256"
        }
      ],
      "name": "DailyLimitChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "newLimit",
          "type": "uint256"
        }
      ],
      "name": "ExecutionDailyLimitChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_bridgeContract",
          "type": "address"
        },
        {
          "name": "_mediatorContract",
          "type": "address"
        },
        {
          "name": "_dailyLimitMaxPerTxMinPerTxArray",
          "type": "uint256[3]"
        },
        {
          "name": "_executionDailyLimitExecutionMaxPerTxArray",
          "type": "uint256[2]"
        },
        {
          "name": "_requestGasLimit",
          "type": "uint256"
        },
        {
          "name": "_decimalShift",
          "type": "int256"
        },
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_erc677token",
          "type": "address"
        },
        {
          "name": "_feeManager",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "erc677token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_receiver",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "relayTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "onTokenTransfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "claimTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "claimTokensFromErc677",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_receiver\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"relayTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_messageId\",\"type\":\"bytes32\"}],\"name\":\"fixFailedMessage\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_bridgeContract\",\"type\":\"address\"}],\"name\":\"setBridgeContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"erc677token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_day\",\"type\":\"uint256\"}],\"name\":\"totalSpentPerDay\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isInitialized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dailyLimit\",\"type\":\"uint256\"}],\"name\":\"setExecutionDailyLimit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCurrentDay\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBridgeMode\",\"outputs\":[{\"name\":\"_data\",\"type\":\"bytes4\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"executionDailyLimit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_day\",\"type\":\"uint256\"}],\"name\":\"totalExecutedPerDay\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_messageId\",\"type\":\"bytes32\"}],\"name\":\"messageFixed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_feeManager\",\"type\":\"address\"}],\"name\":\"setFeeManagerContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dailyLimit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"claimTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_mediatorContract\",\"type\":\"address\"}],\"name\":\"setMediatorContractOnOtherSide\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mediatorContractOnOtherSide\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withinExecutionLimit\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"executionMaxPerTx\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_recipient\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"handleBridgedTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"claimTokensFromErc677\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxAvailablePerTx\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_messageId\",\"type\":\"bytes32\"}],\"name\":\"requestFailedMessageFix\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBridgeInterfacesVersion\",\"outputs\":[{\"name\":\"major\",\"type\":\"uint64\"},{\"name\":\"minor\",\"type\":\"uint64\"},{\"name\":\"patch\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_minPerTx\",\"type\":\"uint256\"}],\"name\":\"setMinPerTx\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"onTokenTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dailyLimit\",\"type\":\"uint256\"}],\"name\":\"setDailyLimit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_bridgeContract\",\"type\":\"address\"},{\"name\":\"_mediatorContract\",\"type\":\"address\"},{\"name\":\"_dailyLimitMaxPerTxMinPerTxArray\",\"type\":\"uint256[3]\"},{\"name\":\"_executionDailyLimitExecutionMaxPerTxArray\",\"type\":\"uint256[2]\"},{\"name\":\"_requestGasLimit\",\"type\":\"uint256\"},{\"name\":\"_decimalShift\",\"type\":\"int256\"},{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_erc677token\",\"type\":\"address\"},{\"name\":\"_feeManager\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"requestGasLimit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_maxPerTx\",\"type\":\"uint256\"}],\"name\":\"setMaxPerTx\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bridgeContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimalShift\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeManagerContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minPerTx\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withinLimit\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_maxPerTx\",\"type\":\"uint256\"}],\"name\":\"setExecutionMaxPerTx\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_requestGasLimit\",\"type\":\"uint256\"}],\"name\":\"setRequestGasLimit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxPerTx\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"feeAmount\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"messageId\",\"type\":\"bytes32\"}],\"name\":\"FeeDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"messageId\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"FailedMessageFixed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"messageId\",\"type\":\"bytes32\"}],\"name\":\"TokensBridged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newLimit\",\"type\":\"uint256\"}],\"name\":\"DailyLimitChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newLimit\",\"type\":\"uint256\"}],\"name\":\"ExecutionDailyLimitChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"bridgeContract()\":{\"details\":\"Get the AMB interface for the bridge contract address\",\"return\":\"AMB interface for the bridge contract address\"},\"claimTokens(address,address)\":{\"details\":\"Allows to transfer any locked token on this contract that is not part of the bridge operations.\",\"params\":{\"_to\":\"address that will receive the locked tokens on this contract.\",\"_token\":\"address of the token, if it is not provided, native tokens will be transferred.\"}},\"claimTokensFromErc677(address,address)\":{\"details\":\"Allows to transfer any locked token on the ERC677 token contract.\",\"params\":{\"_to\":\"address that will receive the locked tokens on this contract.\",\"_token\":\"address of the token, if it is not provided, native tokens will be transferred.\"}},\"decimalShift()\":{\"details\":\"Returns the value of foreign-to-home decimal shift.\",\"return\":\"decimal shift.\"},\"erc677token()\":{\"details\":\"Public getter for token contract.\",\"return\":\"address of the used token contract\"},\"feeManagerContract()\":{\"details\":\"Tells the fee manager contract address\",\"return\":\"the address of the fee manager contract.\"},\"fixFailedMessage(bytes32)\":{\"details\":\"Handles the request to fix transferred assets which bridged message execution failed on the other network. It uses the information stored by passMessage method when the assets were initially transferred\",\"params\":{\"_messageId\":\"id of the message which execution failed on the other network.\"}},\"getBridgeInterfacesVersion()\":{\"details\":\"Tells the bridge interface version that this contract supports.\",\"return\":\"major value of the versionminor value of the versionpatch value of the version\"},\"getBridgeMode()\":{\"details\":\"Tells the bridge mode that this contract supports.\",\"return\":\"_data 4 bytes representing the bridge mode\"},\"handleBridgedTokens(address,uint256)\":{\"details\":\"Handles the bridged tokens. Checks that the value is inside the execution limits and invokes the method to execute the Mint or Unlock accordingly.\",\"params\":{\"_recipient\":\"address that will receive the tokens\",\"_value\":\"amount of tokens to be received\"}},\"initialize(address,address,uint256[3],uint256[2],uint256,int256,address,address,address)\":{\"details\":\"Stores the initial parameters of the mediator.\",\"params\":{\"_bridgeContract\":\"the address of the AMB bridge contract.\",\"_dailyLimitMaxPerTxMinPerTxArray\":\"array with limit values for the assets to be bridged to the other network.  [ 0 = dailyLimit, 1 = maxPerTx, 2 = minPerTx ]\",\"_decimalShift\":\"number of decimals shift required to adjust the amount of tokens bridged.\",\"_erc677token\":\"address of the erc677 token contract\",\"_executionDailyLimitExecutionMaxPerTxArray\":\"array with limit values for the assets bridged from the other network.  [ 0 = executionDailyLimit, 1 = executionMaxPerTx ]\",\"_feeManager\":\"address of the fee manager contract\",\"_mediatorContract\":\"the address of the mediator contract on the other network.\",\"_owner\":\"address of the owner of the mediator contract\",\"_requestGasLimit\":\"the gas limit for the message execution.\"}},\"maxAvailablePerTx()\":{\"details\":\"Retrieves maximum available bridge amount per one transaction taking into account maxPerTx() and dailyLimit() parameters.\",\"return\":\"minimum of maxPerTx parameter and remaining daily quota.\"},\"mediatorContractOnOtherSide()\":{\"details\":\"Tells the mediator contract address from the other network.\",\"return\":\"the address of the mediator contract.\"},\"messageFixed(bytes32)\":{\"details\":\"Tells if a message sent to the AMB bridge has been fixed.\",\"return\":\"bool indicating the status of the message.\"},\"onTokenTransfer(address,uint256,bytes)\":{\"details\":\"This method is called when transferAndCall is used from ERC677 to transfer the tokens to this contract. It will initiate the bridge operation that will burn the amount of tokens transferred and unlock the native tokens on the other network.\",\"params\":{\"_data\":\"this parameter could contain the address of an alternative receiver of the tokens on the other network, otherwise it will be empty.\",\"_from\":\"address that transferred the tokens.\",\"_value\":\"amount of tokens transferred.\"}},\"owner()\":{\"details\":\"Tells the address of the owner\",\"return\":\"the address of the owner\"},\"relayTokens(address,uint256)\":{\"details\":\"It will initiate the bridge operation that will burn the amount of tokens transferred and unlock the native tokens on the other network. The user should first call Approve method of the ERC677 token.\",\"params\":{\"_receiver\":\"address that will receive the native tokens on the other network.\",\"_value\":\"amount of tokens to be transferred to the other network.\"}},\"requestFailedMessageFix(bytes32)\":{\"details\":\"Method to be called when a bridged message execution failed. It will generate a new message requesting to fix/roll back the transferred assets on the other network.\",\"params\":{\"_messageId\":\"id of the message which execution failed.\"}},\"requestGasLimit()\":{\"details\":\"Tells the gas limit to be used in the message execution by the AMB bridge on the other network.\",\"return\":\"the gas limit for the message execution.\"},\"setBridgeContract(address)\":{\"details\":\"Sets the AMB bridge contract address. Only the owner can call this method.\",\"params\":{\"_bridgeContract\":\"the address of the bridge contract.\"}},\"setFeeManagerContract(address)\":{\"details\":\"Sets the fee manager contract address. Only the owner can call this method.\",\"params\":{\"_feeManager\":\"the address of the fee manager contract.\"}},\"setMediatorContractOnOtherSide(address)\":{\"details\":\"Sets the mediator contract address from the other network. Only the owner can call this method.\",\"params\":{\"_mediatorContract\":\"the address of the mediator contract.\"}},\"setRequestGasLimit(uint256)\":{\"details\":\"Sets the gas limit to be used in the message execution by the AMB bridge on the other network. This value can't exceed the parameter maxGasPerTx defined on the AMB bridge. Only the owner can call this method.\",\"params\":{\"_requestGasLimit\":\"the gas limit for the message execution.\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"the address to transfer ownership to.\"}}},\"title\":\"ForeignAMBNativeToErc20\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/amb_native_to_erc20/ForeignAMBNativeToErc20.sol\":\"ForeignAMBNativeToErc20\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/interfaces/ERC677.sol\":{\"keccak256\":\"0xa4252d5b9e3d1b536b6a5edce1b712530827fcc792438ca17fa60fb64d4463ca\",\"urls\":[\"bzzr://ca1db6e12bc9753410003682a5cb6ebfc87ee238e78ba4a3033f915c66c3c72b\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/interfaces/ERC677Receiver.sol\":{\"keccak256\":\"0x1343ae44729d851f88868c8712a9e864316badd59f8dd0988d108c2c43927ac9\",\"urls\":[\"bzzr://f3f8ad86c8f5c7e213fd5811e4362d83cf611bef3fcfd4438a876556ffbb4f16\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/interfaces/IAMB.sol\":{\"keccak256\":\"0xd95469da5c2b895e9f8b23a864f931f053efd9b22a1c0af1928e5802df74c73f\",\"urls\":[\"bzzr://ba73b8e65499bb98dba6fbbceb818784cb8122d6901960e2ef61c7a5ab254a69\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/interfaces/IBurnableMintableERC677Token.sol\":{\"keccak256\":\"0x74fd1c41330140ddd6dc29037ca04ee13a23a44c5c5b3c4ce284a99cc78484a1\",\"urls\":[\"bzzr://dff872387b862977ce1b000a31d08aaccb1ea3e43bf9b7403911841d1e3aabef\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/interfaces/IMediatorFeeManager.sol\":{\"keccak256\":\"0x75e6b060a6a61f5cf2bd4fc6e68329b7f4613f589757fd7d7769eb4975eb6c3f\",\"urls\":[\"bzzr://d94edd63a7aec31b637e3257b1817ff4e20ddb4bdbbbcb5111ae061631231dc9\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/interfaces/IUpgradeabilityOwnerStorage.sol\":{\"keccak256\":\"0xa6b5c96c8165d49676d227a9b7070faffdb7325906a598797fe66ca5917e76ef\",\"urls\":[\"bzzr://14c7b605baba9012f1386dce78e5b2665c682ec6a5bae3f4a6ec15f98ba40aa9\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/libraries/Address.sol\":{\"keccak256\":\"0x9d5d8f089aedf9dfa743c9bc66bc901db5da5be78892af178340800873e1c722\",\"urls\":[\"bzzr://97602c15f88d529b68d7929717afa75fd03cd0f23a1363c14cd263dbcc17599e\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/libraries/Bytes.sol\":{\"keccak256\":\"0xaac87fcac1962e29a85f577dafccf09d06b413fcc5bf97e821dca0b25183c310\",\"urls\":[\"bzzr://e1a3e3f8d13a8009d505b4d20029adbbcaf4c20a92ee10a223767fbb6d093dd2\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/libraries/SafeERC20.sol\":{\"keccak256\":\"0xb1f0a33f17fee9d600a2269fecce80d79377af3aeb2922e903fe4e3b57dc0c4f\",\"urls\":[\"bzzr://e3b6f5e2a1e88e69d403cbf2925c92c662b4fe6ea28dee292948187203ac6c98\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeability/EternalStorage.sol\":{\"keccak256\":\"0x8f2df79a1cda812d4be25da8f2b138f9b7492e76da1dfba21d87012e649cc51c\",\"urls\":[\"bzzr://0846d08e1b7a84e541ae31c91d2c0b34d88cf3abbd18891ec6eedeea7e958af2\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/BaseERC677Bridge.sol\":{\"keccak256\":\"0x68adcbc23fcaf31480b6cc15c929dd7f62aed7edf48f1b50e2b0e3658b261778\",\"urls\":[\"bzzr://8bba5f8eaae0e989a9899ca07a9df296e28ba67459aad85235112e777ec69fe2\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/BasicAMBMediator.sol\":{\"keccak256\":\"0x817cdf39d46eed56fdf6fc124b7163d1dc296b8b02fbc0fd34ee1948d8816eab\",\"urls\":[\"bzzr://02cf31c071d2a58a929d0fa1dae4d647ae1ce881221695a0730b66f6098cfa4a\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/BasicTokenBridge.sol\":{\"keccak256\":\"0x0ad6a56603c8bc28ab384cbb7b51a6b4eb242264f23a0f0464224f77a85a19a5\",\"urls\":[\"bzzr://fdb04b2368b6ffab36560c9231b9a90ee1982eba8027d3f4a91e6c964bef5197\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/ChooseReceiverHelper.sol\":{\"keccak256\":\"0xed188cae33d353543654b085650def4bf4be21304b0380fa683fbe06dbc4d3ce\",\"urls\":[\"bzzr://6c4aa7785721d11c9c8c03400e24e0049de3359b9deb55a6d8db6443183b974c\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/Claimable.sol\":{\"keccak256\":\"0xfe020277ad01d6e42674c0906fb33eeec54964e928208fdd7fc0ab68c2967773\",\"urls\":[\"bzzr://2d1d90cdfb9e0917f83bdfcc4f8398e3f035c4c62da4e79e81ad4c4252b1d979\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/DecimalShiftBridge.sol\":{\"keccak256\":\"0x9ebdcd28b12565bdb6e87b631c1aa6d7927d3f4298e368acfdd86bbf71fc2a83\",\"urls\":[\"bzzr://9f2f39db4f4778334408a2a2baa2d97b517a76929c2f7ebb1efe0cb4c77cfd23\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/ERC677Storage.sol\":{\"keccak256\":\"0x4c7b3459083f9d776c523846d2ca45a1066c5295b16acba13877f600797f625f\",\"urls\":[\"bzzr://4b738fb49963baf92c55d2a15a9fdb90a731c3a549ec2f331aef1e7e1cdf5317\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/Initializable.sol\":{\"keccak256\":\"0xed94c4128ada87141d6c640d5bf4d0a5227cd68fad16be6304a121847fe6494f\",\"urls\":[\"bzzr://2dfbb776af73c3cfe3b6d3dd4545dc7cc55694d4636c0d1043d46ace7dd42ab2\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/Ownable.sol\":{\"keccak256\":\"0xa61d31759a177fc38a5dcf34387cfc9870bbe64f946c14c380d13ddcd9aa6113\",\"urls\":[\"bzzr://7d8b5611ce1d97b28de5d10d5569fe2bd710e851f55b02d628b7a881ca9a9b40\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/ReentrancyGuard.sol\":{\"keccak256\":\"0x8eeae0c6814a239234e23b741950407be18bf86ccca5b1e2a44f53c1c2e678eb\",\"urls\":[\"bzzr://c189a949f46ce94256fc611ef07a53648519f61d121b95466f4cb4a2ab397465\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/RewardableMediator.sol\":{\"keccak256\":\"0x1ab7e1f2382ac750f46cb43cecf01cae6deac5a25db724a02437d275eeaa8bdf\",\"urls\":[\"bzzr://74f8a8ae528014a15d9917200b6a1e120fc1c3b55e5354a32aa389098354423b\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/Sacrifice.sol\":{\"keccak256\":\"0x2c8f9b5e39d33552cd16d3fdd84e58f2138042166ae9b351e97fe674f7e3f337\",\"urls\":[\"bzzr://a438edd320ea1fa8141d54002897c3a50cf6cb13b07b4088d01ffb099bb9e859\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/TokenBridgeMediator.sol\":{\"keccak256\":\"0x7bcf6f7e97e77b19dc9c91ebc02a8e7b8210fc450338a5a549b4af0ff76b0254\",\"urls\":[\"bzzr://db9f6e263190a5b0681ed7e52308e112d218bb5881cb2a391da164c126a61f6e\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/TransferInfoStorage.sol\":{\"keccak256\":\"0xf284bf49c93b62b92ba14c5eb87c1f94b4893bf7c65499f254dd6a03363071f2\",\"urls\":[\"bzzr://6cdf94e9fd04016ed2a8d3ada76e413c0aefa1d2346259a4a4c60f5eff3dde1b\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/Upgradeable.sol\":{\"keccak256\":\"0xbfbec6c479103b324cc0c2ab115b3d9d3226abdfa0ab19fccbfdf223a38a6511\",\"urls\":[\"bzzr://fcde383760b302df8f3a6bf5bb8371d1138c2c7bf6d15e1abf972180c181af8b\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/VersionableBridge.sol\":{\"keccak256\":\"0x20e13a4da2277be92631581b29607b525a6d8a1868d5f0bf43d970408e9b2bc0\",\"urls\":[\"bzzr://a8c1f803d409d79319f4907066a1e38a811f758142243bef553ae9ad2516814d\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/amb_native_to_erc20/BasicAMBNativeToErc20.sol\":{\"keccak256\":\"0xa76dfd6af1aaa2e2609774a9ac5891848670560f5fa7d9f1751241939aa6382f\",\"urls\":[\"bzzr://278261f55479d0be2477b2760fc710714b15a2818c4fdf67c5bb470dc5bd293c\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/amb_native_to_erc20/ForeignAMBNativeToErc20.sol\":{\"keccak256\":\"0x12f0e5d2e70246fba823fb977c2c52d9c45769d4d4ae60162cdc0d41848f247a\",\"urls\":[\"bzzr://786122c484f58022f90ba562853eb37ee8b13b23a0e1a9bf36e781249610b709\"]},\"openzeppelin-solidity/contracts/AddressUtils.sol\":{\"keccak256\":\"0x5ed3dc711dbb34917afff3c753adf3b0580514d1339cfedaa5a73645d8ac9b56\",\"urls\":[\"bzzr://d597eeb695a3d64766453239e973ddd65994c258ab8d5cab0d90103033ce85fc\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xa1c5e1d9ebbf654d332ca8e7a5c04a6a6a9d142eeaab3b988c2c909c81a62bef\",\"urls\":[\"bzzr://d062fb4a1b6de1f036ee0e73364a2532c4757eb68e95dd8c5cbb2d17b8732c6a\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd5feb2643c87547e65b8d6f1af02539b1dee1ad53046945e237eaa8ba649c93b\",\"urls\":[\"bzzr://69768215a261b30a376a901b83b1e6716e3916c9fd791ac67450c283e62212ad\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol\":{\"keccak256\":\"0x516a17244073b518096ced7c8c94924cb29746ef0a4b6cc6cde125ac0406a419\",\"urls\":[\"bzzr://7addb1b5cad767651b9bcd688ba5b08769c1f3b70a470e34752a7717756d090d\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506131fd806100206000396000f3006080604052600436106101d45763ffffffff60e060020a60003504166301e4f53a81146101d95780630950d515146101ff5780630b26cf661461021757806318d8f9c9146102385780632bd0bb0514610269578063392e53cd146102935780633dd95d1b146102bc5780633e6968b6146102d4578063437764df146102e957806343b37dd3146103335780634fb3fef714610348578063593399821461036057806360756f7c1461037857806367eeba0c1461039957806369ffa08a146103ae5780636e5d6bea146103d5578063871c0760146103f6578063879ce6761461040b5780638aa1949a146104235780638b6c0354146104385780638da5cb5b1461045c5780639313dc431461047157806395e54a17146104985780639a4a4395146104ad5780639cb7595a146104c5578063a2a6ca2714610506578063a4c0ed361461051e578063b20d30a91461054f578063b5deba3214610567578063be3b625b146105b2578063c6f6f216146105c7578063cd596583146105df578063dae5f0fd146105f4578063dbe03a8b14610609578063df25f3f01461061e578063ea9f496814610633578063f20151e11461064b578063f2fde38b14610663578063f3b8379114610684578063f968adbe1461069c575b600080fd5b3480156101e557600080fd5b506101fd600160a060020a03600435166024356106b1565b005b34801561020b57600080fd5b506101fd6004356107fd565b34801561022357600080fd5b506101fd600160a060020a03600435166108cc565b34801561024457600080fd5b5061024d6108f4565b60408051600160a060020a039092168252519081900360200190f35b34801561027557600080fd5b50610281600435610903565b60408051918252519081900360200190f35b34801561029f57600080fd5b506102a86109c0565b604080519115158252519081900360200190f35b3480156102c857600080fd5b506101fd600435610a11565b3480156102e057600080fd5b50610281610ad1565b3480156102f557600080fd5b506102fe610ada565b604080517fffffffff000000000000000000000000000000000000000000000000000000009092168252519081900360200190f35b34801561033f57600080fd5b50610281610afe565b34801561035457600080fd5b50610281600435610b4c565b34801561036c57600080fd5b506102a8600435610bc7565b34801561038457600080fd5b506101fd600160a060020a0360043516610c90565b3480156103a557600080fd5b50610281610cb5565b3480156103ba57600080fd5b506101fd600160a060020a0360043581169060243516610d03565b3480156103e157600080fd5b506101fd600160a060020a0360043516610d8f565b34801561040257600080fd5b5061024d610db4565b34801561041757600080fd5b506102a8600435610e0b565b34801561042f57600080fd5b50610281610e55565b34801561044457600080fd5b506101fd600160a060020a0360043516602435610ea3565b34801561046857600080fd5b5061024d610f23565b34801561047d57600080fd5b506101fd600160a060020a0360043581169060243516610f7a565b3480156104a457600080fd5b50610281611089565b3480156104b957600080fd5b506101fd6004356110e3565b3480156104d157600080fd5b506104da61141f565b6040805167ffffffffffffffff9485168152928416602084015292168183015290519081900360600190f35b34801561051257600080fd5b506101fd600435611429565b34801561052a57600080fd5b506102a860048035600160a060020a03169060248035916044359182019101356114c5565b34801561055b57600080fd5b506101fd600435611562565b34801561057357600080fd5b506102a8600160a060020a0360043581169060243581169060449060a49060e43590610104359061012435811690610144358116906101643516611622565b3480156105be57600080fd5b506102816117d9565b3480156105d357600080fd5b506101fd600435611827565b3480156105eb57600080fd5b5061024d6118bf565b34801561060057600080fd5b50610281611916565b34801561061557600080fd5b5061024d611964565b34801561062a57600080fd5b506102816119bb565b34801561063f57600080fd5b506102a8600435611a09565b34801561065757600080fd5b506101fd600435611a54565b34801561066f57600080fd5b506101fd600160a060020a0360043516611ad0565b34801561069057600080fd5b506101fd600435611af5565b3480156106a857600080fd5b50610281611b1a565b6000806106bc611b68565b156106c657600080fd5b6106ce6108f4565b91503090506106dc83611a09565b15156106e757600080fd5b6106f86106f2610ad1565b84611bb9565b6107026001611c82565b604080517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152600160a060020a038381166024830152604482018690529151918416916323b872dd916064808201926020929091908290030181600087803b15801561077457600080fd5b505af1158015610788573d6000803e3d6000fd5b505050506040513d602081101561079e57600080fd5b506107ab90506000611c82565b6107f7823385876040516020018082600160a060020a0316600160a060020a03166c01000000000000000000000000028152601401915050604051602081830303815290604052611cdd565b50505050565b6000806108086118bf565b600160a060020a0316331461081c57600080fd5b610824610db4565b600160a060020a0316610835611d60565b600160a060020a03161461084857600080fd5b61085183610bc7565b1561085b57600080fd5b61086483611dd8565b915061086f83611ea7565b905061087a83611f2a565b6108848282611ffc565b60408051600160a060020a038416815260208101839052815185927f06297b0797e3363e96e454edd4ab62862051bf559a7a431ce09415306771d133928290030190a2505050565b6108d4610f23565b600160a060020a031633146108e857600080fd5b6108f181612090565b50565b60006108fe61211b565b905090565b60008060008360405160200180807f746f74616c5370656e74506572446179000000000000000000000000000000008152506010018281526020019150506040516020818303038152906040526040518082805190602001908083835b6020831061097f5780518252601f199092019160209182019101610960565b51815160209384036101000a600019018019909216911617905260408051929094018290039091208652850195909552929092016000205495945050505050565b7f0a6f646cd611241d8073675e00d1a1ff700fbf1b53fcf473de56d1e6e4b714ba60005260046020527f078d888f9b66f3f8bfa10909e31f1e16240db73449f0500afdbbe3a70da457cc5460ff1690565b610a19610f23565b600160a060020a03163314610a2d57600080fd5b610a35610e55565b811180610a40575080155b1515610a4b57600080fd5b7f21dbcab260e413c20dc13c28b7db95e2b423d1135f42bb8b7d5214a92270d237600090815260209081527fadd938dbd083a16bae12238cd914fca0afc7a30edb55b1cd5c7f1823f1b0e4218290556040805183815290517f9bebf928b90863f24cc31f726a3a7545efd409f1dcf552301b1ee3710da70d3b929181900390910190a150565b62015180420490565b7f582ed8fd0000000000000000000000000000000000000000000000000000000090565b7f21dbcab260e413c20dc13c28b7db95e2b423d1135f42bb8b7d5214a92270d23760009081526020527fadd938dbd083a16bae12238cd914fca0afc7a30edb55b1cd5c7f1823f1b0e4215490565b60008060008360405160200180807f746f74616c4578656375746564506572446179000000000000000000000000008152506013018281526020019150506040516020818303038152906040526040518082805190602001908083836020831061097f5780518252601f199092019160209182019101610960565b6000600460008360405160200180807f6d65737361676546697865640000000000000000000000000000000000000000815250600c0182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b60208310610c4c5780518252601f199092019160209182019101610c2d565b51815160209384036101000a600019018019909216911617905260408051929094018290039091208652850195909552929092016000205460ff1695945050505050565b610c98610f23565b600160a060020a03163314610cac57600080fd5b6108f181612172565b7f4a6a899679f26b73530d8cf1001e83b6f7702e04b6fdb98f3c62dc7e47e041a560009081526020527f1ab29a5cca988aee50edccdd61c5bcaa7ad4b29a03b7ee50f298ceccfe14cc4e5490565b30600160a060020a0316636fde82026040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015610d4157600080fd5b505af1158015610d55573d6000803e3d6000fd5b505050506040513d6020811015610d6b57600080fd5b5051600160a060020a03163314610d8157600080fd5b610d8b828261220e565b5050565b610d97610f23565b600160a060020a03163314610dab57600080fd5b6108f181612251565b7f98aa806e31e94a687a31c65769cb99670064dd7f5a87526da075c5fb4eab988060005260026020527f0c1206883be66049a02d4937078367c00b3d71dd1a9465df969363c6ddeac96d54600160a060020a031690565b600080610e2e83610e22610e1d610ad1565b610b4c565b9063ffffffff6122c816565b905080610e39610afe565b10158015610e4e5750610e4a610e55565b8311155b9392505050565b7fc0ed44c192c86d1cc1ba51340b032c2766b4a2b0041031de13c46dd7104888d560009081526020527ff8e983ee86e5e377e9e34c9131b266382c3f04113d20de077f9e12663c7a646b5490565b610eab6118bf565b600160a060020a03163314610ebf57600080fd5b610ec7610db4565b600160a060020a0316610ed8611d60565b600160a060020a031614610eeb57600080fd5b610ef481610e0b565b15610f1957610f0a610f04610ad1565b826122db565b610f148282612361565b610d8b565b610d8b82826101d4565b7f02016836a56b71f0d02689e69e326f4f4c1b9057164ef592671cf0d37c8040c060005260026020527fb7802e97e87ef2842a6cce7da7ffaeaedaa2f61a6a7870b23d9d01fc9b73712e54600160a060020a031690565b30600160a060020a0316636fde82026040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015610fb857600080fd5b505af1158015610fcc573d6000803e3d6000fd5b505050506040513d6020811015610fe257600080fd5b5051600160a060020a03163314610ff857600080fd5b6110006108f4565b604080517f69ffa08a000000000000000000000000000000000000000000000000000000008152600160a060020a0385811660048301528481166024830152915192909116916369ffa08a9160448082019260009290919082900301818387803b15801561106d57600080fd5b505af1158015611081573d6000803e3d6000fd5b505050505050565b6000806000806000611099611b1a565b93506110a3610cb5565b92506110b56110b0610ad1565b610903565b91508183116110c55760006110c9565b8183035b90508084106110d857806110da565b835b94505050505090565b600060606110ef6118bf565b600160a060020a031663cb08a10c846040518263ffffffff1660e060020a028152600401808260001916600019168152602001915050602060405180830381600087803b15801561113f57600080fd5b505af1158015611153573d6000803e3d6000fd5b505050506040513d602081101561116957600080fd5b50511561117557600080fd5b3061117e6118bf565b600160a060020a0316633f9a8e7e856040518263ffffffff1660e060020a028152600401808260001916600019168152602001915050602060405180830381600087803b1580156111ce57600080fd5b505af11580156111e2573d6000803e3d6000fd5b505050506040513d60208110156111f857600080fd5b5051600160a060020a03161461120d57600080fd5b611215610db4565b600160a060020a03166112266118bf565b600160a060020a0316634a610b04856040518263ffffffff1660e060020a028152600401808260001916600019168152602001915050602060405180830381600087803b15801561127657600080fd5b505af115801561128a573d6000803e3d6000fd5b505050506040513d60208110156112a057600080fd5b5051600160a060020a0316146112b557600080fd5b5050604080516024808201849052825180830390910181526044909101909152602081018051600160e060020a03167f0950d51500000000000000000000000000000000000000000000000000000000908117909152906113146118bf565b600160a060020a031663dc8601b361132a610db4565b836113336117d9565b6040518463ffffffff1660e060020a0281526004018084600160a060020a0316600160a060020a0316815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b838110156113a0578181015183820152602001611388565b50505050905090810190601f1680156113cd5780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b1580156113ee57600080fd5b505af1158015611402573d6000803e3d6000fd5b505050506040513d602081101561141857600080fd5b5050505050565b6001806000909192565b611431610f23565b600160a060020a0316331461144557600080fd5b60008111801561145b5750611458610cb5565b81105b801561146d575061146a611b1a565b81105b151561147857600080fd5b7fbbb088c505d18e049d114c7c91f11724e69c55ad6c5397e2b929e68b41fa05d160009081526020527f8df5c48c6b6e11d97548adc824ba0c99103ec09830fa5d53a179984085e6eaa055565b6000806114d06108f4565b905033600160a060020a038216146114e757600080fd5b6114ef611b68565b151561151a576114fe85611a09565b151561150957600080fd5b61151a611514610ad1565b86611bb9565b61155681878787878080601f01602080910402602001604051908101604052809392919081815260200183838082843750611cdd945050505050565b50600195945050505050565b61156a610f23565b600160a060020a0316331461157e57600080fd5b611586611b1a565b811180611591575080155b151561159c57600080fd5b7f4a6a899679f26b73530d8cf1001e83b6f7702e04b6fdb98f3c62dc7e47e041a5600090815260209081527f1ab29a5cca988aee50edccdd61c5bcaa7ad4b29a03b7ee50f298ceccfe14cc4e8290556040805183815290517fad4123ae17c414d9c6d2fec478b402e6b01856cc250fd01fbfd252fda0089d3c929181900390910190a150565b6040805160048152602481018252602081018051600160e060020a03167f6fde8202000000000000000000000000000000000000000000000000000000001781529151815160009330939291829190808383895b8381101561168e578181015183820152602001611676565b50505050905090810190601f1680156116bb5780820380516001836020036101000a031916815260200191505b509150506000604051808303816000865af1915050158061174d575030600160a060020a0316636fde82026040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561171557600080fd5b505af1158015611729573d6000803e3d6000fd5b505050506040513d602081101561173f57600080fd5b5051600160a060020a031633145b8061175757503330145b151561176257600080fd5b6117b28a8a8a6003806020026040519081016040528092919082600360200280828437505060408051808201825293508e925060029150839083908082843782019150505050508a8a8a8961250e565b6117bb83612572565b6117c36125fd565b6117cb6109c0565b9a9950505050505050505050565b7f2dfd6c9f781bb6bbb5369c114e949b69ebb440ef3d4dd6b2836225eb1dc3a2be60009081526020527f2de0d2cdc19d356cb53b5984f91bfd3b31fe0c678a0d190a6db39274bb34753f5490565b61182f610f23565b600160a060020a0316331461184357600080fd5b80158061186757506118536119bb565b811180156118675750611864610cb5565b81105b151561187257600080fd5b7f0f8803acad17c63ee38bf2de71e1888bc7a079a6f73658e274b08018bea4e29c60009081526020527f9de0f81379b4d8e60fe509315d071b56e7b732abaf193e74e0d15808b0951d0955565b7f811bbb11e8899da471f0e69a3ed55090fc90215227fc5fb1cb0d6e962ea7b74f60005260026020527fb4ed64697d3ef8518241966f7c6f28b0d72f20f51198717d198d2d55076c593d54600160a060020a031690565b7f1e8ecaafaddea96ed9ac6d2642dcdfe1bebe58a930b1085842d8fc122b371ee560009081526020527fd5c78dd9468716ca9bb96be25d56436811b20aab3523a9904b12deef1cab239d5490565b7f779a349c5bee7817f04c960f525ee3e2f2516078c38c68a3149787976ee837e560005260026020527fc155b21a14c4592b97825e495fbe0d2705fb46420018cac5bfa7a09c43fae51754600160a060020a031690565b7fbbb088c505d18e049d114c7c91f11724e69c55ad6c5397e2b929e68b41fa05d160009081526020527f8df5c48c6b6e11d97548adc824ba0c99103ec09830fa5d53a179984085e6eaa05490565b600080611a1b83610e226110b0610ad1565b905080611a26610cb5565b10158015611a3b5750611a37611b1a565b8311155b8015610e4e5750611a4a6119bb565b9092101592915050565b611a5c610f23565b600160a060020a03163314611a7057600080fd5b611a78610afe565b8110611a8357600080fd5b7fc0ed44c192c86d1cc1ba51340b032c2766b4a2b0041031de13c46dd7104888d560009081526020527ff8e983ee86e5e377e9e34c9131b266382c3f04113d20de077f9e12663c7a646b55565b611ad8610f23565b600160a060020a03163314611aec57600080fd5b6108f181612654565b611afd610f23565b600160a060020a03163314611b1157600080fd5b6108f18161272b565b7f0f8803acad17c63ee38bf2de71e1888bc7a079a6f73658e274b08018bea4e29c60009081526020527f9de0f81379b4d8e60fe509315d071b56e7b732abaf193e74e0d15808b0951d095490565b7f6168652c307c1e813ca11cfb3a601f1cf3b22452021a5052d8b05f1f1f8a3e9260005260046020527fcb8d022f2163402334a4962e3279c5def3417d3d8dab9e27ba26e81e3f8337845460ff1690565b611bc681610e2284610903565b6000808460405160200180807f746f74616c5370656e74506572446179000000000000000000000000000000008152506010018281526020019150506040516020818303038152906040526040518082805190602001908083835b60208310611c405780518252601f199092019160209182019101611c21565b51815160209384036101000a60001901801990921691161790526040805192909401829003909120865285019590955292909201600020939093555050505050565b7f6168652c307c1e813ca11cfb3a601f1cf3b22452021a5052d8b05f1f1f8a3e9260005260046020527fcb8d022f2163402334a4962e3279c5def3417d3d8dab9e27ba26e81e3f833784805460ff1916911515919091179055565b611ce5611b68565b15156107f75783600160a060020a03166342966c68836040518263ffffffff1660e060020a02815260040180828152602001915050600060405180830381600087803b158015611d3457600080fd5b505af1158015611d48573d6000803e3d6000fd5b505050506107f783611d5a858461278c565b846127e6565b6000611d6a6118bf565b600160a060020a031663d67bdd256040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015611da757600080fd5b505af1158015611dbb573d6000803e3d6000fd5b505050506040513d6020811015611dd157600080fd5b5051905090565b6000600260008360405160200180807f6d657373616765526563697069656e740000000000000000000000000000000081525060100182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b60208310611e5d5780518252601f199092019160209182019101611e3e565b51815160209384036101000a6000190180199092169116179052604080519290940182900390912086528501959095529290920160002054600160a060020a031695945050505050565b60008060008360405160200180807f6d65737361676556616c75650000000000000000000000000000000000000000815250600c0182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083836020831061097f5780518252601f199092019160209182019101610960565b6001600460008360405160200180807f6d65737361676546697865640000000000000000000000000000000000000000815250600c0182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b60208310611faf5780518252601f199092019160209182019101611f90565b51815160209384036101000a60001901801990921691161790526040805192909401829003909120865285019590955292909201600020805460ff19169415159490941790935550505050565b6120046108f4565b600160a060020a03166340c10f1983836040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b15801561206657600080fd5b505af115801561207a573d6000803e3d6000fd5b505050506040513d60208110156107f757600080fd5b61209981612970565b15156120a457600080fd5b7f811bbb11e8899da471f0e69a3ed55090fc90215227fc5fb1cb0d6e962ea7b74f60005260026020527fb4ed64697d3ef8518241966f7c6f28b0d72f20f51198717d198d2d55076c593d805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b7fa8b0ade3e2b734f043ce298aca4cc8d19d74270223f34531d0988b7d00cba21d60005260026020527f603cd9dcbfa185d5c37504f4c8b3f16117ed744fba48d08b7aad44a162af1c9354600160a060020a031690565b600160a060020a038116158061218c575061218c81612970565b151561219757600080fd5b7f779a349c5bee7817f04c960f525ee3e2f2516078c38c68a3149787976ee837e560005260026020527fc155b21a14c4592b97825e495fbe0d2705fb46420018cac5bfa7a09c43fae517805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b80600160a060020a038116151561222457600080fd5b600160a060020a03831615156122425761223d82612978565b61224c565b61224c8383612984565b505050565b7f98aa806e31e94a687a31c65769cb99670064dd7f5a87526da075c5fb4eab988060005260026020527f0c1206883be66049a02d4937078367c00b3d71dd1a9465df969363c6ddeac96d805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b818101828110156122d557fe5b92915050565b6122e881610e2284610b4c565b6000808460405160200180807f746f74616c45786563757465645065724461790000000000000000000000000081525060130182815260200191505060405160208183030381529060405260405180828051906020019080838360208310611c405780518252601f199092019160209182019101611c21565b60008060008061237085612a31565b935061237a612a47565b9250612384611964565b9150600160a060020a038216156124305781600160a060020a03166399a5d747856040518263ffffffff1660e060020a02815260040180828152602001915050602060405180830381600087803b1580156123de57600080fd5b505af11580156123f2573d6000803e3d6000fd5b505050506040513d602081101561240857600080fd5b5051905080156124305761241d828285612a8e565b61242d848263ffffffff612bad16565b93505b6124386108f4565b600160a060020a03166340c10f1987866040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b15801561249a57600080fd5b505af11580156124ae573d6000803e3d6000fd5b505050506040513d60208110156124c457600080fd5b50506040805185815290518491600160a060020a038916917f2f9a6098d4503a127779ba975f5f6b04f842362b1809f346989e9abc0b4dedb69181900360200190a3505050505050565b6125166109c0565b1561252057600080fd5b61252988612090565b61253287612251565b61253b8461272b565b61254486612bbf565b61254d85612d1c565b61255683612df1565b61255f81612172565b61256882612654565b5050505050505050565b61257b81612970565b151561258657600080fd5b7fa8b0ade3e2b734f043ce298aca4cc8d19d74270223f34531d0988b7d00cba21d60005260026020527f603cd9dcbfa185d5c37504f4c8b3f16117ed744fba48d08b7aad44a162af1c93805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b7f0a6f646cd611241d8073675e00d1a1ff700fbf1b53fcf473de56d1e6e4b714ba60005260046020527f078d888f9b66f3f8bfa10909e31f1e16240db73449f0500afdbbe3a70da457cc805460ff19166001179055565b600160a060020a038116151561266957600080fd5b7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0612692610f23565b60408051600160a060020a03928316815291841660208301528051918290030190a17f02016836a56b71f0d02689e69e326f4f4c1b9057164ef592671cf0d37c8040c060005260026020527fb7802e97e87ef2842a6cce7da7ffaeaedaa2f61a6a7870b23d9d01fc9b73712e805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b612733612e5a565b81111561273f57600080fd5b7f2dfd6c9f781bb6bbb5369c114e949b69ebb440ef3d4dd6b2836225eb1dc3a2be60009081526020527f2de0d2cdc19d356cb53b5984f91bfd3b31fe0c678a0d190a6db39274bb34753f55565b80518290600010156122d55781516014146127a657600080fd5b6127af82612ea1565b9050600160a060020a03811615156127c657600080fd5b6127ce612ea8565b600160a060020a03828116911614156122d557600080fd5b60408051600160a060020a03841660248201526044808201849052825180830390910181526064909101909152602081018051600160e060020a03167f8b6c0354000000000000000000000000000000000000000000000000000000009081179091529060006128546118bf565b600160a060020a031663dc8601b361286a610db4565b846128736117d9565b6040518463ffffffff1660e060020a0281526004018084600160a060020a0316600160a060020a0316815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b838110156128e05781810151838201526020016128c8565b50505050905090810190601f16801561290d5780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b15801561292e57600080fd5b505af1158015612942573d6000803e3d6000fd5b505050506040513d602081101561295857600080fd5b505190506129668185612eb2565b6110818187612f34565b6000903b1190565b3031610d8b8282613022565b604080517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290518391600091600160a060020a038416916370a0823191602480830192602092919082900301818787803b1580156129e957600080fd5b505af11580156129fd573d6000803e3d6000fd5b505050506040513d6020811015612a1357600080fd5b505190506107f7600160a060020a038516848363ffffffff61308316565b60006122d582612a3f611916565b600003613118565b6000612a516118bf565b600160a060020a031663669f618b6040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015611da757600080fd5b612a988383611ffc565b604080513060248201526044810184905260606064820152600060848201819052825180830360a401815260c49092018352602082018051600160e060020a03167fa4c0ed360000000000000000000000000000000000000000000000000000000017815292518251600160a060020a038816949192839291908190849084905b83811015612b31578181015183820152602001612b19565b50505050905090810190601f168015612b5e5780820380516001836020036101000a031916815260200191505b509150506000604051808303816000865af150506040805184815290518392507f681bf203c0adea167c3149ed45e4ec409535394f7bd8941e675f26d1b1a4b6569181900360200190a2505050565b600082821115612bb957fe5b50900390565b60408101516000108015612bda575060408101516020820151115b8015612bea575060208101518151115b1515612bf557600080fd5b80517f4a6a899679f26b73530d8cf1001e83b6f7702e04b6fdb98f3c62dc7e47e041a5600090815260208181527f1ab29a5cca988aee50edccdd61c5bcaa7ad4b29a03b7ee50f298ceccfe14cc4e92909255908201517f0f8803acad17c63ee38bf2de71e1888bc7a079a6f73658e274b08018bea4e29c82527f9de0f81379b4d8e60fe509315d071b56e7b732abaf193e74e0d15808b0951d095560408201517fbbb088c505d18e049d114c7c91f11724e69c55ad6c5397e2b929e68b41fa05d182527f8df5c48c6b6e11d97548adc824ba0c99103ec09830fa5d53a179984085e6eaa0557fad4123ae17c414d9c6d2fec478b402e6b01856cc250fd01fbfd252fda0089d3c9082905b60200201516040518082815260200191505060405180910390a150565b8051602082015110612d2d57600080fd5b80517f21dbcab260e413c20dc13c28b7db95e2b423d1135f42bb8b7d5214a92270d237600090815260208181527fadd938dbd083a16bae12238cd914fca0afc7a30edb55b1cd5c7f1823f1b0e42192909255908201517fc0ed44c192c86d1cc1ba51340b032c2766b4a2b0041031de13c46dd7104888d582527ff8e983ee86e5e377e9e34c9131b266382c3f04113d20de077f9e12663c7a646b557f9bebf928b90863f24cc31f726a3a7545efd409f1dcf552301b1ee3710da70d3b908290612cff565b604c1981138015612e025750604d81125b1515612e0d57600080fd5b7f1e8ecaafaddea96ed9ac6d2642dcdfe1bebe58a930b1085842d8fc122b371ee560009081526020527fd5c78dd9468716ca9bb96be25d56436811b20aab3523a9904b12deef1cab239d55565b6000612e646118bf565b600160a060020a031663e5789d036040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015611da757600080fd5b6014015190565b60006108fe610db4565b806000808460405160200180807f6d65737361676556616c75650000000000000000000000000000000000000000815250600c01826000191660001916815260200191505060405160208183030381529060405260405180828051906020019080838360208310611c405780518252601f199092019160209182019101611c21565b80600260008460405160200180807f6d657373616765526563697069656e740000000000000000000000000000000081525060100182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b60208310612fb85780518252601f199092019160209182019101612f99565b51815160209384036101000a60001901801990921691161790526040805192909401829003909120865285019590955292909201600020805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0395909516949094179093555050505050565b604051600160a060020a0383169082156108fc029083906000818181858888f193505050501515610d8b5780826130576131a1565b600160a060020a039091168152604051908190036020019082f080158015611418573d6000803e3d6000fd5b82600160a060020a031663a9059cbb83836040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050600060405180830381600087803b1580156130e657600080fd5b505af11580156130fa573d6000803e3d6000fd5b505050503d1561224c5760206000803e600051151561224c57600080fd5b60008115156131285750816122d5565b600082131561314c5761314583600a84900a63ffffffff61316316565b90506122d5565b610e4e836000849003600a0a63ffffffff61318c16565b6000821515613174575060006122d5565b5081810281838281151561318457fe5b04146122d557fe5b6000818381151561319957fe5b049392505050565b6040516021806131b1833901905600608060405260405160208060218339810160405251600160a060020a038116ff00a165627a7a72305820c80aa35fada1b5068db7fcaa1e1526d729e9b72cca347963318622d9221b3e650029",
  "deployedBytecode": "0x6080604052600436106101d45763ffffffff60e060020a60003504166301e4f53a81146101d95780630950d515146101ff5780630b26cf661461021757806318d8f9c9146102385780632bd0bb0514610269578063392e53cd146102935780633dd95d1b146102bc5780633e6968b6146102d4578063437764df146102e957806343b37dd3146103335780634fb3fef714610348578063593399821461036057806360756f7c1461037857806367eeba0c1461039957806369ffa08a146103ae5780636e5d6bea146103d5578063871c0760146103f6578063879ce6761461040b5780638aa1949a146104235780638b6c0354146104385780638da5cb5b1461045c5780639313dc431461047157806395e54a17146104985780639a4a4395146104ad5780639cb7595a146104c5578063a2a6ca2714610506578063a4c0ed361461051e578063b20d30a91461054f578063b5deba3214610567578063be3b625b146105b2578063c6f6f216146105c7578063cd596583146105df578063dae5f0fd146105f4578063dbe03a8b14610609578063df25f3f01461061e578063ea9f496814610633578063f20151e11461064b578063f2fde38b14610663578063f3b8379114610684578063f968adbe1461069c575b600080fd5b3480156101e557600080fd5b506101fd600160a060020a03600435166024356106b1565b005b34801561020b57600080fd5b506101fd6004356107fd565b34801561022357600080fd5b506101fd600160a060020a03600435166108cc565b34801561024457600080fd5b5061024d6108f4565b60408051600160a060020a039092168252519081900360200190f35b34801561027557600080fd5b50610281600435610903565b60408051918252519081900360200190f35b34801561029f57600080fd5b506102a86109c0565b604080519115158252519081900360200190f35b3480156102c857600080fd5b506101fd600435610a11565b3480156102e057600080fd5b50610281610ad1565b3480156102f557600080fd5b506102fe610ada565b604080517fffffffff000000000000000000000000000000000000000000000000000000009092168252519081900360200190f35b34801561033f57600080fd5b50610281610afe565b34801561035457600080fd5b50610281600435610b4c565b34801561036c57600080fd5b506102a8600435610bc7565b34801561038457600080fd5b506101fd600160a060020a0360043516610c90565b3480156103a557600080fd5b50610281610cb5565b3480156103ba57600080fd5b506101fd600160a060020a0360043581169060243516610d03565b3480156103e157600080fd5b506101fd600160a060020a0360043516610d8f565b34801561040257600080fd5b5061024d610db4565b34801561041757600080fd5b506102a8600435610e0b565b34801561042f57600080fd5b50610281610e55565b34801561044457600080fd5b506101fd600160a060020a0360043516602435610ea3565b34801561046857600080fd5b5061024d610f23565b34801561047d57600080fd5b506101fd600160a060020a0360043581169060243516610f7a565b3480156104a457600080fd5b50610281611089565b3480156104b957600080fd5b506101fd6004356110e3565b3480156104d157600080fd5b506104da61141f565b6040805167ffffffffffffffff9485168152928416602084015292168183015290519081900360600190f35b34801561051257600080fd5b506101fd600435611429565b34801561052a57600080fd5b506102a860048035600160a060020a03169060248035916044359182019101356114c5565b34801561055b57600080fd5b506101fd600435611562565b34801561057357600080fd5b506102a8600160a060020a0360043581169060243581169060449060a49060e43590610104359061012435811690610144358116906101643516611622565b3480156105be57600080fd5b506102816117d9565b3480156105d357600080fd5b506101fd600435611827565b3480156105eb57600080fd5b5061024d6118bf565b34801561060057600080fd5b50610281611916565b34801561061557600080fd5b5061024d611964565b34801561062a57600080fd5b506102816119bb565b34801561063f57600080fd5b506102a8600435611a09565b34801561065757600080fd5b506101fd600435611a54565b34801561066f57600080fd5b506101fd600160a060020a0360043516611ad0565b34801561069057600080fd5b506101fd600435611af5565b3480156106a857600080fd5b50610281611b1a565b6000806106bc611b68565b156106c657600080fd5b6106ce6108f4565b91503090506106dc83611a09565b15156106e757600080fd5b6106f86106f2610ad1565b84611bb9565b6107026001611c82565b604080517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152600160a060020a038381166024830152604482018690529151918416916323b872dd916064808201926020929091908290030181600087803b15801561077457600080fd5b505af1158015610788573d6000803e3d6000fd5b505050506040513d602081101561079e57600080fd5b506107ab90506000611c82565b6107f7823385876040516020018082600160a060020a0316600160a060020a03166c01000000000000000000000000028152601401915050604051602081830303815290604052611cdd565b50505050565b6000806108086118bf565b600160a060020a0316331461081c57600080fd5b610824610db4565b600160a060020a0316610835611d60565b600160a060020a03161461084857600080fd5b61085183610bc7565b1561085b57600080fd5b61086483611dd8565b915061086f83611ea7565b905061087a83611f2a565b6108848282611ffc565b60408051600160a060020a038416815260208101839052815185927f06297b0797e3363e96e454edd4ab62862051bf559a7a431ce09415306771d133928290030190a2505050565b6108d4610f23565b600160a060020a031633146108e857600080fd5b6108f181612090565b50565b60006108fe61211b565b905090565b60008060008360405160200180807f746f74616c5370656e74506572446179000000000000000000000000000000008152506010018281526020019150506040516020818303038152906040526040518082805190602001908083835b6020831061097f5780518252601f199092019160209182019101610960565b51815160209384036101000a600019018019909216911617905260408051929094018290039091208652850195909552929092016000205495945050505050565b7f0a6f646cd611241d8073675e00d1a1ff700fbf1b53fcf473de56d1e6e4b714ba60005260046020527f078d888f9b66f3f8bfa10909e31f1e16240db73449f0500afdbbe3a70da457cc5460ff1690565b610a19610f23565b600160a060020a03163314610a2d57600080fd5b610a35610e55565b811180610a40575080155b1515610a4b57600080fd5b7f21dbcab260e413c20dc13c28b7db95e2b423d1135f42bb8b7d5214a92270d237600090815260209081527fadd938dbd083a16bae12238cd914fca0afc7a30edb55b1cd5c7f1823f1b0e4218290556040805183815290517f9bebf928b90863f24cc31f726a3a7545efd409f1dcf552301b1ee3710da70d3b929181900390910190a150565b62015180420490565b7f582ed8fd0000000000000000000000000000000000000000000000000000000090565b7f21dbcab260e413c20dc13c28b7db95e2b423d1135f42bb8b7d5214a92270d23760009081526020527fadd938dbd083a16bae12238cd914fca0afc7a30edb55b1cd5c7f1823f1b0e4215490565b60008060008360405160200180807f746f74616c4578656375746564506572446179000000000000000000000000008152506013018281526020019150506040516020818303038152906040526040518082805190602001908083836020831061097f5780518252601f199092019160209182019101610960565b6000600460008360405160200180807f6d65737361676546697865640000000000000000000000000000000000000000815250600c0182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b60208310610c4c5780518252601f199092019160209182019101610c2d565b51815160209384036101000a600019018019909216911617905260408051929094018290039091208652850195909552929092016000205460ff1695945050505050565b610c98610f23565b600160a060020a03163314610cac57600080fd5b6108f181612172565b7f4a6a899679f26b73530d8cf1001e83b6f7702e04b6fdb98f3c62dc7e47e041a560009081526020527f1ab29a5cca988aee50edccdd61c5bcaa7ad4b29a03b7ee50f298ceccfe14cc4e5490565b30600160a060020a0316636fde82026040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015610d4157600080fd5b505af1158015610d55573d6000803e3d6000fd5b505050506040513d6020811015610d6b57600080fd5b5051600160a060020a03163314610d8157600080fd5b610d8b828261220e565b5050565b610d97610f23565b600160a060020a03163314610dab57600080fd5b6108f181612251565b7f98aa806e31e94a687a31c65769cb99670064dd7f5a87526da075c5fb4eab988060005260026020527f0c1206883be66049a02d4937078367c00b3d71dd1a9465df969363c6ddeac96d54600160a060020a031690565b600080610e2e83610e22610e1d610ad1565b610b4c565b9063ffffffff6122c816565b905080610e39610afe565b10158015610e4e5750610e4a610e55565b8311155b9392505050565b7fc0ed44c192c86d1cc1ba51340b032c2766b4a2b0041031de13c46dd7104888d560009081526020527ff8e983ee86e5e377e9e34c9131b266382c3f04113d20de077f9e12663c7a646b5490565b610eab6118bf565b600160a060020a03163314610ebf57600080fd5b610ec7610db4565b600160a060020a0316610ed8611d60565b600160a060020a031614610eeb57600080fd5b610ef481610e0b565b15610f1957610f0a610f04610ad1565b826122db565b610f148282612361565b610d8b565b610d8b82826101d4565b7f02016836a56b71f0d02689e69e326f4f4c1b9057164ef592671cf0d37c8040c060005260026020527fb7802e97e87ef2842a6cce7da7ffaeaedaa2f61a6a7870b23d9d01fc9b73712e54600160a060020a031690565b30600160a060020a0316636fde82026040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015610fb857600080fd5b505af1158015610fcc573d6000803e3d6000fd5b505050506040513d6020811015610fe257600080fd5b5051600160a060020a03163314610ff857600080fd5b6110006108f4565b604080517f69ffa08a000000000000000000000000000000000000000000000000000000008152600160a060020a0385811660048301528481166024830152915192909116916369ffa08a9160448082019260009290919082900301818387803b15801561106d57600080fd5b505af1158015611081573d6000803e3d6000fd5b505050505050565b6000806000806000611099611b1a565b93506110a3610cb5565b92506110b56110b0610ad1565b610903565b91508183116110c55760006110c9565b8183035b90508084106110d857806110da565b835b94505050505090565b600060606110ef6118bf565b600160a060020a031663cb08a10c846040518263ffffffff1660e060020a028152600401808260001916600019168152602001915050602060405180830381600087803b15801561113f57600080fd5b505af1158015611153573d6000803e3d6000fd5b505050506040513d602081101561116957600080fd5b50511561117557600080fd5b3061117e6118bf565b600160a060020a0316633f9a8e7e856040518263ffffffff1660e060020a028152600401808260001916600019168152602001915050602060405180830381600087803b1580156111ce57600080fd5b505af11580156111e2573d6000803e3d6000fd5b505050506040513d60208110156111f857600080fd5b5051600160a060020a03161461120d57600080fd5b611215610db4565b600160a060020a03166112266118bf565b600160a060020a0316634a610b04856040518263ffffffff1660e060020a028152600401808260001916600019168152602001915050602060405180830381600087803b15801561127657600080fd5b505af115801561128a573d6000803e3d6000fd5b505050506040513d60208110156112a057600080fd5b5051600160a060020a0316146112b557600080fd5b5050604080516024808201849052825180830390910181526044909101909152602081018051600160e060020a03167f0950d51500000000000000000000000000000000000000000000000000000000908117909152906113146118bf565b600160a060020a031663dc8601b361132a610db4565b836113336117d9565b6040518463ffffffff1660e060020a0281526004018084600160a060020a0316600160a060020a0316815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b838110156113a0578181015183820152602001611388565b50505050905090810190601f1680156113cd5780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b1580156113ee57600080fd5b505af1158015611402573d6000803e3d6000fd5b505050506040513d602081101561141857600080fd5b5050505050565b6001806000909192565b611431610f23565b600160a060020a0316331461144557600080fd5b60008111801561145b5750611458610cb5565b81105b801561146d575061146a611b1a565b81105b151561147857600080fd5b7fbbb088c505d18e049d114c7c91f11724e69c55ad6c5397e2b929e68b41fa05d160009081526020527f8df5c48c6b6e11d97548adc824ba0c99103ec09830fa5d53a179984085e6eaa055565b6000806114d06108f4565b905033600160a060020a038216146114e757600080fd5b6114ef611b68565b151561151a576114fe85611a09565b151561150957600080fd5b61151a611514610ad1565b86611bb9565b61155681878787878080601f01602080910402602001604051908101604052809392919081815260200183838082843750611cdd945050505050565b50600195945050505050565b61156a610f23565b600160a060020a0316331461157e57600080fd5b611586611b1a565b811180611591575080155b151561159c57600080fd5b7f4a6a899679f26b73530d8cf1001e83b6f7702e04b6fdb98f3c62dc7e47e041a5600090815260209081527f1ab29a5cca988aee50edccdd61c5bcaa7ad4b29a03b7ee50f298ceccfe14cc4e8290556040805183815290517fad4123ae17c414d9c6d2fec478b402e6b01856cc250fd01fbfd252fda0089d3c929181900390910190a150565b6040805160048152602481018252602081018051600160e060020a03167f6fde8202000000000000000000000000000000000000000000000000000000001781529151815160009330939291829190808383895b8381101561168e578181015183820152602001611676565b50505050905090810190601f1680156116bb5780820380516001836020036101000a031916815260200191505b509150506000604051808303816000865af1915050158061174d575030600160a060020a0316636fde82026040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561171557600080fd5b505af1158015611729573d6000803e3d6000fd5b505050506040513d602081101561173f57600080fd5b5051600160a060020a031633145b8061175757503330145b151561176257600080fd5b6117b28a8a8a6003806020026040519081016040528092919082600360200280828437505060408051808201825293508e925060029150839083908082843782019150505050508a8a8a8961250e565b6117bb83612572565b6117c36125fd565b6117cb6109c0565b9a9950505050505050505050565b7f2dfd6c9f781bb6bbb5369c114e949b69ebb440ef3d4dd6b2836225eb1dc3a2be60009081526020527f2de0d2cdc19d356cb53b5984f91bfd3b31fe0c678a0d190a6db39274bb34753f5490565b61182f610f23565b600160a060020a0316331461184357600080fd5b80158061186757506118536119bb565b811180156118675750611864610cb5565b81105b151561187257600080fd5b7f0f8803acad17c63ee38bf2de71e1888bc7a079a6f73658e274b08018bea4e29c60009081526020527f9de0f81379b4d8e60fe509315d071b56e7b732abaf193e74e0d15808b0951d0955565b7f811bbb11e8899da471f0e69a3ed55090fc90215227fc5fb1cb0d6e962ea7b74f60005260026020527fb4ed64697d3ef8518241966f7c6f28b0d72f20f51198717d198d2d55076c593d54600160a060020a031690565b7f1e8ecaafaddea96ed9ac6d2642dcdfe1bebe58a930b1085842d8fc122b371ee560009081526020527fd5c78dd9468716ca9bb96be25d56436811b20aab3523a9904b12deef1cab239d5490565b7f779a349c5bee7817f04c960f525ee3e2f2516078c38c68a3149787976ee837e560005260026020527fc155b21a14c4592b97825e495fbe0d2705fb46420018cac5bfa7a09c43fae51754600160a060020a031690565b7fbbb088c505d18e049d114c7c91f11724e69c55ad6c5397e2b929e68b41fa05d160009081526020527f8df5c48c6b6e11d97548adc824ba0c99103ec09830fa5d53a179984085e6eaa05490565b600080611a1b83610e226110b0610ad1565b905080611a26610cb5565b10158015611a3b5750611a37611b1a565b8311155b8015610e4e5750611a4a6119bb565b9092101592915050565b611a5c610f23565b600160a060020a03163314611a7057600080fd5b611a78610afe565b8110611a8357600080fd5b7fc0ed44c192c86d1cc1ba51340b032c2766b4a2b0041031de13c46dd7104888d560009081526020527ff8e983ee86e5e377e9e34c9131b266382c3f04113d20de077f9e12663c7a646b55565b611ad8610f23565b600160a060020a03163314611aec57600080fd5b6108f181612654565b611afd610f23565b600160a060020a03163314611b1157600080fd5b6108f18161272b565b7f0f8803acad17c63ee38bf2de71e1888bc7a079a6f73658e274b08018bea4e29c60009081526020527f9de0f81379b4d8e60fe509315d071b56e7b732abaf193e74e0d15808b0951d095490565b7f6168652c307c1e813ca11cfb3a601f1cf3b22452021a5052d8b05f1f1f8a3e9260005260046020527fcb8d022f2163402334a4962e3279c5def3417d3d8dab9e27ba26e81e3f8337845460ff1690565b611bc681610e2284610903565b6000808460405160200180807f746f74616c5370656e74506572446179000000000000000000000000000000008152506010018281526020019150506040516020818303038152906040526040518082805190602001908083835b60208310611c405780518252601f199092019160209182019101611c21565b51815160209384036101000a60001901801990921691161790526040805192909401829003909120865285019590955292909201600020939093555050505050565b7f6168652c307c1e813ca11cfb3a601f1cf3b22452021a5052d8b05f1f1f8a3e9260005260046020527fcb8d022f2163402334a4962e3279c5def3417d3d8dab9e27ba26e81e3f833784805460ff1916911515919091179055565b611ce5611b68565b15156107f75783600160a060020a03166342966c68836040518263ffffffff1660e060020a02815260040180828152602001915050600060405180830381600087803b158015611d3457600080fd5b505af1158015611d48573d6000803e3d6000fd5b505050506107f783611d5a858461278c565b846127e6565b6000611d6a6118bf565b600160a060020a031663d67bdd256040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015611da757600080fd5b505af1158015611dbb573d6000803e3d6000fd5b505050506040513d6020811015611dd157600080fd5b5051905090565b6000600260008360405160200180807f6d657373616765526563697069656e740000000000000000000000000000000081525060100182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b60208310611e5d5780518252601f199092019160209182019101611e3e565b51815160209384036101000a6000190180199092169116179052604080519290940182900390912086528501959095529290920160002054600160a060020a031695945050505050565b60008060008360405160200180807f6d65737361676556616c75650000000000000000000000000000000000000000815250600c0182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083836020831061097f5780518252601f199092019160209182019101610960565b6001600460008360405160200180807f6d65737361676546697865640000000000000000000000000000000000000000815250600c0182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b60208310611faf5780518252601f199092019160209182019101611f90565b51815160209384036101000a60001901801990921691161790526040805192909401829003909120865285019590955292909201600020805460ff19169415159490941790935550505050565b6120046108f4565b600160a060020a03166340c10f1983836040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b15801561206657600080fd5b505af115801561207a573d6000803e3d6000fd5b505050506040513d60208110156107f757600080fd5b61209981612970565b15156120a457600080fd5b7f811bbb11e8899da471f0e69a3ed55090fc90215227fc5fb1cb0d6e962ea7b74f60005260026020527fb4ed64697d3ef8518241966f7c6f28b0d72f20f51198717d198d2d55076c593d805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b7fa8b0ade3e2b734f043ce298aca4cc8d19d74270223f34531d0988b7d00cba21d60005260026020527f603cd9dcbfa185d5c37504f4c8b3f16117ed744fba48d08b7aad44a162af1c9354600160a060020a031690565b600160a060020a038116158061218c575061218c81612970565b151561219757600080fd5b7f779a349c5bee7817f04c960f525ee3e2f2516078c38c68a3149787976ee837e560005260026020527fc155b21a14c4592b97825e495fbe0d2705fb46420018cac5bfa7a09c43fae517805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b80600160a060020a038116151561222457600080fd5b600160a060020a03831615156122425761223d82612978565b61224c565b61224c8383612984565b505050565b7f98aa806e31e94a687a31c65769cb99670064dd7f5a87526da075c5fb4eab988060005260026020527f0c1206883be66049a02d4937078367c00b3d71dd1a9465df969363c6ddeac96d805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b818101828110156122d557fe5b92915050565b6122e881610e2284610b4c565b6000808460405160200180807f746f74616c45786563757465645065724461790000000000000000000000000081525060130182815260200191505060405160208183030381529060405260405180828051906020019080838360208310611c405780518252601f199092019160209182019101611c21565b60008060008061237085612a31565b935061237a612a47565b9250612384611964565b9150600160a060020a038216156124305781600160a060020a03166399a5d747856040518263ffffffff1660e060020a02815260040180828152602001915050602060405180830381600087803b1580156123de57600080fd5b505af11580156123f2573d6000803e3d6000fd5b505050506040513d602081101561240857600080fd5b5051905080156124305761241d828285612a8e565b61242d848263ffffffff612bad16565b93505b6124386108f4565b600160a060020a03166340c10f1987866040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b15801561249a57600080fd5b505af11580156124ae573d6000803e3d6000fd5b505050506040513d60208110156124c457600080fd5b50506040805185815290518491600160a060020a038916917f2f9a6098d4503a127779ba975f5f6b04f842362b1809f346989e9abc0b4dedb69181900360200190a3505050505050565b6125166109c0565b1561252057600080fd5b61252988612090565b61253287612251565b61253b8461272b565b61254486612bbf565b61254d85612d1c565b61255683612df1565b61255f81612172565b61256882612654565b5050505050505050565b61257b81612970565b151561258657600080fd5b7fa8b0ade3e2b734f043ce298aca4cc8d19d74270223f34531d0988b7d00cba21d60005260026020527f603cd9dcbfa185d5c37504f4c8b3f16117ed744fba48d08b7aad44a162af1c93805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b7f0a6f646cd611241d8073675e00d1a1ff700fbf1b53fcf473de56d1e6e4b714ba60005260046020527f078d888f9b66f3f8bfa10909e31f1e16240db73449f0500afdbbe3a70da457cc805460ff19166001179055565b600160a060020a038116151561266957600080fd5b7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0612692610f23565b60408051600160a060020a03928316815291841660208301528051918290030190a17f02016836a56b71f0d02689e69e326f4f4c1b9057164ef592671cf0d37c8040c060005260026020527fb7802e97e87ef2842a6cce7da7ffaeaedaa2f61a6a7870b23d9d01fc9b73712e805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b612733612e5a565b81111561273f57600080fd5b7f2dfd6c9f781bb6bbb5369c114e949b69ebb440ef3d4dd6b2836225eb1dc3a2be60009081526020527f2de0d2cdc19d356cb53b5984f91bfd3b31fe0c678a0d190a6db39274bb34753f55565b80518290600010156122d55781516014146127a657600080fd5b6127af82612ea1565b9050600160a060020a03811615156127c657600080fd5b6127ce612ea8565b600160a060020a03828116911614156122d557600080fd5b60408051600160a060020a03841660248201526044808201849052825180830390910181526064909101909152602081018051600160e060020a03167f8b6c0354000000000000000000000000000000000000000000000000000000009081179091529060006128546118bf565b600160a060020a031663dc8601b361286a610db4565b846128736117d9565b6040518463ffffffff1660e060020a0281526004018084600160a060020a0316600160a060020a0316815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b838110156128e05781810151838201526020016128c8565b50505050905090810190601f16801561290d5780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b15801561292e57600080fd5b505af1158015612942573d6000803e3d6000fd5b505050506040513d602081101561295857600080fd5b505190506129668185612eb2565b6110818187612f34565b6000903b1190565b3031610d8b8282613022565b604080517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290518391600091600160a060020a038416916370a0823191602480830192602092919082900301818787803b1580156129e957600080fd5b505af11580156129fd573d6000803e3d6000fd5b505050506040513d6020811015612a1357600080fd5b505190506107f7600160a060020a038516848363ffffffff61308316565b60006122d582612a3f611916565b600003613118565b6000612a516118bf565b600160a060020a031663669f618b6040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015611da757600080fd5b612a988383611ffc565b604080513060248201526044810184905260606064820152600060848201819052825180830360a401815260c49092018352602082018051600160e060020a03167fa4c0ed360000000000000000000000000000000000000000000000000000000017815292518251600160a060020a038816949192839291908190849084905b83811015612b31578181015183820152602001612b19565b50505050905090810190601f168015612b5e5780820380516001836020036101000a031916815260200191505b509150506000604051808303816000865af150506040805184815290518392507f681bf203c0adea167c3149ed45e4ec409535394f7bd8941e675f26d1b1a4b6569181900360200190a2505050565b600082821115612bb957fe5b50900390565b60408101516000108015612bda575060408101516020820151115b8015612bea575060208101518151115b1515612bf557600080fd5b80517f4a6a899679f26b73530d8cf1001e83b6f7702e04b6fdb98f3c62dc7e47e041a5600090815260208181527f1ab29a5cca988aee50edccdd61c5bcaa7ad4b29a03b7ee50f298ceccfe14cc4e92909255908201517f0f8803acad17c63ee38bf2de71e1888bc7a079a6f73658e274b08018bea4e29c82527f9de0f81379b4d8e60fe509315d071b56e7b732abaf193e74e0d15808b0951d095560408201517fbbb088c505d18e049d114c7c91f11724e69c55ad6c5397e2b929e68b41fa05d182527f8df5c48c6b6e11d97548adc824ba0c99103ec09830fa5d53a179984085e6eaa0557fad4123ae17c414d9c6d2fec478b402e6b01856cc250fd01fbfd252fda0089d3c9082905b60200201516040518082815260200191505060405180910390a150565b8051602082015110612d2d57600080fd5b80517f21dbcab260e413c20dc13c28b7db95e2b423d1135f42bb8b7d5214a92270d237600090815260208181527fadd938dbd083a16bae12238cd914fca0afc7a30edb55b1cd5c7f1823f1b0e42192909255908201517fc0ed44c192c86d1cc1ba51340b032c2766b4a2b0041031de13c46dd7104888d582527ff8e983ee86e5e377e9e34c9131b266382c3f04113d20de077f9e12663c7a646b557f9bebf928b90863f24cc31f726a3a7545efd409f1dcf552301b1ee3710da70d3b908290612cff565b604c1981138015612e025750604d81125b1515612e0d57600080fd5b7f1e8ecaafaddea96ed9ac6d2642dcdfe1bebe58a930b1085842d8fc122b371ee560009081526020527fd5c78dd9468716ca9bb96be25d56436811b20aab3523a9904b12deef1cab239d55565b6000612e646118bf565b600160a060020a031663e5789d036040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015611da757600080fd5b6014015190565b60006108fe610db4565b806000808460405160200180807f6d65737361676556616c75650000000000000000000000000000000000000000815250600c01826000191660001916815260200191505060405160208183030381529060405260405180828051906020019080838360208310611c405780518252601f199092019160209182019101611c21565b80600260008460405160200180807f6d657373616765526563697069656e740000000000000000000000000000000081525060100182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b60208310612fb85780518252601f199092019160209182019101612f99565b51815160209384036101000a60001901801990921691161790526040805192909401829003909120865285019590955292909201600020805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0395909516949094179093555050505050565b604051600160a060020a0383169082156108fc029083906000818181858888f193505050501515610d8b5780826130576131a1565b600160a060020a039091168152604051908190036020019082f080158015611418573d6000803e3d6000fd5b82600160a060020a031663a9059cbb83836040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050600060405180830381600087803b1580156130e657600080fd5b505af11580156130fa573d6000803e3d6000fd5b505050503d1561224c5760206000803e600051151561224c57600080fd5b60008115156131285750816122d5565b600082131561314c5761314583600a84900a63ffffffff61316316565b90506122d5565b610e4e836000849003600a0a63ffffffff61318c16565b6000821515613174575060006122d5565b5081810281838281151561318457fe5b04146122d557fe5b6000818381151561319957fe5b049392505050565b6040516021806131b1833901905600608060405260405160208060218339810160405251600160a060020a038116ff00a165627a7a72305820c80aa35fada1b5068db7fcaa1e1526d729e9b72cca347963318622d9221b3e650029",
  "sourceMap": "422:8154:120:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;422:8154:120;;;;;;;",
  "deployedSourceMap": "422:8154:120:-;;;;;;;;;-1:-1:-1;;;422:8154:120;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4348:690;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4348:690:120;-1:-1:-1;;;;;4348:690:120;;;;;;;;;3435:382:99;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3435:382:99;;;;;1265:123:68;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1265:123:68;-1:-1:-1;;;;;1265:123:68;;;;;2493:90:120;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2493:90:120;;;;;;;;-1:-1:-1;;;;;2493:90:120;;;;;;;;;;;;;;1223:160:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1223:160:72;;;;;;;;;;;;;;;;;;;;;369:100:87;;8:9:-1;5:2;;;30:1;27;20:12;5:2;369:100:87;;;;;;;;;;;;;;;;;;;;;;3397:263:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3397:263:72;;;;;2617:145;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2617:145:72;;;;2684:156:119;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2684:156:119;;;;;;;;;;;;;;;;;;;;;;;1667:119:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1667:119:72;;;;1389:166;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1389:166:72;;;;;1924:161:101;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1924:161:101;;;;;840:123:96;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;840:123:96;-1:-1:-1;;;;;840:123:96;;;;;1561:100:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1561:100:72;;;;7409:338:120;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7409:338:120;-1:-1:-1;;;;;7409:338:120;;;;;;;;;;1585:153:68;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1585:153:68;-1:-1:-1;;;;;1585:153:68;;;;;2593:126;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2593:126:68;;;;2366:245:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2366:245:72;;;;;1895:116;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1895:116:72;;;;1909:360:99;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1909:360:99;-1:-1:-1;;;;;1909:360:99;;;;;;;1732:92:93;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1732:92:93;;;;8024:180:120;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;8024:180:120;-1:-1:-1;;;;;8024:180:120;;;;;;;;;;4482:382:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4482:382:72;;;;2538:569:99;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2538:569:99;;;;;2408:136:119;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2408:136:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4060:197:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4060:197:72;;;;;5586:414:120;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5586:414:120;;;;-1:-1:-1;;;;;5586:414:120;;;;;;;;;;;;;;;;3165:226:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3165:226:72;;;;;1477:901:120;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1477:901:120;-1:-1:-1;;;;;1477:901:120;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2902:111:68;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2902:111:68;;;;3854:200:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3854:200:72;;;;;2335:114:68;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2335:114:68;;;;1078:111:79;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1078:111:79;;;;1468:153:96;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1468:153:96;;;;2017:97:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2017:97:72;;;;2120:240;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2120:240:72;;;;;3666:182;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3666:182:72;;;;;1992:100:93;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1992:100:93;-1:-1:-1;;;;;1992:100:93;;;;;2062:127:68;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2062:127:68;;;;;1792:97:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1792:97:72;;;;4348:690:120;4673:12;4711:10;4656:6;:4;:6::i;:::-;4655:7;4647:16;;;;;;4688:13;:11;:13::i;:::-;4673:28;;4732:4;4711:26;;4755:19;4767:6;4755:11;:19::i;:::-;4747:28;;;;;;;;4785:44;4805:15;:13;:15::i;:::-;4822:6;4785:19;:44::i;:::-;4840:13;4848:4;4840:7;:13::i;:::-;4863:42;;;;;;4882:10;4863:42;;;;-1:-1:-1;;;;;4863:42:120;;;;;;;;;;;;;;;:18;;;;;;:42;;;;;;;;;;;;;;;-1:-1:-1;4863:18:120;:42;;;5:2:-1;;;;30:1;27;20:12;5:2;4863:42:120;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4863:42:120;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4915:14:120;;-1:-1:-1;4923:5:120;4915:7;:14::i;:::-;4939:92;4976:5;4983:10;4995:6;5020:9;5003:27;;;;;;-1:-1:-1;;;;;5003:27:120;-1:-1:-1;;;;;5003:27:120;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5003:27:120;;;4939:36;:92::i;:::-;4348:690;;;;:::o;3435:382:99:-;3558:17;3616:13;990:16:68;:14;:16::i;:::-;-1:-1:-1;;;;;968:39:68;:10;:39;960:48;;;;;;1045:29;:27;:29::i;:::-;-1:-1:-1;;;;;1026:48:68;:15;:13;:15::i;:::-;-1:-1:-1;;;;;1026:48:68;;1018:57;;;;;;3522:24:99;3535:10;3522:12;:24::i;:::-;3521:25;3513:34;;;;;;3578:28;3595:10;3578:16;:28::i;:::-;3558:48;;3632:24;3645:10;3632:12;:24::i;:::-;3616:40;;3666:27;3682:10;3666:15;:27::i;:::-;3703:44;3730:9;3741:5;3703:26;:44::i;:::-;3762:48;;;-1:-1:-1;;;;;3762:48:99;;;;;;;;;;;;3781:10;;3762:48;;;;;;;;3435:382;;;:::o;1265:123:68:-;783:7:93;:5;:7::i;:::-;-1:-1:-1;;;;;769:21:93;:10;:21;761:30;;;;;;1346:35:68;1365:15;1346:18;:35::i;:::-;1265:123;:::o;2493:90:120:-;2537:6;2562:14;:12;:14::i;:::-;2555:21;;2493:90;:::o;1223:160:72:-;1284:7;1310:11;:66;1369:4;1332:42;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1332:42:72;;;1322:53;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1322:53:72;;;;;;;;;;;;;1310:66;;;;;;;;;;;;-1:-1:-1;1310:66:72;;;1223:160;-1:-1:-1;;;;;1223:160:72:o;369:100:87:-;160:66;415:4;438:24;:11;:24;;;;;;369:100;:::o;3397:263:72:-;783:7:93;:5;:7::i;:::-;-1:-1:-1;;;;;769:21:93;:10;:21;761:30;;;;;;3501:19:72;:17;:19::i;:::-;3487:11;:33;:53;;;-1:-1:-1;3524:16:72;;3487:53;3479:62;;;;;;;;1096:66;3551:11;:34;;;;;;;;:48;;;:34;3614:39;;;;;;;;;;;;;;;;;;3397:263;:::o;2617:145::-;2749:6;2743:3;:12;;2617:145::o;2684:156:119:-;2756:17;2684:156;:::o;1667:119:72:-;1096:66;1719:7;1745:34;;;;;;;1667:119;:::o;1389:166::-;1453:7;1479:11;:69;1541:4;1501:45;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1501:45:72;;;1491:56;;;;;;;;;;;;;66:2:-1;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;1924:161:101;1987:4;2010:11;:68;2065:10;2032:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2032:44:101;;;2022:55;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;2022:55:101;;;;;;;;;;;;;2010:68;;;;;;;;;;;;-1:-1:-1;2010:68:101;;;;;1924:161;-1:-1:-1;;;;;1924:161:101:o;840:123:96:-;783:7:93;:5;:7::i;:::-;-1:-1:-1;;;;;769:21:93;:10;:21;761:30;;;;;;921:35:96;944:11;921:22;:35::i;1561:100:72:-;756:66;1604:7;1630:24;;;;;;;1561:100;:::o;7409:338:120:-;312:4:102;-1:-1:-1;;;;;284:53:102;;:55;;;;;-1:-1:-1;;;284:55:102;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;284:55:102;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;284:55:102;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;284:55:102;-1:-1:-1;;;;;270:69:102;:10;:69;262:78;;;;;;7716:24:120;7728:6;7736:3;7716:11;:24::i;:::-;7409:338;;:::o;1585:153:68:-;783:7:93;:5;:7::i;:::-;-1:-1:-1;;;;;769:21:93;:10;:21;761:30;;;;;;1681:50:68;1713:17;1681:31;:50::i;2593:126::-;544:66;2653:7;2679:33;:14;:33;;;;-1:-1:-1;;;;;2679:33:68;2593:126;:::o;2366:245:72:-;2434:4;2450:17;2470:49;2511:7;2470:36;2490:15;:13;:15::i;:::-;2470:19;:36::i;:::-;:40;:49;:40;:49;:::i;:::-;2450:69;;2561:9;2536:21;:19;:21::i;:::-;:34;;:68;;;;;2585:19;:17;:19::i;:::-;2574:7;:30;;2536:68;2529:75;2366:245;-1:-1:-1;;;2366:245:72:o;1895:116::-;922:66;1945:7;1971:33;;;;;;;1895:116;:::o;1909:360:99:-;990:16:68;:14;:16::i;:::-;-1:-1:-1;;;;;968:39:68;:10;:39;960:48;;;;;;1045:29;:27;:29::i;:::-;-1:-1:-1;;;;;1026:48:68;:15;:13;:15::i;:::-;-1:-1:-1;;;;;1026:48:68;;1018:57;;;;;;2010:28:99;2031:6;2010:20;:28::i;:::-;2006:257;;;2054:47;2077:15;:13;:15::i;:::-;2094:6;2054:22;:47::i;:::-;2115:48;2144:10;2156:6;2115:28;:48::i;:::-;2006:257;;;2194:58;2233:10;2245:6;2194:38;:58::i;1732:92:93:-;1523:66;1770:7;1796:21;:14;:21;;;;-1:-1:-1;;;;;1796:21:93;1732:92;:::o;8024:180:120:-;312:4:102;-1:-1:-1;;;;;284:53:102;;:55;;;;;-1:-1:-1;;;284:55:102;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;284:55:102;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;284:55:102;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;284:55:102;-1:-1:-1;;;;;270:69:102;:10;:69;262:78;;;;;;8158:13:120;:11;:13::i;:::-;8129:68;;;;;;-1:-1:-1;;;;;8129:68:120;;;;;;;;;;;;;;;;:55;;;;;;;:68;;;;;-1:-1:-1;;8129:68:120;;;;;;;;-1:-1:-1;8129:55:120;:68;;;5:2:-1;;;;30:1;27;20:12;5:2;8129:68:120;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8129:68:120;;;;8024:180;;:::o;4482:382:72:-;4532:7;4551:17;4591:19;4635:14;4695:28;4571:10;:8;:10::i;:::-;4551:30;;4613:12;:10;:12::i;:::-;4591:34;;4652:33;4669:15;:13;:15::i;:::-;4652:16;:33::i;:::-;4635:50;;4740:6;4726:11;:20;:47;;4772:1;4726:47;;;4763:6;4749:11;:20;4726:47;4695:78;;4802:20;4790:9;:32;:67;;4837:20;4790:67;;;4825:9;4790:67;4783:74;;4482:382;;;;;:::o;2538:569:99:-;2863:21;2927:17;2619:16;:14;:16::i;:::-;-1:-1:-1;;;;;2619:34:99;;2654:10;2619:46;;;;;-1:-1:-1;;;2619:46:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2619:46:99;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2619:46:99;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2619:46:99;2618:47;2610:56;;;;;;2746:4;2684:16;:14;:16::i;:::-;-1:-1:-1;;;;;2684:38:99;;2723:10;2684:50;;;;;-1:-1:-1;;;2684:50:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2684:50:99;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2684:50:99;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2684:50:99;-1:-1:-1;;;;;2684:67:99;;2676:76;;;;;;2822:29;:27;:29::i;:::-;-1:-1:-1;;;;;2770:81:99;:16;:14;:16::i;:::-;-1:-1:-1;;;;;2770:36:99;;2807:10;2770:48;;;;;-1:-1:-1;;;2770:48:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2770:48:99;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2770:48:99;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2770:48:99;-1:-1:-1;;;;;2770:81:99;;2762:90;;;;;;-1:-1:-1;;2947:50:99;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;2947:50:99;;;;;;;;25:18:-1;;61:17;;-1:-1;;;;;182:15;2887:30:99;179:29:-1;;;160:49;;;2887:30:99;3007:16;:14;:16::i;:::-;-1:-1:-1;;;;;3007:37:99;;3045:29;:27;:29::i;:::-;3076:4;3082:17;:15;:17::i;:::-;3007:93;;;;;-1:-1:-1;;;3007:93:99;;;;;;;-1:-1:-1;;;;;3007:93:99;-1:-1:-1;;;;;3007:93:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3007:93:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3007:93:99;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3007:93:99;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;2538:569:99:o;2408:136:119:-;2529:1;;2469:12;2408:136;;;:::o;4060:197:72:-;783:7:93;:5;:7::i;:::-;-1:-1:-1;;;;;769:21:93;:10;:21;761:30;;;;;;4149:1:72;4137:9;:13;:41;;;;;4166:12;:10;:12::i;:::-;4154:9;:24;4137:41;:67;;;;;4194:10;:8;:10::i;:::-;4182:9;:22;4137:67;4129:76;;;;;;;;447:66;4215:11;:23;;;;;;:35;4060:197::o;5586:414:120:-;5673:4;5689:12;5704:13;:11;:13::i;:::-;5689:28;-1:-1:-1;5735:10:120;-1:-1:-1;;;;;5735:28:120;;;5727:37;;;;;;5779:6;:4;:6::i;:::-;5778:7;5774:124;;;5809:19;5821:6;5809:11;:19::i;:::-;5801:28;;;;;;;;5843:44;5863:15;:13;:15::i;:::-;5880:6;5843:19;:44::i;:::-;5907:65;5944:5;5951;5958:6;5966:5;;5907:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5907:36:120;;-1:-1:-1;;;;;5907:65:120:i;:::-;-1:-1:-1;5989:4:120;;5586:414;-1:-1:-1;;;;;5586:414:120:o;3165:226:72:-;783:7:93;:5;:7::i;:::-;-1:-1:-1;;;;;769:21:93;:10;:21;761:30;;;;;;3260:10:72;:8;:10::i;:::-;3246:11;:24;:44;;;-1:-1:-1;3274:16:72;;3246:44;3238:53;;;;;;;;756:66;3301:11;:24;;;;;;;;:38;;;:24;3354:30;;;;;;;;;;;;;;;;;;3165:226;:::o;1477:901:120:-;1091:44:93;;;22:32:-1;6:49;;1091:44:93;;;;;49:4:-1;25:18;;61:17;;-1:-1;;;;;182:15;1114:20:93;179:29:-1;160:49;;1072:64:93;;;;1975:4:120;;1080::93;;1091:44;1072:64;;;25:18:-1;1072:64:93;;25:18:-1;1975:4:120;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1072:64:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1071:65;:208;;;;1252:4;-1:-1:-1;;;;;1224:53:93;;:55;;;;;-1:-1:-1;;;1224:55:93;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1224:55:93;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1224:55:93;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1224:55:93;-1:-1:-1;;;;;1210:69:93;:10;:69;1071:208;:299;;;-1:-1:-1;1343:10:93;1365:4;1343:27;1071:299;1050:382;;;;;;;;1991:285:120;2016:15;2045:17;2076:32;1991:285;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1991:285:120;;;;;;;;;-1:-1:-1;2122:42:120;;-1:-1:-1;1991:285:120;;-1:-1:-1;1991:285:120;;2122:42;;1991:285;2122:42;1991:285;;;;;;;;;;2178:16;2208:13;2235:6;2255:11;1991;:285::i;:::-;2286:28;2301:12;2286:14;:28::i;:::-;2324:15;:13;:15::i;:::-;2356;:13;:15::i;:::-;2349:22;1477:901;-1:-1:-1;;;;;;;;;;1477:901:120:o;2902:111:68:-;713:66;2950:7;2976:30;;;;;;;2902:111;:::o;3854:200:72:-;783:7:93;:5;:7::i;:::-;-1:-1:-1;;;;;769:21:93;:10;:21;761:30;;;;;;3931:14:72;;;:70;;;3962:10;:8;:10::i;:::-;3950:9;:22;:50;;;;;3988:12;:10;:12::i;:::-;3976:9;:24;3950:50;3923:79;;;;;;;;601:66;4012:11;:23;;;;;;:35;3854:200::o;2335:114:68:-;377:66;2382:4;2410:31;:14;:31;;;;-1:-1:-1;;;;;2410:31:68;2335:114;:::o;1078:111:79:-;260:66;1123:6;1155:26;;;;;;;1078:111;:::o;1468:153:96:-;443:66;1519:19;1577:36;:14;:36;;;;-1:-1:-1;;;;;1577:36:96;1468:153;:::o;2017:97:72:-;447:66;2058:7;2084:23;;;;;;;2017:97;:::o;2120:240::-;2179:4;2195:17;2215:46;2253:7;2215:33;2232:15;:13;:15::i;2215:46::-;2195:66;;2294:9;2278:12;:10;:12::i;:::-;:25;;:50;;;;;2318:10;:8;:10::i;:::-;2307:7;:21;;2278:50;:75;;;;;2343:10;:8;:10::i;:::-;2332:21;;;;;2120:240;-1:-1:-1;;2120:240:72:o;3666:182::-;783:7:93;:5;:7::i;:::-;-1:-1:-1;;;;;769:21:93;:10;:21;761:30;;;;;;3764:21:72;:19;:21::i;:::-;3752:33;;3744:42;;;;;;922:66;3796:11;:33;;;;;;:45;3666:182::o;1992:100:93:-;783:7;:5;:7::i;:::-;-1:-1:-1;;;;;769:21:93;:10;:21;761:30;;;;;;2066:19;2076:8;2066:9;:19::i;2062:127:68:-;783:7:93;:5;:7::i;:::-;-1:-1:-1;;;;;769:21:93;:10;:21;761:30;;;;;;2145:37:68;2165:16;2145:19;:37::i;1792:97:72:-;601:66;1833:7;1859:23;;;;;;;1792:97;:::o;267:81:94:-;155:66;301:4;324:17;:11;:17;;;;;;267:81;:::o;2768:188:72:-;2915:34;2942:6;2915:22;2932:4;2915:16;:22::i;:34::-;2846:11;:66;2905:4;2868:42;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2868:42:72;;;2858:53;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;2858:53:72;;;;;;;;;;;;;2846:66;;;;;;;;;;;;-1:-1:-1;2846:66:72;:103;;;;-1:-1:-1;;;;;2768:188:72:o;354:80:94:-;155:66;402:17;;:11;:17;;;:25;;-1:-1:-1;;402:25:94;;;;;;;;;;354:80::o;6450:287:120:-;6579:6;:4;:6::i;:::-;6578:7;6574:157;;;6630:6;-1:-1:-1;;;;;6601:41:120;;6643:6;6601:49;;;;;-1:-1:-1;;;6601:49:120;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6601:49:120;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6601:49:120;;;;6664:56;6676:5;6683:28;6698:5;6705;6683:14;:28::i;:::-;6713:6;6664:11;:56::i;4237:113:68:-;4285:7;4311:16;:14;:16::i;:::-;-1:-1:-1;;;;;4311:30:68;;:32;;;;;-1:-1:-1;;;4311:32:68;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4311:32:68;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4311:32:68;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4311:32:68;;-1:-1:-1;4237:113:68;:::o;1302:177:101:-;1371:7;1397:14;:75;1459:10;1422:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1422:48:101;;;1412:59;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1412:59:101;;;;;;;;;;;;;1397:75;;;;;;;;;;;;-1:-1:-1;1397:75:101;;-1:-1:-1;;;;;1397:75:101;;1302:177;-1:-1:-1;;;;;1302:177:101:o;622:166::-;687:7;713:11;:68;768:10;735:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;735:44:101;;;725:55;;;;;;;;;;;;;66:2:-1;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;1631:146:101;1766:4;1695:11;:68;1750:10;1717:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1717:44:101;;;1707:55;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1707:55:101;;;;;;;;;;;;;1695:68;;;;;;;;;;;;-1:-1:-1;1695:68:101;:75;;-1:-1:-1;;1695:75:101;;;;;;;;;;;-1:-1:-1;;;;1631:146:101:o;3780:164:120:-;3899:13;:11;:13::i;:::-;-1:-1:-1;;;;;3870:48:120;;3919:9;3930:6;3870:67;;;;;-1:-1:-1;;;3870:67:120;;;;;;;-1:-1:-1;;;;;3870:67:120;-1:-1:-1;;;;;3870:67:120;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3870:67:120;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3870:67:120;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;3154:187:68;3234:40;3258:15;3234:23;:40::i;:::-;3226:49;;;;;;;;377:66;3285:31;;:14;:31;;;:49;;-1:-1:-1;;3285:49:68;-1:-1:-1;;;;;3285:49:68;;;;;;;;;;3154:187::o;368:115:63:-;95:66:83;415:6:63;447:28;:14;:28;;;;-1:-1:-1;;;;;447:28:63;368:115;:::o;1129:213:96:-;-1:-1:-1;;;;;1209:25:96;;;;:65;;;1238:36;1262:11;1238:23;:36::i;:::-;1201:74;;;;;;;;443:66;1285:36;;:14;:36;;;:50;;-1:-1:-1;;1285:50:96;-1:-1:-1;;;;;1285:50:96;;;;;;;;;;1129:213::o;892:225:78:-;964:3;-1:-1:-1;;;;;455:17:78;;;;447:26;;;;;;-1:-1:-1;;;;;983:20:78;;;979:132;;;1019:21;1036:3;1019:16;:21::i;:::-;979:132;;;1071:29;1088:6;1096:3;1071:16;:29::i;:::-;892:225;;;:::o;3503:147:68:-;544:66;3590:33;;:14;:33;;;:53;;-1:-1:-1;;3590:53:68;-1:-1:-1;;;;;3590:53:68;;;;;;;;;;3503:147::o;1238:128:160:-;1319:7;;;1339;;;;1332:15;;;;1238:128;;;;:::o;2962:197:72:-;3115:37;3145:6;3115:25;3135:4;3115:19;:25::i;:37::-;3043:11;:69;3105:4;3065:45;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3065:45:72;;;3055:56;;;;;;;;;;;;;66:2:-1;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;2891:663:120;2983:19;3037:18;3079:30;3186:11;3005:21;3019:6;3005:13;:21::i;:::-;2983:43;;3058:11;:9;:11::i;:::-;3037:32;;3112:20;:18;:20::i;:::-;3079:53;-1:-1:-1;;;;;;3146:24:120;;;3142:259;;3200:10;-1:-1:-1;;;;;3200:23:120;;3224:11;3200:36;;;;;-1:-1:-1;;;3200:36:120;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3200:36:120;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3200:36:120;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3200:36:120;;-1:-1:-1;3254:8:120;;3250:141;;3282:42;3296:10;3308:3;3313:10;3282:13;:42::i;:::-;3356:20;:11;3372:3;3356:20;:15;:20;:::i;:::-;3342:34;;3250:141;3440:13;:11;:13::i;:::-;-1:-1:-1;;;;;3411:48:120;;3460:9;3471:11;3411:72;;;;;-1:-1:-1;;;3411:72:120;;;;;;;-1:-1:-1;;;;;3411:72:120;-1:-1:-1;;;;;3411:72:120;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3411:72:120;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3411:72:120;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;3498:49:120;;;;;;;;3536:10;;-1:-1:-1;;;;;3498:49:120;;;;;;;;3411:72;3498:49;;;2891:663;;;;;;:::o;1417:772:119:-;1773:15;:13;:15::i;:::-;1772:16;1764:25;;;;;;1800:35;1819:15;1800:18;:35::i;:::-;1845:50;1877:17;1845:31;:50::i;:::-;1905:37;1925:16;1905:19;:37::i;:::-;1952:44;1963:32;1952:10;:44::i;:::-;2006:63;2026:42;2006:19;:63::i;:::-;2079:31;2096:13;2079:16;:31::i;:::-;2120:35;2143:11;2120:22;:35::i;:::-;2165:17;2175:6;2165:9;:17::i;:::-;1417:772;;;;;;;;:::o;489:153:63:-;556:31;580:6;556:23;:31::i;:::-;548:40;;;;;;;;95:66:83;598:28:63;;:14;:28;;;:37;;-1:-1:-1;;598:37:63;-1:-1:-1;;;;;598:37:63;;;;;;;;;;489:153::o;281:82:87:-;160:66;325:24;;:11;:24;;;:31;;-1:-1:-1;;325:31:87;352:4;325:31;;;281:82::o;2149:190:93:-;-1:-1:-1;;;;;2213:22:93;;;;2205:31;;;;;;2251:39;2272:7;:5;:7::i;:::-;2251:39;;;-1:-1:-1;;;;;2251:39:93;;;;;;;;;;;;;;;;;;;;;1523:66;2300:21;;:14;:21;;;:32;;-1:-1:-1;;2300:32:93;-1:-1:-1;;;;;2300:32:93;;;;;;;;;;2149:190::o;3850:182:68:-;3952:13;:11;:13::i;:::-;3932:33;;;3924:42;;;;;;713:66;3976:11;:30;;;;;;:49;3850:182::o;388:373:77:-;523:12;;504:5;;463:17;-1:-1:-1;519:236:77;;;563:12;;579:2;563:18;555:27;;;;;;608;629:5;608:20;:27::i;:::-;596:39;-1:-1:-1;;;;;;657:23:77;;;;649:32;;;;;;716:27;:25;:27::i;:::-;-1:-1:-1;;;;;703:40:77;;;;;;;695:49;;;;;1105:506:99;1282:57;;;-1:-1:-1;;;;;1282:57:99;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1282:57:99;;;;;;;;25:18:-1;;61:17;;-1:-1;;;;;182:15;1219:33:99;179:29:-1;;;160:49;;;1219:33:99;1195:21;1371:16;:14;:16::i;:::-;-1:-1:-1;;;;;1371:37:99;;1422:29;:27;:29::i;:::-;1465:4;1483:17;:15;:17::i;:::-;1371:139;;;;;-1:-1:-1;;;1371:139:99;;;;;;;-1:-1:-1;;;;;1371:139:99;-1:-1:-1;;;;;1371:139:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1371:139:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1371:139:99;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1371:139:99;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1371:139:99;;-1:-1:-1;1521:35:99;1371:139;1549:6;1521:15;:35::i;:::-;1566:38;1586:10;1598:5;1566:19;:38::i;438:578:159:-;496:4;971:18;;1003:8;;438:578::o;1270:145:78:-;1352:4;1344:21;1375:33;1397:3;1344:21;1375;:33::i;1656:210::-;1795:21;;;;;;1811:4;1795:21;;;;;;1760:6;;1730:16;;-1:-1:-1;;;;;1795:15:78;;;;;:21;;;;;;;;;;;;;;1730:16;1795:15;:21;;;5:2:-1;;;;30:1;27;20:12;5:2;1795:21:78;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1795:21:78;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1795:21:78;;-1:-1:-1;1826:33:78;-1:-1:-1;;;;;1826:19:78;;1846:3;1795:21;1826:33;:19;:33;:::i;1396:130:79:-;1458:7;1484:35;1495:6;1504:14;:12;:14::i;:::-;1503:15;;1484:10;:35::i;4512:105:68:-;4556:7;4582:16;:14;:16::i;:::-;-1:-1:-1;;;;;4582:26:68;;:28;;;;;-1:-1:-1;;;4582:28:68;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;1910:293:96;2019:36;2037:11;2050:4;2019:17;:36::i;:::-;2082:66;;;2132:4;2082:66;;;;;;;;;;;;;;;-1:-1:-1;2082:66:96;;;;;;;;26:21:-1;;;2082:66:96;22:32:-1;6:49;;2082:66:96;;;;;;;25:18:-1;;61:17;;-1:-1;;;;;182:15;2105:17:96;179:29:-1;160:49;;2065:84:96;;;;-1:-1:-1;;;;;2065:16:96;;;:84;;;;25:18:-1;2065:84:96;;;;;25:18:-1;;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2065:84:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2164:32:96;;;;;;;;2185:10;;-1:-1:-1;2164:32:96;;;;;;;;;1910:293;;;:::o;1060:116:160:-;1120:7;1142:8;;;;1135:16;;;;-1:-1:-1;1164:7:160;;;1060:116::o;4870:446:72:-;4950:10;;;;4963:1;-1:-1:-1;4950:73:72;;;;-1:-1:-1;5013:10:72;;;;;5000;;;:23;4950:73;:139;;;;-1:-1:-1;5079:10:72;;;;5066;;:23;4950:139;4929:195;;;;;;;;5162:10;;756:66;5170:1;5135:24;;;5162:10;5135:24;;;;:37;;;;5208:10;;;;601:66;5182:23;;;:36;5254:10;;;;447:66;5228:23;;;:36;5280:29;;5162:7;;5298:10;;;;;5280:29;;;;;;;;;;;;;;;;;;4870:446;:::o;5322:314::-;5411:10;;;5398;;;:23;5390:32;;;;;;5509:10;;1096:66;5517:1;5472:34;;;5509:10;5472:34;;;;:47;;;;5565:10;;;;922:66;5529:33;;;:46;5591:38;;5509:7;;5618:10;;718:247:79;-1:-1:-1;;876:6:79;:12;:27;;;;;901:2;892:6;:11;876:27;868:36;;;;;;;;260:66;914:11;:26;;;;;;:44;718:247::o;4800:109:68:-;4846:7;4872:16;:14;:16::i;:::-;-1:-1:-1;;;;;4872:28:68;;:30;;;;;-1:-1:-1;;;4872:30:68;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;1216:154:20;1350:2;1338:15;1332:22;;1310:54::o;8452:122:120:-;8512:7;8538:29;:27;:29::i;311:164:101:-;462:6;391:11;:68;446:10;413:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;413:44:101;;;403:55;;;;;;;;;;;;;66:2:-1;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;992:183:101;1158:10;1080:14;:75;1142:10;1105:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1105:48:101;;;1095:59;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1095:59:101;;;;;;;;;;;;;1080:75;;;;;;;;;;;;-1:-1:-1;1080:75:101;:88;;-1:-1:-1;;1080:88:101;-1:-1:-1;;;;;1080:88:101;;;;;;;;;;;-1:-1:-1;;;;;992:183:101:o;431:177:18:-;513:22;;-1:-1:-1;;;;;513:14:18;;;:22;;;;;528:6;;513:22;;;;528:6;513:14;:22;;;;;;;512:23;508:94;;;573:6;581:9;551:40;;:::i;:::-;-1:-1:-1;;;;;551:40:18;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;579:339:22;677:6;-1:-1:-1;;;;;665:28:22;;694:3;699:6;665:41;;;;;-1:-1:-1;;;665:41:22;;;;;;;-1:-1:-1;;;;;665:41:22;-1:-1:-1;;;;;665:41:22;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;665:41:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;665:41:22;;;;742:14;739:2;;;796;793:1;790;775:24;832:1;826:8;819:16;816:2;;;868:1;865;858:12;2040:290:79;2113:7;2136:11;;2132:55;;;-1:-1:-1;2170:6:79;2163:13;;2132:55;2209:1;2200:6;:10;2196:79;;;2233:31;:6;2244:2;:19;;;2233:31;:10;:31;:::i;:::-;2226:38;;;;2196:79;2291:32;:6;2314:7;;;;2302:2;:20;2291:32;:10;:32;:::i;203:380:160:-;263:9;489:7;;485:36;;;-1:-1:-1;513:1:160;506:8;;485:36;-1:-1:-1;531:7:160;;;536:2;531;:7;551:6;;;;;;;;:12;544:20;;;665:283;725:7;941:2;936;:7;;;;;;;;;665:283;-1:-1:-1;;;665:283:160:o;422:8154:120:-;;;;;;;;;;:::o",
  "source": "pragma solidity 0.4.24;\n\nimport \"./BasicAMBNativeToErc20.sol\";\nimport \"../BaseERC677Bridge.sol\";\nimport \"../../interfaces/IBurnableMintableERC677Token.sol\";\nimport \"../ReentrancyGuard.sol\";\n\n/**\n* @title ForeignAMBNativeToErc20\n* @dev Foreign mediator implementation for native-to-erc20 bridge intended to work on top of AMB bridge.\n* It is design to be used as implementation contract of EternalStorageProxy contract.\n*/\ncontract ForeignAMBNativeToErc20 is BasicAMBNativeToErc20, ReentrancyGuard, BaseERC677Bridge {\n    /**\n    * @dev Stores the initial parameters of the mediator.\n    * @param _bridgeContract the address of the AMB bridge contract.\n    * @param _mediatorContract the address of the mediator contract on the other network.\n    * @param _dailyLimitMaxPerTxMinPerTxArray array with limit values for the assets to be bridged to the other network.\n    *   [ 0 = dailyLimit, 1 = maxPerTx, 2 = minPerTx ]\n    * @param _executionDailyLimitExecutionMaxPerTxArray array with limit values for the assets bridged from the other network.\n    *   [ 0 = executionDailyLimit, 1 = executionMaxPerTx ]\n    * @param _requestGasLimit the gas limit for the message execution.\n    * @param _decimalShift number of decimals shift required to adjust the amount of tokens bridged.\n    * @param _owner address of the owner of the mediator contract\n    * @param _erc677token address of the erc677 token contract\n    * @param _feeManager address of the fee manager contract\n    */\n    function initialize(\n        address _bridgeContract,\n        address _mediatorContract,\n        uint256[3] _dailyLimitMaxPerTxMinPerTxArray, // [ 0 = dailyLimit, 1 = maxPerTx, 2 = minPerTx ]\n        uint256[2] _executionDailyLimitExecutionMaxPerTxArray, // [ 0 = executionDailyLimit, 1 = executionMaxPerTx ]\n        uint256 _requestGasLimit,\n        int256 _decimalShift,\n        address _owner,\n        address _erc677token,\n        address _feeManager\n    ) external onlyRelevantSender returns (bool) {\n        _initialize(\n            _bridgeContract,\n            _mediatorContract,\n            _dailyLimitMaxPerTxMinPerTxArray,\n            _executionDailyLimitExecutionMaxPerTxArray,\n            _requestGasLimit,\n            _decimalShift,\n            _owner,\n            _feeManager\n        );\n        setErc677token(_erc677token);\n        setInitialize();\n        return isInitialized();\n    }\n\n    /**\n    * @dev Public getter for token contract.\n    * @return address of the used token contract\n    */\n    function erc677token() public view returns (ERC677) {\n        return _erc677token();\n    }\n\n    /**\n    * @dev Mint the amount of tokens that were bridged from the other network.\n    * If configured, it calculates, subtract and distribute the fees among the reward accounts.\n    * @param _receiver address that will receive the tokens\n    * @param _value amount of tokens to be received\n    */\n    function executeActionOnBridgedTokens(address _receiver, uint256 _value) internal {\n        uint256 valueToMint = _unshiftValue(_value);\n\n        bytes32 _messageId = messageId();\n        IMediatorFeeManager feeManager = feeManagerContract();\n        if (feeManager != address(0)) {\n            uint256 fee = feeManager.calculateFee(valueToMint);\n            if (fee != 0) {\n                distributeFee(feeManager, fee, _messageId);\n                valueToMint = valueToMint.sub(fee);\n            }\n        }\n\n        IBurnableMintableERC677Token(erc677token()).mint(_receiver, valueToMint);\n        emit TokensBridged(_receiver, valueToMint, _messageId);\n    }\n\n    /**\n    * @dev Mint back the amount of tokens that were bridged to the other network but failed.\n    * @param _receiver address that will receive the tokens\n    * @param _value amount of tokens to be received\n    */\n    function executeActionOnFixedTokens(address _receiver, uint256 _value) internal {\n        IBurnableMintableERC677Token(erc677token()).mint(_receiver, _value);\n    }\n\n    /**\n    * @dev It will initiate the bridge operation that will burn the amount of tokens transferred and unlock the native tokens on\n    * the other network. The user should first call Approve method of the ERC677 token.\n    * @param _receiver address that will receive the native tokens on the other network.\n    * @param _value amount of tokens to be transferred to the other network.\n    */\n    function relayTokens(address _receiver, uint256 _value) external {\n        // This lock is to prevent calling passMessage twice.\n        // When transferFrom is called, after the transfer, the ERC677 token will call onTokenTransfer from this contract\n        // which will call passMessage.\n        require(!lock());\n        ERC677 token = erc677token();\n        address to = address(this);\n        require(withinLimit(_value));\n        addTotalSpentPerDay(getCurrentDay(), _value);\n\n        setLock(true);\n        token.transferFrom(msg.sender, to, _value);\n        setLock(false);\n        bridgeSpecificActionsOnTokenTransfer(token, msg.sender, _value, abi.encodePacked(_receiver));\n    }\n\n    /**\n    * @dev This method is called when transferAndCall is used from ERC677 to transfer the tokens to this contract.\n    * It will initiate the bridge operation that will burn the amount of tokens transferred and unlock the native tokens on\n    * the other network.\n    * @param _from address that transferred the tokens.\n    * @param _value amount of tokens transferred.\n    * @param _data this parameter could contain the address of an alternative receiver of the tokens on the other network,\n    * otherwise it will be empty.\n    */\n    function onTokenTransfer(address _from, uint256 _value, bytes _data) external returns (bool) {\n        ERC677 token = erc677token();\n        require(msg.sender == address(token));\n        if (!lock()) {\n            require(withinLimit(_value));\n            addTotalSpentPerDay(getCurrentDay(), _value);\n        }\n        bridgeSpecificActionsOnTokenTransfer(token, _from, _value, _data);\n        return true;\n    }\n\n    /**\n    * @dev Burns the amount of tokens and makes the request to unlock the native tokens on the other network.\n    * @param _token address of the ERC677 token.\n    * @param _from address that transferred the tokens.\n    * @param _value amount of tokens transferred.\n    * @param _data this parameter could contain the address of an alternative receiver of the native tokens on the other\n    * network, otherwise it will be empty.\n    */\n    function bridgeSpecificActionsOnTokenTransfer(ERC677 _token, address _from, uint256 _value, bytes _data) internal {\n        if (!lock()) {\n            IBurnableMintableERC677Token(_token).burn(_value);\n            passMessage(_from, chooseReceiver(_from, _data), _value);\n        }\n    }\n\n    /**\n    * @dev Mint the fee amount of tokens to the fee manager contract.\n    * @param _feeManager address that will receive the minted tokens.\n    * @param _fee amount of tokens to be minted.\n    */\n    function onFeeDistribution(address _feeManager, uint256 _fee) internal {\n        IBurnableMintableERC677Token(erc677token()).mint(_feeManager, _fee);\n    }\n\n    /**\n    * @dev Allows to transfer any locked token on this contract that is not part of the bridge operations.\n    * @param _token address of the token, if it is not provided, native tokens will be transferred.\n    * @param _to address that will receive the locked tokens on this contract.\n    */\n    function claimTokens(address _token, address _to) external onlyIfUpgradeabilityOwner {\n        // For foreign side of the bridge, tokens are not locked at the contract, they are minted and burned instead.\n        // So, its is safe to allow claiming of any tokens. Native coins are allowed as well.\n        claimValues(_token, _to);\n    }\n\n    /**\n    * @dev Allows to transfer any locked token on the ERC677 token contract.\n    * @param _token address of the token, if it is not provided, native tokens will be transferred.\n    * @param _to address that will receive the locked tokens on this contract.\n    */\n    function claimTokensFromErc677(address _token, address _to) external onlyIfUpgradeabilityOwner {\n        IBurnableMintableERC677Token(erc677token()).claimTokens(_token, _to);\n    }\n\n    /**\n    * @dev Tells the address of the mediator contract on the other side, used by chooseReceiver method\n    * to avoid sending the native tokens to that address.\n    * @return address of the mediator contract con the other side\n    */\n    function bridgeContractOnOtherSide() internal view returns (address) {\n        return mediatorContractOnOtherSide();\n    }\n}\n",
  "sourcePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/amb_native_to_erc20/ForeignAMBNativeToErc20.sol",
  "ast": {
    "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/amb_native_to_erc20/ForeignAMBNativeToErc20.sol",
    "exportedSymbols": {
      "ForeignAMBNativeToErc20": [
        20651
      ]
    },
    "id": 20652,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 20282,
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:120"
      },
      {
        "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/amb_native_to_erc20/BasicAMBNativeToErc20.sol",
        "file": "./BasicAMBNativeToErc20.sol",
        "id": 20283,
        "nodeType": "ImportDirective",
        "scope": 20652,
        "sourceUnit": 20281,
        "src": "25:37:120",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/BaseERC677Bridge.sol",
        "file": "../BaseERC677Bridge.sol",
        "id": 20284,
        "nodeType": "ImportDirective",
        "scope": 20652,
        "sourceUnit": 10091,
        "src": "63:33:120",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/interfaces/IBurnableMintableERC677Token.sol",
        "file": "../../interfaces/IBurnableMintableERC677Token.sol",
        "id": 20285,
        "nodeType": "ImportDirective",
        "scope": 20652,
        "sourceUnit": 1678,
        "src": "97:59:120",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/ReentrancyGuard.sol",
        "file": "../ReentrancyGuard.sol",
        "id": 20286,
        "nodeType": "ImportDirective",
        "scope": 20652,
        "sourceUnit": 15350,
        "src": "157:32:120",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 20287,
              "name": "BasicAMBNativeToErc20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 20280,
              "src": "458:21:120",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BasicAMBNativeToErc20_$20280",
                "typeString": "contract BasicAMBNativeToErc20"
              }
            },
            "id": 20288,
            "nodeType": "InheritanceSpecifier",
            "src": "458:21:120"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 20289,
              "name": "ReentrancyGuard",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15349,
              "src": "481:15:120",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ReentrancyGuard_$15349",
                "typeString": "contract ReentrancyGuard"
              }
            },
            "id": 20290,
            "nodeType": "InheritanceSpecifier",
            "src": "481:15:120"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 20291,
              "name": "BaseERC677Bridge",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10090,
              "src": "498:16:120",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BaseERC677Bridge_$10090",
                "typeString": "contract BaseERC677Bridge"
              }
            },
            "id": 20292,
            "nodeType": "InheritanceSpecifier",
            "src": "498:16:120"
          }
        ],
        "contractDependencies": [
          1500,
          9266,
          10090,
          11468,
          12916,
          13954,
          14052,
          14172,
          14357,
          14798,
          15318,
          15349,
          15717,
          16261,
          16390,
          16409,
          16712,
          20280
        ],
        "contractKind": "contract",
        "documentation": "@title ForeignAMBNativeToErc20\n@dev Foreign mediator implementation for native-to-erc20 bridge intended to work on top of AMB bridge.\nIt is design to be used as implementation contract of EternalStorageProxy contract.",
        "fullyImplemented": true,
        "id": 20651,
        "linearizedBaseContracts": [
          20651,
          10090,
          13954,
          14357,
          1500,
          15349,
          20280,
          15717,
          16261,
          16390,
          12916,
          14172,
          11468,
          15318,
          16712,
          14052,
          16409,
          14798,
          9266
        ],
        "name": "ForeignAMBNativeToErc20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 20342,
              "nodeType": "Block",
              "src": "1981:397:120",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20322,
                        "name": "_bridgeContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20294,
                        "src": "2016:15:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 20323,
                        "name": "_mediatorContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20296,
                        "src": "2045:17:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 20324,
                        "name": "_dailyLimitMaxPerTxMinPerTxArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20300,
                        "src": "2076:32:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$3_calldata_ptr",
                          "typeString": "uint256[3] calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 20325,
                        "name": "_executionDailyLimitExecutionMaxPerTxArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20304,
                        "src": "2122:42:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                          "typeString": "uint256[2] calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 20326,
                        "name": "_requestGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20306,
                        "src": "2178:16:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 20327,
                        "name": "_decimalShift",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20308,
                        "src": "2208:13:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 20328,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20310,
                        "src": "2235:6:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 20329,
                        "name": "_feeManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20314,
                        "src": "2255:11:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$3_calldata_ptr",
                          "typeString": "uint256[3] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                          "typeString": "uint256[2] calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 20321,
                      "name": "_initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20245,
                      "src": "1991:11:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$3_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$_t_int256_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,uint256[3] memory,uint256[2] memory,uint256,int256,address,address)"
                      }
                    },
                    "id": 20330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1991:285:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20331,
                  "nodeType": "ExpressionStatement",
                  "src": "1991:285:120"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20333,
                        "name": "_erc677token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20312,
                        "src": "2301:12:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 20332,
                      "name": "setErc677token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10031,
                      "src": "2286:14:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 20334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2286:28:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20335,
                  "nodeType": "ExpressionStatement",
                  "src": "2286:28:120"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 20336,
                      "name": "setInitialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14787,
                      "src": "2324:13:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 20337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2324:15:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20338,
                  "nodeType": "ExpressionStatement",
                  "src": "2324:15:120"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 20339,
                      "name": "isInitialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14797,
                      "src": "2356:13:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                        "typeString": "function () view returns (bool)"
                      }
                    },
                    "id": 20340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2356:15:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 20320,
                  "id": 20341,
                  "nodeType": "Return",
                  "src": "2349:22:120"
                }
              ]
            },
            "documentation": "@dev Stores the initial parameters of the mediator.\n@param _bridgeContract the address of the AMB bridge contract.\n@param _mediatorContract the address of the mediator contract on the other network.\n@param _dailyLimitMaxPerTxMinPerTxArray array with limit values for the assets to be bridged to the other network.\n  [ 0 = dailyLimit, 1 = maxPerTx, 2 = minPerTx ]\n@param _executionDailyLimitExecutionMaxPerTxArray array with limit values for the assets bridged from the other network.\n  [ 0 = executionDailyLimit, 1 = executionMaxPerTx ]\n@param _requestGasLimit the gas limit for the message execution.\n@param _decimalShift number of decimals shift required to adjust the amount of tokens bridged.\n@param _owner address of the owner of the mediator contract\n@param _erc677token address of the erc677 token contract\n@param _feeManager address of the fee manager contract",
            "id": 20343,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 20317,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 20316,
                  "name": "onlyRelevantSender",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 15266,
                  "src": "1947:18:120",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1947:18:120"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20315,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20294,
                  "name": "_bridgeContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 20343,
                  "src": "1506:23:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20293,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1506:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20296,
                  "name": "_mediatorContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 20343,
                  "src": "1539:25:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20295,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1539:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20300,
                  "name": "_dailyLimitMaxPerTxMinPerTxArray",
                  "nodeType": "VariableDeclaration",
                  "scope": 20343,
                  "src": "1574:43:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$3_calldata_ptr",
                    "typeString": "uint256[3]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 20297,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1574:7:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 20299,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "33",
                      "id": 20298,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1582:1:120",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "3"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1574:10:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
                      "typeString": "uint256[3]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20304,
                  "name": "_executionDailyLimitExecutionMaxPerTxArray",
                  "nodeType": "VariableDeclaration",
                  "scope": 20343,
                  "src": "1677:53:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 20301,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1677:7:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 20303,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 20302,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1685:1:120",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1677:10:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20306,
                  "name": "_requestGasLimit",
                  "nodeType": "VariableDeclaration",
                  "scope": 20343,
                  "src": "1794:24:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20305,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1794:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20308,
                  "name": "_decimalShift",
                  "nodeType": "VariableDeclaration",
                  "scope": 20343,
                  "src": "1828:20:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 20307,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1828:6:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20310,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 20343,
                  "src": "1858:14:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20309,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1858:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20312,
                  "name": "_erc677token",
                  "nodeType": "VariableDeclaration",
                  "scope": 20343,
                  "src": "1882:20:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20311,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1882:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20314,
                  "name": "_feeManager",
                  "nodeType": "VariableDeclaration",
                  "scope": 20343,
                  "src": "1912:19:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20313,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1912:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1496:441:120"
            },
            "payable": false,
            "returnParameters": {
              "id": 20320,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20319,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 20343,
                  "src": "1975:4:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 20318,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1975:4:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1974:6:120"
            },
            "scope": 20651,
            "src": "1477:901:120",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 20351,
              "nodeType": "Block",
              "src": "2545:38:120",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 20348,
                      "name": "_erc677token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10012,
                      "src": "2562:12:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ERC677_$1469_$",
                        "typeString": "function () view returns (contract ERC677)"
                      }
                    },
                    "id": 20349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2562:14:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC677_$1469",
                      "typeString": "contract ERC677"
                    }
                  },
                  "functionReturnParameters": 20347,
                  "id": 20350,
                  "nodeType": "Return",
                  "src": "2555:21:120"
                }
              ]
            },
            "documentation": "@dev Public getter for token contract.\n@return address of the used token contract",
            "id": 20352,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "erc677token",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20344,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2513:2:120"
            },
            "payable": false,
            "returnParameters": {
              "id": 20347,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20346,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 20352,
                  "src": "2537:6:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC677_$1469",
                    "typeString": "contract ERC677"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 20345,
                    "name": "ERC677",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1469,
                    "src": "2537:6:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC677_$1469",
                      "typeString": "contract ERC677"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2536:8:120"
            },
            "scope": 20651,
            "src": "2493:90:120",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 20422,
              "nodeType": "Block",
              "src": "2973:581:120",
              "statements": [
                {
                  "assignments": [
                    20360
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 20360,
                      "name": "valueToMint",
                      "nodeType": "VariableDeclaration",
                      "scope": 20423,
                      "src": "2983:19:120",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 20359,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2983:7:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 20364,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20362,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20356,
                        "src": "3019:6:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 20361,
                      "name": "_unshiftValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14116,
                      "src": "3005:13:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 20363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3005:21:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2983:43:120"
                },
                {
                  "assignments": [
                    20366
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 20366,
                      "name": "_messageId",
                      "nodeType": "VariableDeclaration",
                      "scope": 20423,
                      "src": "3037:18:120",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 20365,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3037:7:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 20369,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 20367,
                      "name": "messageId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11456,
                      "src": "3058:9:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
                        "typeString": "function () view returns (bytes32)"
                      }
                    },
                    "id": 20368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3058:11:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3037:32:120"
                },
                {
                  "assignments": [
                    20371
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 20371,
                      "name": "feeManager",
                      "nodeType": "VariableDeclaration",
                      "scope": 20423,
                      "src": "3079:30:120",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMediatorFeeManager_$1788",
                        "typeString": "contract IMediatorFeeManager"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 20370,
                        "name": "IMediatorFeeManager",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1788,
                        "src": "3079:19:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMediatorFeeManager_$1788",
                          "typeString": "contract IMediatorFeeManager"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 20374,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 20372,
                      "name": "feeManagerContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15675,
                      "src": "3112:18:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IMediatorFeeManager_$1788_$",
                        "typeString": "function () view returns (contract IMediatorFeeManager)"
                      }
                    },
                    "id": 20373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3112:20:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMediatorFeeManager_$1788",
                      "typeString": "contract IMediatorFeeManager"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3079:53:120"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 20379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 20375,
                      "name": "feeManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20371,
                      "src": "3146:10:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMediatorFeeManager_$1788",
                        "typeString": "contract IMediatorFeeManager"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 20377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3168:1:120",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 20376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3160:7:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 20378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3160:10:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3146:24:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 20406,
                  "nodeType": "IfStatement",
                  "src": "3142:259:120",
                  "trueBody": {
                    "id": 20405,
                    "nodeType": "Block",
                    "src": "3172:229:120",
                    "statements": [
                      {
                        "assignments": [
                          20381
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 20381,
                            "name": "fee",
                            "nodeType": "VariableDeclaration",
                            "scope": 20423,
                            "src": "3186:11:120",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 20380,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3186:7:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 20386,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 20384,
                              "name": "valueToMint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20360,
                              "src": "3224:11:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 20382,
                              "name": "feeManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20371,
                              "src": "3200:10:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IMediatorFeeManager_$1788",
                                "typeString": "contract IMediatorFeeManager"
                              }
                            },
                            "id": 20383,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "calculateFee",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1787,
                            "src": "3200:23:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 20385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3200:36:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3186:50:120"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 20389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 20387,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20381,
                            "src": "3254:3:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 20388,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3261:1:120",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3254:8:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 20404,
                        "nodeType": "IfStatement",
                        "src": "3250:141:120",
                        "trueBody": {
                          "id": 20403,
                          "nodeType": "Block",
                          "src": "3264:127:120",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 20391,
                                    "name": "feeManager",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 20371,
                                    "src": "3296:10:120",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IMediatorFeeManager_$1788",
                                      "typeString": "contract IMediatorFeeManager"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 20392,
                                    "name": "fee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 20381,
                                    "src": "3308:3:120",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 20393,
                                    "name": "_messageId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 20366,
                                    "src": "3313:10:120",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IMediatorFeeManager_$1788",
                                      "typeString": "contract IMediatorFeeManager"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 20390,
                                  "name": "distributeFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 15709,
                                  "src": "3282:13:120",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IMediatorFeeManager_$1788_$_t_uint256_$_t_bytes32_$returns$__$",
                                    "typeString": "function (contract IMediatorFeeManager,uint256,bytes32)"
                                  }
                                },
                                "id": 20394,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3282:42:120",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 20395,
                              "nodeType": "ExpressionStatement",
                              "src": "3282:42:120"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 20401,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 20396,
                                  "name": "valueToMint",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 20360,
                                  "src": "3342:11:120",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 20399,
                                      "name": "fee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 20381,
                                      "src": "3372:3:120",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 20397,
                                      "name": "valueToMint",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 20360,
                                      "src": "3356:11:120",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 20398,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sub",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 29958,
                                    "src": "3356:15:120",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 20400,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3356:20:120",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3342:34:120",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 20402,
                              "nodeType": "ExpressionStatement",
                              "src": "3342:34:120"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20412,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20354,
                        "src": "3460:9:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 20413,
                        "name": "valueToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20360,
                        "src": "3471:11:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 20408,
                              "name": "erc677token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20352,
                              "src": "3440:11:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ERC677_$1469_$",
                                "typeString": "function () view returns (contract ERC677)"
                              }
                            },
                            "id": 20409,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3440:13:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC677_$1469",
                              "typeString": "contract ERC677"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC677_$1469",
                              "typeString": "contract ERC677"
                            }
                          ],
                          "id": 20407,
                          "name": "IBurnableMintableERC677Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1677,
                          "src": "3411:28:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBurnableMintableERC677Token_$1677_$",
                            "typeString": "type(contract IBurnableMintableERC677Token)"
                          }
                        },
                        "id": 20410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3411:43:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBurnableMintableERC677Token_$1677",
                          "typeString": "contract IBurnableMintableERC677Token"
                        }
                      },
                      "id": 20411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1664,
                      "src": "3411:48:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 20414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3411:72:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 20415,
                  "nodeType": "ExpressionStatement",
                  "src": "3411:72:120"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20417,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20354,
                        "src": "3512:9:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 20418,
                        "name": "valueToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20360,
                        "src": "3523:11:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 20419,
                        "name": "_messageId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20366,
                        "src": "3536:10:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 20416,
                      "name": "TokensBridged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16056,
                      "src": "3498:13:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,uint256,bytes32)"
                      }
                    },
                    "id": 20420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3498:49:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20421,
                  "nodeType": "EmitStatement",
                  "src": "3493:54:120"
                }
              ]
            },
            "documentation": "@dev Mint the amount of tokens that were bridged from the other network.\nIf configured, it calculates, subtract and distribute the fees among the reward accounts.\n@param _receiver address that will receive the tokens\n@param _value amount of tokens to be received",
            "id": 20423,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "executeActionOnBridgedTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20357,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20354,
                  "name": "_receiver",
                  "nodeType": "VariableDeclaration",
                  "scope": 20423,
                  "src": "2929:17:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20353,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2929:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20356,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 20423,
                  "src": "2948:14:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20355,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2948:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2928:35:120"
            },
            "payable": false,
            "returnParameters": {
              "id": 20358,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2973:0:120"
            },
            "scope": 20651,
            "src": "2891:663:120",
            "stateMutability": "nonpayable",
            "superFunction": 16253,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 20439,
              "nodeType": "Block",
              "src": "3860:84:120",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20435,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20425,
                        "src": "3919:9:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 20436,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20427,
                        "src": "3930:6:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 20431,
                              "name": "erc677token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20352,
                              "src": "3899:11:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ERC677_$1469_$",
                                "typeString": "function () view returns (contract ERC677)"
                              }
                            },
                            "id": 20432,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3899:13:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC677_$1469",
                              "typeString": "contract ERC677"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC677_$1469",
                              "typeString": "contract ERC677"
                            }
                          ],
                          "id": 20430,
                          "name": "IBurnableMintableERC677Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1677,
                          "src": "3870:28:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBurnableMintableERC677Token_$1677_$",
                            "typeString": "type(contract IBurnableMintableERC677Token)"
                          }
                        },
                        "id": 20433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3870:43:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBurnableMintableERC677Token_$1677",
                          "typeString": "contract IBurnableMintableERC677Token"
                        }
                      },
                      "id": 20434,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1664,
                      "src": "3870:48:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 20437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3870:67:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 20438,
                  "nodeType": "ExpressionStatement",
                  "src": "3870:67:120"
                }
              ]
            },
            "documentation": "@dev Mint back the amount of tokens that were bridged to the other network but failed.\n@param _receiver address that will receive the tokens\n@param _value amount of tokens to be received",
            "id": 20440,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "executeActionOnFixedTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20428,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20425,
                  "name": "_receiver",
                  "nodeType": "VariableDeclaration",
                  "scope": 20440,
                  "src": "3816:17:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20424,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3816:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20427,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 20440,
                  "src": "3835:14:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20426,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3835:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3815:35:120"
            },
            "payable": false,
            "returnParameters": {
              "id": 20429,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3860:0:120"
            },
            "scope": 20651,
            "src": "3780:164:120",
            "stateMutability": "nonpayable",
            "superFunction": 16260,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 20504,
              "nodeType": "Block",
              "src": "4413:625:120",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4655:7:120",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 20448,
                            "name": "lock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15336,
                            "src": "4656:4:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
                              "typeString": "function () returns (bool)"
                            }
                          },
                          "id": 20449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4656:6:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 20447,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        30716,
                        30717
                      ],
                      "referencedDeclaration": 30716,
                      "src": "4647:7:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 20451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4647:16:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20452,
                  "nodeType": "ExpressionStatement",
                  "src": "4647:16:120"
                },
                {
                  "assignments": [
                    20454
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 20454,
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "scope": 20505,
                      "src": "4673:12:120",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC677_$1469",
                        "typeString": "contract ERC677"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 20453,
                        "name": "ERC677",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1469,
                        "src": "4673:6:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC677_$1469",
                          "typeString": "contract ERC677"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 20457,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 20455,
                      "name": "erc677token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20352,
                      "src": "4688:11:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ERC677_$1469_$",
                        "typeString": "function () view returns (contract ERC677)"
                      }
                    },
                    "id": 20456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4688:13:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC677_$1469",
                      "typeString": "contract ERC677"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4673:28:120"
                },
                {
                  "assignments": [
                    20459
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 20459,
                      "name": "to",
                      "nodeType": "VariableDeclaration",
                      "scope": 20505,
                      "src": "4711:10:120",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 20458,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4711:7:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 20463,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20461,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31044,
                        "src": "4732:4:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ForeignAMBNativeToErc20_$20651",
                          "typeString": "contract ForeignAMBNativeToErc20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ForeignAMBNativeToErc20_$20651",
                          "typeString": "contract ForeignAMBNativeToErc20"
                        }
                      ],
                      "id": 20460,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4724:7:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 20462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4724:13:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4711:26:120"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 20466,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20444,
                            "src": "4767:6:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 20465,
                          "name": "withinLimit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12544,
                          "src": "4755:11:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 20467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4755:19:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 20464,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        30716,
                        30717
                      ],
                      "referencedDeclaration": 30716,
                      "src": "4747:7:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 20468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4747:28:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20469,
                  "nodeType": "ExpressionStatement",
                  "src": "4747:28:120"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 20471,
                          "name": "getCurrentDay",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12582,
                          "src": "4805:13:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 20472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4805:15:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 20473,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20444,
                        "src": "4822:6:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 20470,
                      "name": "addTotalSpentPerDay",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12607,
                      "src": "4785:19:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 20474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4785:44:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20475,
                  "nodeType": "ExpressionStatement",
                  "src": "4785:44:120"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 20477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4848:4:120",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 20476,
                      "name": "setLock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15348,
                      "src": "4840:7:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 20478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4840:13:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20479,
                  "nodeType": "ExpressionStatement",
                  "src": "4840:13:120"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 20483,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30713,
                          "src": "4882:3:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 20484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4882:10:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 20485,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20459,
                        "src": "4894:2:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 20486,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20444,
                        "src": "4898:6:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 20480,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20454,
                        "src": "4863:5:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC677_$1469",
                          "typeString": "contract ERC677"
                        }
                      },
                      "id": 20482,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30295,
                      "src": "4863:18:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 20487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4863:42:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 20488,
                  "nodeType": "ExpressionStatement",
                  "src": "4863:42:120"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 20490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4923:5:120",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 20489,
                      "name": "setLock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15348,
                      "src": "4915:7:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 20491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4915:14:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20492,
                  "nodeType": "ExpressionStatement",
                  "src": "4915:14:120"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20494,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20454,
                        "src": "4976:5:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC677_$1469",
                          "typeString": "contract ERC677"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 20495,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30713,
                          "src": "4983:3:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 20496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4983:10:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 20497,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20444,
                        "src": "4995:6:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 20500,
                            "name": "_receiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20442,
                            "src": "5020:9:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 20498,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30700,
                            "src": "5003:3:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 20499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5003:16:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 20501,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5003:27:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC677_$1469",
                          "typeString": "contract ERC677"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 20493,
                      "name": "bridgeSpecificActionsOnTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        20590
                      ],
                      "referencedDeclaration": 20590,
                      "src": "4939:36:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC677_$1469_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (contract ERC677,address,uint256,bytes memory)"
                      }
                    },
                    "id": 20502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4939:92:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20503,
                  "nodeType": "ExpressionStatement",
                  "src": "4939:92:120"
                }
              ]
            },
            "documentation": "@dev It will initiate the bridge operation that will burn the amount of tokens transferred and unlock the native tokens on\nthe other network. The user should first call Approve method of the ERC677 token.\n@param _receiver address that will receive the native tokens on the other network.\n@param _value amount of tokens to be transferred to the other network.",
            "id": 20505,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "relayTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20442,
                  "name": "_receiver",
                  "nodeType": "VariableDeclaration",
                  "scope": 20505,
                  "src": "4369:17:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20441,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4369:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20444,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 20505,
                  "src": "4388:14:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20443,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4388:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4368:35:120"
            },
            "payable": false,
            "returnParameters": {
              "id": 20446,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4413:0:120"
            },
            "scope": 20651,
            "src": "4348:690:120",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 20556,
              "nodeType": "Block",
              "src": "5679:321:120",
              "statements": [
                {
                  "assignments": [
                    20517
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 20517,
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "scope": 20557,
                      "src": "5689:12:120",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC677_$1469",
                        "typeString": "contract ERC677"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 20516,
                        "name": "ERC677",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1469,
                        "src": "5689:6:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC677_$1469",
                          "typeString": "contract ERC677"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 20520,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 20518,
                      "name": "erc677token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20352,
                      "src": "5704:11:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ERC677_$1469_$",
                        "typeString": "function () view returns (contract ERC677)"
                      }
                    },
                    "id": 20519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5704:13:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC677_$1469",
                      "typeString": "contract ERC677"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5689:28:120"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 20527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 20522,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30713,
                            "src": "5735:3:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 20523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5735:10:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 20525,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20517,
                              "src": "5757:5:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC677_$1469",
                                "typeString": "contract ERC677"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC677_$1469",
                                "typeString": "contract ERC677"
                              }
                            ],
                            "id": 20524,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5749:7:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 20526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5749:14:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5735:28:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 20521,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        30716,
                        30717
                      ],
                      "referencedDeclaration": 30716,
                      "src": "5727:7:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 20528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5727:37:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20529,
                  "nodeType": "ExpressionStatement",
                  "src": "5727:37:120"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 20532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "5778:7:120",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 20530,
                        "name": "lock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15336,
                        "src": "5779:4:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
                          "typeString": "function () returns (bool)"
                        }
                      },
                      "id": 20531,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5779:6:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 20546,
                  "nodeType": "IfStatement",
                  "src": "5774:124:120",
                  "trueBody": {
                    "id": 20545,
                    "nodeType": "Block",
                    "src": "5787:111:120",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 20535,
                                  "name": "_value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 20509,
                                  "src": "5821:6:120",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 20534,
                                "name": "withinLimit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12544,
                                "src": "5809:11:120",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (uint256) view returns (bool)"
                                }
                              },
                              "id": 20536,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5809:19:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 20533,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              30716,
                              30717
                            ],
                            "referencedDeclaration": 30716,
                            "src": "5801:7:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 20537,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5801:28:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 20538,
                        "nodeType": "ExpressionStatement",
                        "src": "5801:28:120"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 20540,
                                "name": "getCurrentDay",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12582,
                                "src": "5863:13:120",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 20541,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5863:15:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 20542,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20509,
                              "src": "5880:6:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 20539,
                            "name": "addTotalSpentPerDay",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12607,
                            "src": "5843:19:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 20543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5843:44:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 20544,
                        "nodeType": "ExpressionStatement",
                        "src": "5843:44:120"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20548,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20517,
                        "src": "5944:5:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC677_$1469",
                          "typeString": "contract ERC677"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 20549,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20507,
                        "src": "5951:5:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 20550,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20509,
                        "src": "5958:6:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 20551,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20511,
                        "src": "5966:5:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC677_$1469",
                          "typeString": "contract ERC677"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 20547,
                      "name": "bridgeSpecificActionsOnTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        20590
                      ],
                      "referencedDeclaration": 20590,
                      "src": "5907:36:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC677_$1469_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (contract ERC677,address,uint256,bytes memory)"
                      }
                    },
                    "id": 20552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5907:65:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20553,
                  "nodeType": "ExpressionStatement",
                  "src": "5907:65:120"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 20554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5989:4:120",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 20515,
                  "id": 20555,
                  "nodeType": "Return",
                  "src": "5982:11:120"
                }
              ]
            },
            "documentation": "@dev This method is called when transferAndCall is used from ERC677 to transfer the tokens to this contract.\nIt will initiate the bridge operation that will burn the amount of tokens transferred and unlock the native tokens on\nthe other network.\n@param _from address that transferred the tokens.\n@param _value amount of tokens transferred.\n@param _data this parameter could contain the address of an alternative receiver of the tokens on the other network,\notherwise it will be empty.",
            "id": 20557,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "onTokenTransfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20512,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20507,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 20557,
                  "src": "5611:13:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20506,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5611:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20509,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 20557,
                  "src": "5626:14:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20508,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5626:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20511,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 20557,
                  "src": "5642:11:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 20510,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5642:5:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5610:44:120"
            },
            "payable": false,
            "returnParameters": {
              "id": 20515,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20514,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 20557,
                  "src": "5673:4:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 20513,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5673:4:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5672:6:120"
            },
            "scope": 20651,
            "src": "5586:414:120",
            "stateMutability": "nonpayable",
            "superFunction": 10078,
            "visibility": "external"
          },
          {
            "body": {
              "id": 20589,
              "nodeType": "Block",
              "src": "6564:173:120",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 20570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "6578:7:120",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 20568,
                        "name": "lock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15336,
                        "src": "6579:4:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
                          "typeString": "function () returns (bool)"
                        }
                      },
                      "id": 20569,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6579:6:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 20588,
                  "nodeType": "IfStatement",
                  "src": "6574:157:120",
                  "trueBody": {
                    "id": 20587,
                    "nodeType": "Block",
                    "src": "6587:144:120",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 20575,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20563,
                              "src": "6643:6:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 20572,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 20559,
                                  "src": "6630:6:120",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC677_$1469",
                                    "typeString": "contract ERC677"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC677_$1469",
                                    "typeString": "contract ERC677"
                                  }
                                ],
                                "id": 20571,
                                "name": "IBurnableMintableERC677Token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1677,
                                "src": "6601:28:120",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IBurnableMintableERC677Token_$1677_$",
                                  "typeString": "type(contract IBurnableMintableERC677Token)"
                                }
                              },
                              "id": 20573,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6601:36:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IBurnableMintableERC677Token_$1677",
                                "typeString": "contract IBurnableMintableERC677Token"
                              }
                            },
                            "id": 20574,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "burn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1669,
                            "src": "6601:41:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 20576,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6601:49:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 20577,
                        "nodeType": "ExpressionStatement",
                        "src": "6601:49:120"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 20579,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20561,
                              "src": "6676:5:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 20581,
                                  "name": "_from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 20561,
                                  "src": "6698:5:120",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 20582,
                                  "name": "_data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 20565,
                                  "src": "6705:5:120",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 20580,
                                "name": "chooseReceiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13948,
                                "src": "6683:14:120",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$returns$_t_address_$",
                                  "typeString": "function (address,bytes memory) view returns (address)"
                                }
                              },
                              "id": 20583,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6683:28:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 20584,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20563,
                              "src": "6713:6:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 20578,
                            "name": "passMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16103,
                            "src": "6664:11:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 20585,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6664:56:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 20586,
                        "nodeType": "ExpressionStatement",
                        "src": "6664:56:120"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev Burns the amount of tokens and makes the request to unlock the native tokens on the other network.\n@param _token address of the ERC677 token.\n@param _from address that transferred the tokens.\n@param _value amount of tokens transferred.\n@param _data this parameter could contain the address of an alternative receiver of the native tokens on the other\nnetwork, otherwise it will be empty.",
            "id": 20590,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "bridgeSpecificActionsOnTokenTransfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20559,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 20590,
                  "src": "6496:13:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC677_$1469",
                    "typeString": "contract ERC677"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 20558,
                    "name": "ERC677",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1469,
                    "src": "6496:6:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC677_$1469",
                      "typeString": "contract ERC677"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20561,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 20590,
                  "src": "6511:13:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20560,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6511:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20563,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 20590,
                  "src": "6526:14:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20562,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6526:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20565,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 20590,
                  "src": "6542:11:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 20564,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6542:5:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6495:59:120"
            },
            "payable": false,
            "returnParameters": {
              "id": 20567,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6564:0:120"
            },
            "scope": 20651,
            "src": "6450:287:120",
            "stateMutability": "nonpayable",
            "superFunction": 10089,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 20606,
              "nodeType": "Block",
              "src": "7018:84:120",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20602,
                        "name": "_feeManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20592,
                        "src": "7077:11:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 20603,
                        "name": "_fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20594,
                        "src": "7090:4:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 20598,
                              "name": "erc677token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20352,
                              "src": "7057:11:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ERC677_$1469_$",
                                "typeString": "function () view returns (contract ERC677)"
                              }
                            },
                            "id": 20599,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7057:13:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC677_$1469",
                              "typeString": "contract ERC677"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC677_$1469",
                              "typeString": "contract ERC677"
                            }
                          ],
                          "id": 20597,
                          "name": "IBurnableMintableERC677Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1677,
                          "src": "7028:28:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBurnableMintableERC677Token_$1677_$",
                            "typeString": "type(contract IBurnableMintableERC677Token)"
                          }
                        },
                        "id": 20600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7028:43:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBurnableMintableERC677Token_$1677",
                          "typeString": "contract IBurnableMintableERC677Token"
                        }
                      },
                      "id": 20601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1664,
                      "src": "7028:48:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 20604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7028:67:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 20605,
                  "nodeType": "ExpressionStatement",
                  "src": "7028:67:120"
                }
              ]
            },
            "documentation": "@dev Mint the fee amount of tokens to the fee manager contract.\n@param _feeManager address that will receive the minted tokens.\n@param _fee amount of tokens to be minted.",
            "id": 20607,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "onFeeDistribution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20595,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20592,
                  "name": "_feeManager",
                  "nodeType": "VariableDeclaration",
                  "scope": 20607,
                  "src": "6974:19:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20591,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6974:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20594,
                  "name": "_fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 20607,
                  "src": "6995:12:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20593,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6995:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6973:35:120"
            },
            "payable": false,
            "returnParameters": {
              "id": 20596,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7018:0:120"
            },
            "scope": 20651,
            "src": "6947:155:120",
            "stateMutability": "nonpayable",
            "superFunction": 15716,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 20621,
              "nodeType": "Block",
              "src": "7494:253:120",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20617,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20609,
                        "src": "7728:6:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 20618,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20611,
                        "src": "7736:3:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 20616,
                      "name": "claimValues",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14003,
                      "src": "7716:11:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 20619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7716:24:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20620,
                  "nodeType": "ExpressionStatement",
                  "src": "7716:24:120"
                }
              ]
            },
            "documentation": "@dev Allows to transfer any locked token on this contract that is not part of the bridge operations.\n@param _token address of the token, if it is not provided, native tokens will be transferred.\n@param _to address that will receive the locked tokens on this contract.",
            "id": 20622,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 20614,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 20613,
                  "name": "onlyIfUpgradeabilityOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 16408,
                  "src": "7468:25:120",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7468:25:120"
              }
            ],
            "name": "claimTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20612,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20609,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 20622,
                  "src": "7430:14:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20608,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7430:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20611,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 20622,
                  "src": "7446:11:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20610,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7446:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7429:29:120"
            },
            "payable": false,
            "returnParameters": {
              "id": 20615,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7494:0:120"
            },
            "scope": 20651,
            "src": "7409:338:120",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 20640,
              "nodeType": "Block",
              "src": "8119:85:120",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20636,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20624,
                        "src": "8185:6:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 20637,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20626,
                        "src": "8193:3:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 20632,
                              "name": "erc677token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20352,
                              "src": "8158:11:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ERC677_$1469_$",
                                "typeString": "function () view returns (contract ERC677)"
                              }
                            },
                            "id": 20633,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8158:13:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC677_$1469",
                              "typeString": "contract ERC677"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC677_$1469",
                              "typeString": "contract ERC677"
                            }
                          ],
                          "id": 20631,
                          "name": "IBurnableMintableERC677Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1677,
                          "src": "8129:28:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBurnableMintableERC677Token_$1677_$",
                            "typeString": "type(contract IBurnableMintableERC677Token)"
                          }
                        },
                        "id": 20634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8129:43:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBurnableMintableERC677Token_$1677",
                          "typeString": "contract IBurnableMintableERC677Token"
                        }
                      },
                      "id": 20635,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "claimTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1676,
                      "src": "8129:55:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 20638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8129:68:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20639,
                  "nodeType": "ExpressionStatement",
                  "src": "8129:68:120"
                }
              ]
            },
            "documentation": "@dev Allows to transfer any locked token on the ERC677 token contract.\n@param _token address of the token, if it is not provided, native tokens will be transferred.\n@param _to address that will receive the locked tokens on this contract.",
            "id": 20641,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 20629,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 20628,
                  "name": "onlyIfUpgradeabilityOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 16408,
                  "src": "8093:25:120",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "8093:25:120"
              }
            ],
            "name": "claimTokensFromErc677",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20627,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20624,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 20641,
                  "src": "8055:14:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20623,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8055:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20626,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 20641,
                  "src": "8071:11:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20625,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8071:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8054:29:120"
            },
            "payable": false,
            "returnParameters": {
              "id": 20630,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8119:0:120"
            },
            "scope": 20651,
            "src": "8024:180:120",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 20649,
              "nodeType": "Block",
              "src": "8521:53:120",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 20646,
                      "name": "mediatorContractOnOtherSide",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11374,
                      "src": "8538:27:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 20647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8538:29:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 20645,
                  "id": 20648,
                  "nodeType": "Return",
                  "src": "8531:36:120"
                }
              ]
            },
            "documentation": "@dev Tells the address of the mediator contract on the other side, used by chooseReceiver method\nto avoid sending the native tokens to that address.\n@return address of the mediator contract con the other side",
            "id": 20650,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "bridgeContractOnOtherSide",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20642,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8486:2:120"
            },
            "payable": false,
            "returnParameters": {
              "id": 20645,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20644,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 20650,
                  "src": "8512:7:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20643,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8512:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8511:9:120"
            },
            "scope": 20651,
            "src": "8452:122:120",
            "stateMutability": "view",
            "superFunction": 13953,
            "visibility": "internal"
          }
        ],
        "scope": 20652,
        "src": "422:8154:120"
      }
    ],
    "src": "0:8577:120"
  },
  "legacyAST": {
    "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/amb_native_to_erc20/ForeignAMBNativeToErc20.sol",
    "exportedSymbols": {
      "ForeignAMBNativeToErc20": [
        20651
      ]
    },
    "id": 20652,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 20282,
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:120"
      },
      {
        "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/amb_native_to_erc20/BasicAMBNativeToErc20.sol",
        "file": "./BasicAMBNativeToErc20.sol",
        "id": 20283,
        "nodeType": "ImportDirective",
        "scope": 20652,
        "sourceUnit": 20281,
        "src": "25:37:120",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/BaseERC677Bridge.sol",
        "file": "../BaseERC677Bridge.sol",
        "id": 20284,
        "nodeType": "ImportDirective",
        "scope": 20652,
        "sourceUnit": 10091,
        "src": "63:33:120",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/interfaces/IBurnableMintableERC677Token.sol",
        "file": "../../interfaces/IBurnableMintableERC677Token.sol",
        "id": 20285,
        "nodeType": "ImportDirective",
        "scope": 20652,
        "sourceUnit": 1678,
        "src": "97:59:120",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/ReentrancyGuard.sol",
        "file": "../ReentrancyGuard.sol",
        "id": 20286,
        "nodeType": "ImportDirective",
        "scope": 20652,
        "sourceUnit": 15350,
        "src": "157:32:120",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 20287,
              "name": "BasicAMBNativeToErc20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 20280,
              "src": "458:21:120",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BasicAMBNativeToErc20_$20280",
                "typeString": "contract BasicAMBNativeToErc20"
              }
            },
            "id": 20288,
            "nodeType": "InheritanceSpecifier",
            "src": "458:21:120"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 20289,
              "name": "ReentrancyGuard",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15349,
              "src": "481:15:120",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ReentrancyGuard_$15349",
                "typeString": "contract ReentrancyGuard"
              }
            },
            "id": 20290,
            "nodeType": "InheritanceSpecifier",
            "src": "481:15:120"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 20291,
              "name": "BaseERC677Bridge",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10090,
              "src": "498:16:120",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BaseERC677Bridge_$10090",
                "typeString": "contract BaseERC677Bridge"
              }
            },
            "id": 20292,
            "nodeType": "InheritanceSpecifier",
            "src": "498:16:120"
          }
        ],
        "contractDependencies": [
          1500,
          9266,
          10090,
          11468,
          12916,
          13954,
          14052,
          14172,
          14357,
          14798,
          15318,
          15349,
          15717,
          16261,
          16390,
          16409,
          16712,
          20280
        ],
        "contractKind": "contract",
        "documentation": "@title ForeignAMBNativeToErc20\n@dev Foreign mediator implementation for native-to-erc20 bridge intended to work on top of AMB bridge.\nIt is design to be used as implementation contract of EternalStorageProxy contract.",
        "fullyImplemented": true,
        "id": 20651,
        "linearizedBaseContracts": [
          20651,
          10090,
          13954,
          14357,
          1500,
          15349,
          20280,
          15717,
          16261,
          16390,
          12916,
          14172,
          11468,
          15318,
          16712,
          14052,
          16409,
          14798,
          9266
        ],
        "name": "ForeignAMBNativeToErc20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 20342,
              "nodeType": "Block",
              "src": "1981:397:120",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20322,
                        "name": "_bridgeContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20294,
                        "src": "2016:15:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 20323,
                        "name": "_mediatorContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20296,
                        "src": "2045:17:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 20324,
                        "name": "_dailyLimitMaxPerTxMinPerTxArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20300,
                        "src": "2076:32:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$3_calldata_ptr",
                          "typeString": "uint256[3] calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 20325,
                        "name": "_executionDailyLimitExecutionMaxPerTxArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20304,
                        "src": "2122:42:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                          "typeString": "uint256[2] calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 20326,
                        "name": "_requestGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20306,
                        "src": "2178:16:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 20327,
                        "name": "_decimalShift",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20308,
                        "src": "2208:13:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 20328,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20310,
                        "src": "2235:6:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 20329,
                        "name": "_feeManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20314,
                        "src": "2255:11:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$3_calldata_ptr",
                          "typeString": "uint256[3] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                          "typeString": "uint256[2] calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 20321,
                      "name": "_initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20245,
                      "src": "1991:11:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$3_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$_t_int256_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,uint256[3] memory,uint256[2] memory,uint256,int256,address,address)"
                      }
                    },
                    "id": 20330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1991:285:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20331,
                  "nodeType": "ExpressionStatement",
                  "src": "1991:285:120"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20333,
                        "name": "_erc677token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20312,
                        "src": "2301:12:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 20332,
                      "name": "setErc677token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10031,
                      "src": "2286:14:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 20334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2286:28:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20335,
                  "nodeType": "ExpressionStatement",
                  "src": "2286:28:120"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 20336,
                      "name": "setInitialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14787,
                      "src": "2324:13:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 20337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2324:15:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20338,
                  "nodeType": "ExpressionStatement",
                  "src": "2324:15:120"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 20339,
                      "name": "isInitialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14797,
                      "src": "2356:13:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                        "typeString": "function () view returns (bool)"
                      }
                    },
                    "id": 20340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2356:15:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 20320,
                  "id": 20341,
                  "nodeType": "Return",
                  "src": "2349:22:120"
                }
              ]
            },
            "documentation": "@dev Stores the initial parameters of the mediator.\n@param _bridgeContract the address of the AMB bridge contract.\n@param _mediatorContract the address of the mediator contract on the other network.\n@param _dailyLimitMaxPerTxMinPerTxArray array with limit values for the assets to be bridged to the other network.\n  [ 0 = dailyLimit, 1 = maxPerTx, 2 = minPerTx ]\n@param _executionDailyLimitExecutionMaxPerTxArray array with limit values for the assets bridged from the other network.\n  [ 0 = executionDailyLimit, 1 = executionMaxPerTx ]\n@param _requestGasLimit the gas limit for the message execution.\n@param _decimalShift number of decimals shift required to adjust the amount of tokens bridged.\n@param _owner address of the owner of the mediator contract\n@param _erc677token address of the erc677 token contract\n@param _feeManager address of the fee manager contract",
            "id": 20343,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 20317,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 20316,
                  "name": "onlyRelevantSender",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 15266,
                  "src": "1947:18:120",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1947:18:120"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20315,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20294,
                  "name": "_bridgeContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 20343,
                  "src": "1506:23:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20293,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1506:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20296,
                  "name": "_mediatorContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 20343,
                  "src": "1539:25:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20295,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1539:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20300,
                  "name": "_dailyLimitMaxPerTxMinPerTxArray",
                  "nodeType": "VariableDeclaration",
                  "scope": 20343,
                  "src": "1574:43:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$3_calldata_ptr",
                    "typeString": "uint256[3]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 20297,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1574:7:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 20299,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "33",
                      "id": 20298,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1582:1:120",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "3"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1574:10:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
                      "typeString": "uint256[3]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20304,
                  "name": "_executionDailyLimitExecutionMaxPerTxArray",
                  "nodeType": "VariableDeclaration",
                  "scope": 20343,
                  "src": "1677:53:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 20301,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1677:7:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 20303,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 20302,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1685:1:120",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1677:10:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20306,
                  "name": "_requestGasLimit",
                  "nodeType": "VariableDeclaration",
                  "scope": 20343,
                  "src": "1794:24:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20305,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1794:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20308,
                  "name": "_decimalShift",
                  "nodeType": "VariableDeclaration",
                  "scope": 20343,
                  "src": "1828:20:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 20307,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1828:6:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20310,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 20343,
                  "src": "1858:14:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20309,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1858:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20312,
                  "name": "_erc677token",
                  "nodeType": "VariableDeclaration",
                  "scope": 20343,
                  "src": "1882:20:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20311,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1882:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20314,
                  "name": "_feeManager",
                  "nodeType": "VariableDeclaration",
                  "scope": 20343,
                  "src": "1912:19:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20313,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1912:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1496:441:120"
            },
            "payable": false,
            "returnParameters": {
              "id": 20320,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20319,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 20343,
                  "src": "1975:4:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 20318,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1975:4:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1974:6:120"
            },
            "scope": 20651,
            "src": "1477:901:120",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 20351,
              "nodeType": "Block",
              "src": "2545:38:120",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 20348,
                      "name": "_erc677token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10012,
                      "src": "2562:12:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ERC677_$1469_$",
                        "typeString": "function () view returns (contract ERC677)"
                      }
                    },
                    "id": 20349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2562:14:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC677_$1469",
                      "typeString": "contract ERC677"
                    }
                  },
                  "functionReturnParameters": 20347,
                  "id": 20350,
                  "nodeType": "Return",
                  "src": "2555:21:120"
                }
              ]
            },
            "documentation": "@dev Public getter for token contract.\n@return address of the used token contract",
            "id": 20352,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "erc677token",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20344,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2513:2:120"
            },
            "payable": false,
            "returnParameters": {
              "id": 20347,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20346,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 20352,
                  "src": "2537:6:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC677_$1469",
                    "typeString": "contract ERC677"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 20345,
                    "name": "ERC677",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1469,
                    "src": "2537:6:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC677_$1469",
                      "typeString": "contract ERC677"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2536:8:120"
            },
            "scope": 20651,
            "src": "2493:90:120",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 20422,
              "nodeType": "Block",
              "src": "2973:581:120",
              "statements": [
                {
                  "assignments": [
                    20360
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 20360,
                      "name": "valueToMint",
                      "nodeType": "VariableDeclaration",
                      "scope": 20423,
                      "src": "2983:19:120",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 20359,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2983:7:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 20364,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20362,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20356,
                        "src": "3019:6:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 20361,
                      "name": "_unshiftValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14116,
                      "src": "3005:13:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 20363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3005:21:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2983:43:120"
                },
                {
                  "assignments": [
                    20366
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 20366,
                      "name": "_messageId",
                      "nodeType": "VariableDeclaration",
                      "scope": 20423,
                      "src": "3037:18:120",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 20365,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3037:7:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 20369,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 20367,
                      "name": "messageId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11456,
                      "src": "3058:9:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
                        "typeString": "function () view returns (bytes32)"
                      }
                    },
                    "id": 20368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3058:11:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3037:32:120"
                },
                {
                  "assignments": [
                    20371
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 20371,
                      "name": "feeManager",
                      "nodeType": "VariableDeclaration",
                      "scope": 20423,
                      "src": "3079:30:120",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMediatorFeeManager_$1788",
                        "typeString": "contract IMediatorFeeManager"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 20370,
                        "name": "IMediatorFeeManager",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1788,
                        "src": "3079:19:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMediatorFeeManager_$1788",
                          "typeString": "contract IMediatorFeeManager"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 20374,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 20372,
                      "name": "feeManagerContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15675,
                      "src": "3112:18:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IMediatorFeeManager_$1788_$",
                        "typeString": "function () view returns (contract IMediatorFeeManager)"
                      }
                    },
                    "id": 20373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3112:20:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMediatorFeeManager_$1788",
                      "typeString": "contract IMediatorFeeManager"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3079:53:120"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 20379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 20375,
                      "name": "feeManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20371,
                      "src": "3146:10:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMediatorFeeManager_$1788",
                        "typeString": "contract IMediatorFeeManager"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 20377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3168:1:120",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 20376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3160:7:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 20378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3160:10:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3146:24:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 20406,
                  "nodeType": "IfStatement",
                  "src": "3142:259:120",
                  "trueBody": {
                    "id": 20405,
                    "nodeType": "Block",
                    "src": "3172:229:120",
                    "statements": [
                      {
                        "assignments": [
                          20381
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 20381,
                            "name": "fee",
                            "nodeType": "VariableDeclaration",
                            "scope": 20423,
                            "src": "3186:11:120",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 20380,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3186:7:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 20386,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 20384,
                              "name": "valueToMint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20360,
                              "src": "3224:11:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 20382,
                              "name": "feeManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20371,
                              "src": "3200:10:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IMediatorFeeManager_$1788",
                                "typeString": "contract IMediatorFeeManager"
                              }
                            },
                            "id": 20383,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "calculateFee",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1787,
                            "src": "3200:23:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 20385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3200:36:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3186:50:120"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 20389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 20387,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20381,
                            "src": "3254:3:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 20388,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3261:1:120",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3254:8:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 20404,
                        "nodeType": "IfStatement",
                        "src": "3250:141:120",
                        "trueBody": {
                          "id": 20403,
                          "nodeType": "Block",
                          "src": "3264:127:120",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 20391,
                                    "name": "feeManager",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 20371,
                                    "src": "3296:10:120",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IMediatorFeeManager_$1788",
                                      "typeString": "contract IMediatorFeeManager"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 20392,
                                    "name": "fee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 20381,
                                    "src": "3308:3:120",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 20393,
                                    "name": "_messageId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 20366,
                                    "src": "3313:10:120",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IMediatorFeeManager_$1788",
                                      "typeString": "contract IMediatorFeeManager"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 20390,
                                  "name": "distributeFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 15709,
                                  "src": "3282:13:120",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IMediatorFeeManager_$1788_$_t_uint256_$_t_bytes32_$returns$__$",
                                    "typeString": "function (contract IMediatorFeeManager,uint256,bytes32)"
                                  }
                                },
                                "id": 20394,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3282:42:120",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 20395,
                              "nodeType": "ExpressionStatement",
                              "src": "3282:42:120"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 20401,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 20396,
                                  "name": "valueToMint",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 20360,
                                  "src": "3342:11:120",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 20399,
                                      "name": "fee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 20381,
                                      "src": "3372:3:120",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 20397,
                                      "name": "valueToMint",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 20360,
                                      "src": "3356:11:120",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 20398,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sub",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 29958,
                                    "src": "3356:15:120",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 20400,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3356:20:120",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3342:34:120",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 20402,
                              "nodeType": "ExpressionStatement",
                              "src": "3342:34:120"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20412,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20354,
                        "src": "3460:9:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 20413,
                        "name": "valueToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20360,
                        "src": "3471:11:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 20408,
                              "name": "erc677token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20352,
                              "src": "3440:11:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ERC677_$1469_$",
                                "typeString": "function () view returns (contract ERC677)"
                              }
                            },
                            "id": 20409,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3440:13:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC677_$1469",
                              "typeString": "contract ERC677"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC677_$1469",
                              "typeString": "contract ERC677"
                            }
                          ],
                          "id": 20407,
                          "name": "IBurnableMintableERC677Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1677,
                          "src": "3411:28:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBurnableMintableERC677Token_$1677_$",
                            "typeString": "type(contract IBurnableMintableERC677Token)"
                          }
                        },
                        "id": 20410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3411:43:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBurnableMintableERC677Token_$1677",
                          "typeString": "contract IBurnableMintableERC677Token"
                        }
                      },
                      "id": 20411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1664,
                      "src": "3411:48:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 20414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3411:72:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 20415,
                  "nodeType": "ExpressionStatement",
                  "src": "3411:72:120"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20417,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20354,
                        "src": "3512:9:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 20418,
                        "name": "valueToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20360,
                        "src": "3523:11:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 20419,
                        "name": "_messageId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20366,
                        "src": "3536:10:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 20416,
                      "name": "TokensBridged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16056,
                      "src": "3498:13:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,uint256,bytes32)"
                      }
                    },
                    "id": 20420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3498:49:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20421,
                  "nodeType": "EmitStatement",
                  "src": "3493:54:120"
                }
              ]
            },
            "documentation": "@dev Mint the amount of tokens that were bridged from the other network.\nIf configured, it calculates, subtract and distribute the fees among the reward accounts.\n@param _receiver address that will receive the tokens\n@param _value amount of tokens to be received",
            "id": 20423,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "executeActionOnBridgedTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20357,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20354,
                  "name": "_receiver",
                  "nodeType": "VariableDeclaration",
                  "scope": 20423,
                  "src": "2929:17:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20353,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2929:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20356,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 20423,
                  "src": "2948:14:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20355,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2948:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2928:35:120"
            },
            "payable": false,
            "returnParameters": {
              "id": 20358,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2973:0:120"
            },
            "scope": 20651,
            "src": "2891:663:120",
            "stateMutability": "nonpayable",
            "superFunction": 16253,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 20439,
              "nodeType": "Block",
              "src": "3860:84:120",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20435,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20425,
                        "src": "3919:9:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 20436,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20427,
                        "src": "3930:6:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 20431,
                              "name": "erc677token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20352,
                              "src": "3899:11:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ERC677_$1469_$",
                                "typeString": "function () view returns (contract ERC677)"
                              }
                            },
                            "id": 20432,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3899:13:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC677_$1469",
                              "typeString": "contract ERC677"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC677_$1469",
                              "typeString": "contract ERC677"
                            }
                          ],
                          "id": 20430,
                          "name": "IBurnableMintableERC677Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1677,
                          "src": "3870:28:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBurnableMintableERC677Token_$1677_$",
                            "typeString": "type(contract IBurnableMintableERC677Token)"
                          }
                        },
                        "id": 20433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3870:43:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBurnableMintableERC677Token_$1677",
                          "typeString": "contract IBurnableMintableERC677Token"
                        }
                      },
                      "id": 20434,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1664,
                      "src": "3870:48:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 20437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3870:67:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 20438,
                  "nodeType": "ExpressionStatement",
                  "src": "3870:67:120"
                }
              ]
            },
            "documentation": "@dev Mint back the amount of tokens that were bridged to the other network but failed.\n@param _receiver address that will receive the tokens\n@param _value amount of tokens to be received",
            "id": 20440,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "executeActionOnFixedTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20428,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20425,
                  "name": "_receiver",
                  "nodeType": "VariableDeclaration",
                  "scope": 20440,
                  "src": "3816:17:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20424,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3816:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20427,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 20440,
                  "src": "3835:14:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20426,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3835:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3815:35:120"
            },
            "payable": false,
            "returnParameters": {
              "id": 20429,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3860:0:120"
            },
            "scope": 20651,
            "src": "3780:164:120",
            "stateMutability": "nonpayable",
            "superFunction": 16260,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 20504,
              "nodeType": "Block",
              "src": "4413:625:120",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4655:7:120",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 20448,
                            "name": "lock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15336,
                            "src": "4656:4:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
                              "typeString": "function () returns (bool)"
                            }
                          },
                          "id": 20449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4656:6:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 20447,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        30716,
                        30717
                      ],
                      "referencedDeclaration": 30716,
                      "src": "4647:7:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 20451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4647:16:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20452,
                  "nodeType": "ExpressionStatement",
                  "src": "4647:16:120"
                },
                {
                  "assignments": [
                    20454
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 20454,
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "scope": 20505,
                      "src": "4673:12:120",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC677_$1469",
                        "typeString": "contract ERC677"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 20453,
                        "name": "ERC677",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1469,
                        "src": "4673:6:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC677_$1469",
                          "typeString": "contract ERC677"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 20457,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 20455,
                      "name": "erc677token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20352,
                      "src": "4688:11:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ERC677_$1469_$",
                        "typeString": "function () view returns (contract ERC677)"
                      }
                    },
                    "id": 20456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4688:13:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC677_$1469",
                      "typeString": "contract ERC677"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4673:28:120"
                },
                {
                  "assignments": [
                    20459
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 20459,
                      "name": "to",
                      "nodeType": "VariableDeclaration",
                      "scope": 20505,
                      "src": "4711:10:120",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 20458,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4711:7:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 20463,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20461,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31044,
                        "src": "4732:4:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ForeignAMBNativeToErc20_$20651",
                          "typeString": "contract ForeignAMBNativeToErc20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ForeignAMBNativeToErc20_$20651",
                          "typeString": "contract ForeignAMBNativeToErc20"
                        }
                      ],
                      "id": 20460,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4724:7:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 20462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4724:13:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4711:26:120"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 20466,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20444,
                            "src": "4767:6:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 20465,
                          "name": "withinLimit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12544,
                          "src": "4755:11:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 20467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4755:19:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 20464,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        30716,
                        30717
                      ],
                      "referencedDeclaration": 30716,
                      "src": "4747:7:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 20468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4747:28:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20469,
                  "nodeType": "ExpressionStatement",
                  "src": "4747:28:120"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 20471,
                          "name": "getCurrentDay",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12582,
                          "src": "4805:13:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 20472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4805:15:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 20473,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20444,
                        "src": "4822:6:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 20470,
                      "name": "addTotalSpentPerDay",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12607,
                      "src": "4785:19:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 20474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4785:44:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20475,
                  "nodeType": "ExpressionStatement",
                  "src": "4785:44:120"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 20477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4848:4:120",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 20476,
                      "name": "setLock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15348,
                      "src": "4840:7:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 20478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4840:13:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20479,
                  "nodeType": "ExpressionStatement",
                  "src": "4840:13:120"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 20483,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30713,
                          "src": "4882:3:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 20484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4882:10:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 20485,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20459,
                        "src": "4894:2:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 20486,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20444,
                        "src": "4898:6:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 20480,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20454,
                        "src": "4863:5:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC677_$1469",
                          "typeString": "contract ERC677"
                        }
                      },
                      "id": 20482,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30295,
                      "src": "4863:18:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 20487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4863:42:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 20488,
                  "nodeType": "ExpressionStatement",
                  "src": "4863:42:120"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 20490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4923:5:120",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 20489,
                      "name": "setLock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15348,
                      "src": "4915:7:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 20491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4915:14:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20492,
                  "nodeType": "ExpressionStatement",
                  "src": "4915:14:120"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20494,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20454,
                        "src": "4976:5:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC677_$1469",
                          "typeString": "contract ERC677"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 20495,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30713,
                          "src": "4983:3:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 20496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4983:10:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 20497,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20444,
                        "src": "4995:6:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 20500,
                            "name": "_receiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20442,
                            "src": "5020:9:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 20498,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30700,
                            "src": "5003:3:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 20499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5003:16:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 20501,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5003:27:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC677_$1469",
                          "typeString": "contract ERC677"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 20493,
                      "name": "bridgeSpecificActionsOnTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        20590
                      ],
                      "referencedDeclaration": 20590,
                      "src": "4939:36:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC677_$1469_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (contract ERC677,address,uint256,bytes memory)"
                      }
                    },
                    "id": 20502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4939:92:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20503,
                  "nodeType": "ExpressionStatement",
                  "src": "4939:92:120"
                }
              ]
            },
            "documentation": "@dev It will initiate the bridge operation that will burn the amount of tokens transferred and unlock the native tokens on\nthe other network. The user should first call Approve method of the ERC677 token.\n@param _receiver address that will receive the native tokens on the other network.\n@param _value amount of tokens to be transferred to the other network.",
            "id": 20505,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "relayTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20442,
                  "name": "_receiver",
                  "nodeType": "VariableDeclaration",
                  "scope": 20505,
                  "src": "4369:17:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20441,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4369:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20444,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 20505,
                  "src": "4388:14:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20443,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4388:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4368:35:120"
            },
            "payable": false,
            "returnParameters": {
              "id": 20446,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4413:0:120"
            },
            "scope": 20651,
            "src": "4348:690:120",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 20556,
              "nodeType": "Block",
              "src": "5679:321:120",
              "statements": [
                {
                  "assignments": [
                    20517
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 20517,
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "scope": 20557,
                      "src": "5689:12:120",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC677_$1469",
                        "typeString": "contract ERC677"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 20516,
                        "name": "ERC677",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1469,
                        "src": "5689:6:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC677_$1469",
                          "typeString": "contract ERC677"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 20520,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 20518,
                      "name": "erc677token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20352,
                      "src": "5704:11:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ERC677_$1469_$",
                        "typeString": "function () view returns (contract ERC677)"
                      }
                    },
                    "id": 20519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5704:13:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC677_$1469",
                      "typeString": "contract ERC677"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5689:28:120"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 20527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 20522,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30713,
                            "src": "5735:3:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 20523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5735:10:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 20525,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20517,
                              "src": "5757:5:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC677_$1469",
                                "typeString": "contract ERC677"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC677_$1469",
                                "typeString": "contract ERC677"
                              }
                            ],
                            "id": 20524,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5749:7:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 20526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5749:14:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5735:28:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 20521,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        30716,
                        30717
                      ],
                      "referencedDeclaration": 30716,
                      "src": "5727:7:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 20528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5727:37:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20529,
                  "nodeType": "ExpressionStatement",
                  "src": "5727:37:120"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 20532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "5778:7:120",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 20530,
                        "name": "lock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15336,
                        "src": "5779:4:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
                          "typeString": "function () returns (bool)"
                        }
                      },
                      "id": 20531,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5779:6:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 20546,
                  "nodeType": "IfStatement",
                  "src": "5774:124:120",
                  "trueBody": {
                    "id": 20545,
                    "nodeType": "Block",
                    "src": "5787:111:120",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 20535,
                                  "name": "_value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 20509,
                                  "src": "5821:6:120",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 20534,
                                "name": "withinLimit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12544,
                                "src": "5809:11:120",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (uint256) view returns (bool)"
                                }
                              },
                              "id": 20536,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5809:19:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 20533,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              30716,
                              30717
                            ],
                            "referencedDeclaration": 30716,
                            "src": "5801:7:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 20537,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5801:28:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 20538,
                        "nodeType": "ExpressionStatement",
                        "src": "5801:28:120"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 20540,
                                "name": "getCurrentDay",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12582,
                                "src": "5863:13:120",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 20541,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5863:15:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 20542,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20509,
                              "src": "5880:6:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 20539,
                            "name": "addTotalSpentPerDay",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12607,
                            "src": "5843:19:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 20543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5843:44:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 20544,
                        "nodeType": "ExpressionStatement",
                        "src": "5843:44:120"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20548,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20517,
                        "src": "5944:5:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC677_$1469",
                          "typeString": "contract ERC677"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 20549,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20507,
                        "src": "5951:5:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 20550,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20509,
                        "src": "5958:6:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 20551,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20511,
                        "src": "5966:5:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC677_$1469",
                          "typeString": "contract ERC677"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 20547,
                      "name": "bridgeSpecificActionsOnTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        20590
                      ],
                      "referencedDeclaration": 20590,
                      "src": "5907:36:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC677_$1469_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (contract ERC677,address,uint256,bytes memory)"
                      }
                    },
                    "id": 20552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5907:65:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20553,
                  "nodeType": "ExpressionStatement",
                  "src": "5907:65:120"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 20554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5989:4:120",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 20515,
                  "id": 20555,
                  "nodeType": "Return",
                  "src": "5982:11:120"
                }
              ]
            },
            "documentation": "@dev This method is called when transferAndCall is used from ERC677 to transfer the tokens to this contract.\nIt will initiate the bridge operation that will burn the amount of tokens transferred and unlock the native tokens on\nthe other network.\n@param _from address that transferred the tokens.\n@param _value amount of tokens transferred.\n@param _data this parameter could contain the address of an alternative receiver of the tokens on the other network,\notherwise it will be empty.",
            "id": 20557,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "onTokenTransfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20512,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20507,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 20557,
                  "src": "5611:13:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20506,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5611:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20509,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 20557,
                  "src": "5626:14:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20508,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5626:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20511,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 20557,
                  "src": "5642:11:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 20510,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5642:5:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5610:44:120"
            },
            "payable": false,
            "returnParameters": {
              "id": 20515,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20514,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 20557,
                  "src": "5673:4:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 20513,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5673:4:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5672:6:120"
            },
            "scope": 20651,
            "src": "5586:414:120",
            "stateMutability": "nonpayable",
            "superFunction": 10078,
            "visibility": "external"
          },
          {
            "body": {
              "id": 20589,
              "nodeType": "Block",
              "src": "6564:173:120",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 20570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "6578:7:120",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 20568,
                        "name": "lock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15336,
                        "src": "6579:4:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
                          "typeString": "function () returns (bool)"
                        }
                      },
                      "id": 20569,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6579:6:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 20588,
                  "nodeType": "IfStatement",
                  "src": "6574:157:120",
                  "trueBody": {
                    "id": 20587,
                    "nodeType": "Block",
                    "src": "6587:144:120",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 20575,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20563,
                              "src": "6643:6:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 20572,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 20559,
                                  "src": "6630:6:120",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC677_$1469",
                                    "typeString": "contract ERC677"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC677_$1469",
                                    "typeString": "contract ERC677"
                                  }
                                ],
                                "id": 20571,
                                "name": "IBurnableMintableERC677Token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1677,
                                "src": "6601:28:120",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IBurnableMintableERC677Token_$1677_$",
                                  "typeString": "type(contract IBurnableMintableERC677Token)"
                                }
                              },
                              "id": 20573,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6601:36:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IBurnableMintableERC677Token_$1677",
                                "typeString": "contract IBurnableMintableERC677Token"
                              }
                            },
                            "id": 20574,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "burn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1669,
                            "src": "6601:41:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 20576,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6601:49:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 20577,
                        "nodeType": "ExpressionStatement",
                        "src": "6601:49:120"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 20579,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20561,
                              "src": "6676:5:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 20581,
                                  "name": "_from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 20561,
                                  "src": "6698:5:120",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 20582,
                                  "name": "_data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 20565,
                                  "src": "6705:5:120",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 20580,
                                "name": "chooseReceiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13948,
                                "src": "6683:14:120",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$returns$_t_address_$",
                                  "typeString": "function (address,bytes memory) view returns (address)"
                                }
                              },
                              "id": 20583,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6683:28:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 20584,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20563,
                              "src": "6713:6:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 20578,
                            "name": "passMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16103,
                            "src": "6664:11:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 20585,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6664:56:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 20586,
                        "nodeType": "ExpressionStatement",
                        "src": "6664:56:120"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev Burns the amount of tokens and makes the request to unlock the native tokens on the other network.\n@param _token address of the ERC677 token.\n@param _from address that transferred the tokens.\n@param _value amount of tokens transferred.\n@param _data this parameter could contain the address of an alternative receiver of the native tokens on the other\nnetwork, otherwise it will be empty.",
            "id": 20590,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "bridgeSpecificActionsOnTokenTransfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20559,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 20590,
                  "src": "6496:13:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC677_$1469",
                    "typeString": "contract ERC677"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 20558,
                    "name": "ERC677",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1469,
                    "src": "6496:6:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC677_$1469",
                      "typeString": "contract ERC677"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20561,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 20590,
                  "src": "6511:13:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20560,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6511:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20563,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 20590,
                  "src": "6526:14:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20562,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6526:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20565,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 20590,
                  "src": "6542:11:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 20564,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6542:5:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6495:59:120"
            },
            "payable": false,
            "returnParameters": {
              "id": 20567,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6564:0:120"
            },
            "scope": 20651,
            "src": "6450:287:120",
            "stateMutability": "nonpayable",
            "superFunction": 10089,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 20606,
              "nodeType": "Block",
              "src": "7018:84:120",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20602,
                        "name": "_feeManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20592,
                        "src": "7077:11:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 20603,
                        "name": "_fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20594,
                        "src": "7090:4:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 20598,
                              "name": "erc677token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20352,
                              "src": "7057:11:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ERC677_$1469_$",
                                "typeString": "function () view returns (contract ERC677)"
                              }
                            },
                            "id": 20599,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7057:13:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC677_$1469",
                              "typeString": "contract ERC677"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC677_$1469",
                              "typeString": "contract ERC677"
                            }
                          ],
                          "id": 20597,
                          "name": "IBurnableMintableERC677Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1677,
                          "src": "7028:28:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBurnableMintableERC677Token_$1677_$",
                            "typeString": "type(contract IBurnableMintableERC677Token)"
                          }
                        },
                        "id": 20600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7028:43:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBurnableMintableERC677Token_$1677",
                          "typeString": "contract IBurnableMintableERC677Token"
                        }
                      },
                      "id": 20601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1664,
                      "src": "7028:48:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 20604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7028:67:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 20605,
                  "nodeType": "ExpressionStatement",
                  "src": "7028:67:120"
                }
              ]
            },
            "documentation": "@dev Mint the fee amount of tokens to the fee manager contract.\n@param _feeManager address that will receive the minted tokens.\n@param _fee amount of tokens to be minted.",
            "id": 20607,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "onFeeDistribution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20595,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20592,
                  "name": "_feeManager",
                  "nodeType": "VariableDeclaration",
                  "scope": 20607,
                  "src": "6974:19:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20591,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6974:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20594,
                  "name": "_fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 20607,
                  "src": "6995:12:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20593,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6995:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6973:35:120"
            },
            "payable": false,
            "returnParameters": {
              "id": 20596,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7018:0:120"
            },
            "scope": 20651,
            "src": "6947:155:120",
            "stateMutability": "nonpayable",
            "superFunction": 15716,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 20621,
              "nodeType": "Block",
              "src": "7494:253:120",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20617,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20609,
                        "src": "7728:6:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 20618,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20611,
                        "src": "7736:3:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 20616,
                      "name": "claimValues",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14003,
                      "src": "7716:11:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 20619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7716:24:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20620,
                  "nodeType": "ExpressionStatement",
                  "src": "7716:24:120"
                }
              ]
            },
            "documentation": "@dev Allows to transfer any locked token on this contract that is not part of the bridge operations.\n@param _token address of the token, if it is not provided, native tokens will be transferred.\n@param _to address that will receive the locked tokens on this contract.",
            "id": 20622,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 20614,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 20613,
                  "name": "onlyIfUpgradeabilityOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 16408,
                  "src": "7468:25:120",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7468:25:120"
              }
            ],
            "name": "claimTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20612,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20609,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 20622,
                  "src": "7430:14:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20608,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7430:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20611,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 20622,
                  "src": "7446:11:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20610,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7446:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7429:29:120"
            },
            "payable": false,
            "returnParameters": {
              "id": 20615,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7494:0:120"
            },
            "scope": 20651,
            "src": "7409:338:120",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 20640,
              "nodeType": "Block",
              "src": "8119:85:120",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20636,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20624,
                        "src": "8185:6:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 20637,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20626,
                        "src": "8193:3:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 20632,
                              "name": "erc677token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20352,
                              "src": "8158:11:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ERC677_$1469_$",
                                "typeString": "function () view returns (contract ERC677)"
                              }
                            },
                            "id": 20633,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8158:13:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC677_$1469",
                              "typeString": "contract ERC677"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC677_$1469",
                              "typeString": "contract ERC677"
                            }
                          ],
                          "id": 20631,
                          "name": "IBurnableMintableERC677Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1677,
                          "src": "8129:28:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBurnableMintableERC677Token_$1677_$",
                            "typeString": "type(contract IBurnableMintableERC677Token)"
                          }
                        },
                        "id": 20634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8129:43:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBurnableMintableERC677Token_$1677",
                          "typeString": "contract IBurnableMintableERC677Token"
                        }
                      },
                      "id": 20635,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "claimTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1676,
                      "src": "8129:55:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 20638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8129:68:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20639,
                  "nodeType": "ExpressionStatement",
                  "src": "8129:68:120"
                }
              ]
            },
            "documentation": "@dev Allows to transfer any locked token on the ERC677 token contract.\n@param _token address of the token, if it is not provided, native tokens will be transferred.\n@param _to address that will receive the locked tokens on this contract.",
            "id": 20641,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 20629,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 20628,
                  "name": "onlyIfUpgradeabilityOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 16408,
                  "src": "8093:25:120",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "8093:25:120"
              }
            ],
            "name": "claimTokensFromErc677",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20627,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20624,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 20641,
                  "src": "8055:14:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20623,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8055:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20626,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 20641,
                  "src": "8071:11:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20625,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8071:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8054:29:120"
            },
            "payable": false,
            "returnParameters": {
              "id": 20630,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8119:0:120"
            },
            "scope": 20651,
            "src": "8024:180:120",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 20649,
              "nodeType": "Block",
              "src": "8521:53:120",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 20646,
                      "name": "mediatorContractOnOtherSide",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11374,
                      "src": "8538:27:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 20647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8538:29:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 20645,
                  "id": 20648,
                  "nodeType": "Return",
                  "src": "8531:36:120"
                }
              ]
            },
            "documentation": "@dev Tells the address of the mediator contract on the other side, used by chooseReceiver method\nto avoid sending the native tokens to that address.\n@return address of the mediator contract con the other side",
            "id": 20650,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "bridgeContractOnOtherSide",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20642,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8486:2:120"
            },
            "payable": false,
            "returnParameters": {
              "id": 20645,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20644,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 20650,
                  "src": "8512:7:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20643,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8512:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8511:9:120"
            },
            "scope": 20651,
            "src": "8452:122:120",
            "stateMutability": "view",
            "superFunction": 13953,
            "visibility": "internal"
          }
        ],
        "scope": 20652,
        "src": "422:8154:120"
      }
    ],
    "src": "0:8577:120"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-11-26T16:22:39.911Z",
  "devdoc": {
    "methods": {
      "bridgeContract()": {
        "details": "Get the AMB interface for the bridge contract address",
        "return": "AMB interface for the bridge contract address"
      },
      "claimTokens(address,address)": {
        "details": "Allows to transfer any locked token on this contract that is not part of the bridge operations.",
        "params": {
          "_to": "address that will receive the locked tokens on this contract.",
          "_token": "address of the token, if it is not provided, native tokens will be transferred."
        }
      },
      "claimTokensFromErc677(address,address)": {
        "details": "Allows to transfer any locked token on the ERC677 token contract.",
        "params": {
          "_to": "address that will receive the locked tokens on this contract.",
          "_token": "address of the token, if it is not provided, native tokens will be transferred."
        }
      },
      "decimalShift()": {
        "details": "Returns the value of foreign-to-home decimal shift.",
        "return": "decimal shift."
      },
      "erc677token()": {
        "details": "Public getter for token contract.",
        "return": "address of the used token contract"
      },
      "feeManagerContract()": {
        "details": "Tells the fee manager contract address",
        "return": "the address of the fee manager contract."
      },
      "fixFailedMessage(bytes32)": {
        "details": "Handles the request to fix transferred assets which bridged message execution failed on the other network. It uses the information stored by passMessage method when the assets were initially transferred",
        "params": {
          "_messageId": "id of the message which execution failed on the other network."
        }
      },
      "getBridgeInterfacesVersion()": {
        "details": "Tells the bridge interface version that this contract supports.",
        "return": "major value of the versionminor value of the versionpatch value of the version"
      },
      "getBridgeMode()": {
        "details": "Tells the bridge mode that this contract supports.",
        "return": "_data 4 bytes representing the bridge mode"
      },
      "handleBridgedTokens(address,uint256)": {
        "details": "Handles the bridged tokens. Checks that the value is inside the execution limits and invokes the method to execute the Mint or Unlock accordingly.",
        "params": {
          "_recipient": "address that will receive the tokens",
          "_value": "amount of tokens to be received"
        }
      },
      "initialize(address,address,uint256[3],uint256[2],uint256,int256,address,address,address)": {
        "details": "Stores the initial parameters of the mediator.",
        "params": {
          "_bridgeContract": "the address of the AMB bridge contract.",
          "_dailyLimitMaxPerTxMinPerTxArray": "array with limit values for the assets to be bridged to the other network.  [ 0 = dailyLimit, 1 = maxPerTx, 2 = minPerTx ]",
          "_decimalShift": "number of decimals shift required to adjust the amount of tokens bridged.",
          "_erc677token": "address of the erc677 token contract",
          "_executionDailyLimitExecutionMaxPerTxArray": "array with limit values for the assets bridged from the other network.  [ 0 = executionDailyLimit, 1 = executionMaxPerTx ]",
          "_feeManager": "address of the fee manager contract",
          "_mediatorContract": "the address of the mediator contract on the other network.",
          "_owner": "address of the owner of the mediator contract",
          "_requestGasLimit": "the gas limit for the message execution."
        }
      },
      "maxAvailablePerTx()": {
        "details": "Retrieves maximum available bridge amount per one transaction taking into account maxPerTx() and dailyLimit() parameters.",
        "return": "minimum of maxPerTx parameter and remaining daily quota."
      },
      "mediatorContractOnOtherSide()": {
        "details": "Tells the mediator contract address from the other network.",
        "return": "the address of the mediator contract."
      },
      "messageFixed(bytes32)": {
        "details": "Tells if a message sent to the AMB bridge has been fixed.",
        "return": "bool indicating the status of the message."
      },
      "onTokenTransfer(address,uint256,bytes)": {
        "details": "This method is called when transferAndCall is used from ERC677 to transfer the tokens to this contract. It will initiate the bridge operation that will burn the amount of tokens transferred and unlock the native tokens on the other network.",
        "params": {
          "_data": "this parameter could contain the address of an alternative receiver of the tokens on the other network, otherwise it will be empty.",
          "_from": "address that transferred the tokens.",
          "_value": "amount of tokens transferred."
        }
      },
      "owner()": {
        "details": "Tells the address of the owner",
        "return": "the address of the owner"
      },
      "relayTokens(address,uint256)": {
        "details": "It will initiate the bridge operation that will burn the amount of tokens transferred and unlock the native tokens on the other network. The user should first call Approve method of the ERC677 token.",
        "params": {
          "_receiver": "address that will receive the native tokens on the other network.",
          "_value": "amount of tokens to be transferred to the other network."
        }
      },
      "requestFailedMessageFix(bytes32)": {
        "details": "Method to be called when a bridged message execution failed. It will generate a new message requesting to fix/roll back the transferred assets on the other network.",
        "params": {
          "_messageId": "id of the message which execution failed."
        }
      },
      "requestGasLimit()": {
        "details": "Tells the gas limit to be used in the message execution by the AMB bridge on the other network.",
        "return": "the gas limit for the message execution."
      },
      "setBridgeContract(address)": {
        "details": "Sets the AMB bridge contract address. Only the owner can call this method.",
        "params": {
          "_bridgeContract": "the address of the bridge contract."
        }
      },
      "setFeeManagerContract(address)": {
        "details": "Sets the fee manager contract address. Only the owner can call this method.",
        "params": {
          "_feeManager": "the address of the fee manager contract."
        }
      },
      "setMediatorContractOnOtherSide(address)": {
        "details": "Sets the mediator contract address from the other network. Only the owner can call this method.",
        "params": {
          "_mediatorContract": "the address of the mediator contract."
        }
      },
      "setRequestGasLimit(uint256)": {
        "details": "Sets the gas limit to be used in the message execution by the AMB bridge on the other network. This value can't exceed the parameter maxGasPerTx defined on the AMB bridge. Only the owner can call this method.",
        "params": {
          "_requestGasLimit": "the gas limit for the message execution."
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "the address to transfer ownership to."
        }
      }
    },
    "title": "ForeignAMBNativeToErc20"
  },
  "userdoc": {
    "methods": {}
  }
}