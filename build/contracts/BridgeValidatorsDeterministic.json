{
  "contractName": "BridgeValidatorsDeterministic",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "validatorCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBridgeValidatorsInterfacesVersion",
      "outputs": [
        {
          "name": "major",
          "type": "uint64"
        },
        {
          "name": "minor",
          "type": "uint64"
        },
        {
          "name": "patch",
          "type": "uint64"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isInitialized",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_validator",
          "type": "address"
        }
      ],
      "name": "removeValidator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_validator",
          "type": "address"
        }
      ],
      "name": "addValidator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_requiredSignatures",
          "type": "uint256"
        },
        {
          "name": "_initialValidators",
          "type": "address[]"
        },
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "validatorList",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_requiredSignatures",
          "type": "uint256"
        }
      ],
      "name": "setRequiredSignatures",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "requiredSignatures",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getNextValidator",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "deployedAtBlock",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "F_ADDR",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_validator",
          "type": "address"
        }
      ],
      "name": "isValidator",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "validator",
          "type": "address"
        }
      ],
      "name": "ValidatorAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "validator",
          "type": "address"
        }
      ],
      "name": "ValidatorRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "requiredSignatures",
          "type": "uint256"
        }
      ],
      "name": "RequiredSignaturesChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_validator",
          "type": "address"
        }
      ],
      "name": "isValidatorDuty",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"validatorCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBridgeValidatorsInterfacesVersion\",\"outputs\":[{\"name\":\"major\",\"type\":\"uint64\"},{\"name\":\"minor\",\"type\":\"uint64\"},{\"name\":\"patch\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isInitialized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_validator\",\"type\":\"address\"}],\"name\":\"removeValidator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_validator\",\"type\":\"address\"}],\"name\":\"addValidator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_requiredSignatures\",\"type\":\"uint256\"},{\"name\":\"_initialValidators\",\"type\":\"address[]\"},{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"validatorList\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_requiredSignatures\",\"type\":\"uint256\"}],\"name\":\"setRequiredSignatures\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"requiredSignatures\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getNextValidator\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_validator\",\"type\":\"address\"}],\"name\":\"isValidatorDuty\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deployedAtBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"F_ADDR\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_validator\",\"type\":\"address\"}],\"name\":\"isValidator\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"validator\",\"type\":\"address\"}],\"name\":\"ValidatorAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"validator\",\"type\":\"address\"}],\"name\":\"ValidatorRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"requiredSignatures\",\"type\":\"uint256\"}],\"name\":\"RequiredSignaturesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"owner()\":{\"details\":\"Tells the address of the owner\",\"return\":\"the address of the owner\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"the address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/mocks/BridgeValidatorsDeterministic.sol\":\"BridgeValidatorsDeterministic\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/interfaces/IUpgradeabilityOwnerStorage.sol\":{\"keccak256\":\"0xa6b5c96c8165d49676d227a9b7070faffdb7325906a598797fe66ca5917e76ef\",\"urls\":[\"bzzr://14c7b605baba9012f1386dce78e5b2665c682ec6a5bae3f4a6ec15f98ba40aa9\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/mocks/BridgeValidatorsDeterministic.sol\":{\"keccak256\":\"0x81053bc7288427c026669ff8d2acbe92b8e36ad180b04e15970f7200d1ca8856\",\"urls\":[\"bzzr://00f50a63da3e9e671a64b6581fbd93e0c07c36e40bd379330924140eb03ac07c\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeability/EternalStorage.sol\":{\"keccak256\":\"0x8f2df79a1cda812d4be25da8f2b138f9b7492e76da1dfba21d87012e649cc51c\",\"urls\":[\"bzzr://0846d08e1b7a84e541ae31c91d2c0b34d88cf3abbd18891ec6eedeea7e958af2\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/BaseBridgeValidators.sol\":{\"keccak256\":\"0x64022f3b080eed3d17e2b9dc6c14b9455bc23a8f924759de43d1e9daa256e9c8\",\"urls\":[\"bzzr://eca5d7c1004466685f64b59ee9762611b3b5847c3cdab4b4d57299c18070657d\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/BridgeValidators.sol\":{\"keccak256\":\"0x40d5faaeef6b57df5bf4d9c95bcedd308cf6a425d555cd9283e3b18ed1a3be88\",\"urls\":[\"bzzr://c8d3c48d539025a5c7183fd5a49a4fc7c7bbb55b09f097a482b0cb59b8817c45\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/Initializable.sol\":{\"keccak256\":\"0xed94c4128ada87141d6c640d5bf4d0a5227cd68fad16be6304a121847fe6494f\",\"urls\":[\"bzzr://2dfbb776af73c3cfe3b6d3dd4545dc7cc55694d4636c0d1043d46ace7dd42ab2\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/InitializableBridge.sol\":{\"keccak256\":\"0xe016ecc4c96c1a587156a8b2f87c15c4b208d5e2a348cbe95d1df18b285d8067\",\"urls\":[\"bzzr://0acb420d4c3a5fd5fe498221a579faa6e45aadd1af22f440aca4da500c734bee\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/Ownable.sol\":{\"keccak256\":\"0xa61d31759a177fc38a5dcf34387cfc9870bbe64f946c14c380d13ddcd9aa6113\",\"urls\":[\"bzzr://7d8b5611ce1d97b28de5d10d5569fe2bd710e851f55b02d628b7a881ca9a9b40\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xa1c5e1d9ebbf654d332ca8e7a5c04a6a6a9d142eeaab3b988c2c909c81a62bef\",\"urls\":[\"bzzr://d062fb4a1b6de1f036ee0e73364a2532c4757eb68e95dd8c5cbb2d17b8732c6a\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "82:338:28:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;82:338:28;;;;;;;",
  "deployedSourceMap": "82:338:28:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3137:108:62;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3137:108:62;;;;;;;;;;;;;;;;;;;;1210:146;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1210:146:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;369:100:87;;8:9:-1;5:2;;;30:1;27;20:12;5:2;369:100:87;;;;;;;;;;;;;;;;;;;;;;1760:152:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1760:152:75;-1:-1:-1;;;;;1760:152:75;;;;;;;1610:144;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1610:144:75;-1:-1:-1;;;;;1610:144:75;;;;;119:1485;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;119:1485:75;;;;;;;;;;;;;;-1:-1:-1;;;;;119:1485:75;;;;;1362:517:62;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1362:517:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1362:517:62;;;;;;;;;;;;;;;;;892:312;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;892:312:62;;;;;3015:116;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3015:116:62;;;;3415:169;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3415:169:62;-1:-1:-1;;;;;3415:169:62;;;;;;;;;-1:-1:-1;;;;;3415:169:62;;;;;;;;;;;;;;1732:92:93;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1732:92:93;;;;147:271:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;147:271:28;-1:-1:-1;;;;;147:271:28;;;;;277:113:88;;8:9:-1;5:2;;;30:1;27;20:12;5:2;277:113:88;;;;247:75:62;;8:9:-1;5:2;;;30:1;27;20:12;5:2;247:75:62;;;;1992:100:93;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1992:100:93;-1:-1:-1;;;;;1992:100:93;;;;;3251:158:62;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3251:158:62;-1:-1:-1;;;;;3251:158:62;;;;;3137:108;596:66;3184:7;3210:28;;;;;;;3137:108;:::o;1210:146::-;1341:1;1344;1281:12;1210:146;;;:::o;369:100:87:-;160:66;415:4;438:24;:11;:24;;;;;;369:100;:::o;1760:152:75:-;783:7:93;:5;:7::i;:::-;-1:-1:-1;;;;;769:21:93;:10;:21;761:30;;;;;;1834:28:75;1851:10;1834:16;:28::i;:::-;1877;;-1:-1:-1;;;;;1877:28:75;;;;;;;;1760:152;:::o;1610:144::-;783:7:93;:5;:7::i;:::-;-1:-1:-1;;;;;769:21:93;:10;:21;761:30;;;;;;1681:25:75;1695:10;1681:13;:25::i;:::-;1721:26;;-1:-1:-1;;;;;1721:26:75;;;;;;;;1610:144;:::o;119:1485::-;1091:44:93;;;22:32:-1;6:49;;1091:44:93;;;;;49:4:-1;25:18;;61:17;;1091:44:93;182:15:-1;1114:20:93;179:29:-1;160:49;;1072:64:93;;;;275:4:75;;;;1080::93;;1091:44;;1072:64;;;;;;25:18:-1;275:4:75;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1072:64:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1071:65;:208;;;;1252:4;-1:-1:-1;;;;;1224:53:93;;:55;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1224:55:93;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1224:55:93;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1224:55:93;-1:-1:-1;;;;;1210:69:93;:10;:69;1071:208;:299;;;-1:-1:-1;1343:10:93;1365:4;1343:27;1071:299;1050:382;;;;;;;;304:15:75;:13;:15::i;:::-;303:16;295:25;;;;;;330:17;340:6;330:9;:17::i;:::-;365:24;;;357:33;;;;;;408:48;;;;400:57;;;;;;-1:-1:-1;485:1:75;468:837;488:29;;;468:837;;;579:1;546:18;;565:1;546:21;;;;;;;;;;;;;-1:-1:-1;;;;;546:21:75;-1:-1:-1;;;;;546:35:75;;;:70;;;;-1:-1:-1;;;;;;585:18:75;;604:1;585:21;;;;;;;;;;;;;-1:-1:-1;;;;;585:21:75;-1:-1:-1;;;;;585:31:75;;;546:70;538:79;;;;;;;;640:34;652:18;;671:1;652:21;;;;;;;;;;;;;-1:-1:-1;;;;;652:21:75;640:11;:34::i;:::-;639:35;631:44;;;;;;694:6;;690:548;;;720:47;-1:-1:-1;;;;;745:18:75;;764:1;745:21;;;;;;;;;;;;;-1:-1:-1;;;;;745:21:75;720:16;:47::i;:::-;818:1;789:30;;785:124;;;843:47;860:18;;879:1;860:21;;;;;;;;;;;;;-1:-1:-1;;;;;860:21:75;-1:-1:-1;;;;;843:16:75;:47::i;:::-;690:548;;;-1:-1:-1;;938:29:75;;933:34;;929:309;;;987:66;1004:18;;-1:-1:-1;;1023:5:75;;1004:25;;;;;;;;;;;;;-1:-1:-1;;;;;1004:25:75;1031:18;;1050:1;1031:21;;;;;;;;987:66;1071:47;1088:18;;1107:1;1088:21;;;;;;929:309;1157:66;1174:18;;-1:-1:-1;;1193:5:75;;1174:25;;;;;;1157:66;1272:18;;1291:1;1272:21;;;;;;;;;;;;;-1:-1:-1;;;;;1272:21:75;-1:-1:-1;;;;;1257:37:75;;;;;;;;;;;519:3;;468:837;;;1315:44;1333:18;1315:17;:44::i;:::-;1369:11;:32;;;;;:54;;;154:66:88;1433:30:75;;1466:12;1433:30;:45;1488:15;:13;:15::i;:::-;1518:46;;;;;;;;;;;;;;;;;1582:15;:13;:15::i;:::-;1575:22;119:1485;-1:-1:-1;;;;;;119:1485:75:o;1362:517:62:-;1410:9;1431:21;1496:15;1525:21;1469:16;:14;:16::i;:::-;1455:31;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;1455:31:62;;1431:55;;1514:1;1496:19;;1549:24;-1:-1:-1;;;;;1549:16:62;:24::i;:::-;1525:48;-1:-1:-1;;;;;;1591:27:62;;;;1583:36;;;;;;-1:-1:-1;;;;;1637:23:62;;;;1630:221;;1692:13;1676:4;1681:7;1676:13;;;;;;;;;;-1:-1:-1;;;;;1676:29:62;;;:13;;;;;;;;;;:29;1735:31;1752:13;1735:16;:31::i;:::-;1780:9;;;;;1719:47;-1:-1:-1;;;;;;1812:27:62;;;;1804:36;;;;;;1630:221;;;-1:-1:-1;1868:4:62;;1362:517;-1:-1:-1;;1362:517:62:o;892:312::-;783:7:93;:5;:7::i;:::-;-1:-1:-1;;;;;769:21:93;:10;:21;761:30;;;;;;1009:19:62;989:16;:14;:16::i;:::-;:39;;981:48;;;;;;1047:24;;;1039:33;;;;;;427:66;1082:11;:32;;;;;;;;:54;;;:32;1151:46;;;;;;;;;;;;;;;;;;892:312;:::o;3015:116::-;427:66;3066:7;3092:32;;;;;;;3015:116;:::o;3415:169::-;3480:7;3506:14;:71;3566:8;3531:44;;;;;;;;;;;;;-1:-1:-1;;;;;3531:44:62;-1:-1:-1;;;;;3531:44:62;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3531:44:62;;;3521:55;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;3521:55:62;;;;;;;;;;;;;3506:71;;;;;;;;;;;;-1:-1:-1;3506:71:62;;-1:-1:-1;;;;;3506:71:62;;3415:169;-1:-1:-1;;;;;3415:169:62:o;1732:92:93:-;1523:66;1770:7;1796:21;:14;:21;;;;-1:-1:-1;;;;;1796:21:93;1732:92;:::o;147:271:28:-;215:4;231:12;246:24;-1:-1:-1;;;;;246:16:28;:24::i;:::-;231:39;-1:-1:-1;;;;;;288:18:28;;;;280:27;;;;;;407:4;-1:-1:-1;;;;;393:18:28;:10;-1:-1:-1;;;;;393:18:28;;386:25;;147:271;;;;:::o;277:113:88:-;154:66;327:7;353:30;;;;;;;277:113;:::o;247:75:62:-;-1:-1:-1;;;;;247:75:62;:::o;1992:100:93:-;783:7;:5;:7::i;:::-;-1:-1:-1;;;;;769:21:93;:10;:21;761:30;;;;;;2066:19;2076:8;2066:9;:19::i;:::-;1992:100;:::o;3251:158:62:-;3313:4;-1:-1:-1;;;;;3336:20:62;;;;;;;:66;;-1:-1:-1;3400:1:62;3360:28;3377:10;3360:16;:28::i;:::-;-1:-1:-1;;;;;3360:42:62;;;3336:66;3329:73;3251:158;-1:-1:-1;;3251:158:62:o;2319:690::-;2484:22;2547:13;2579:12;2411:20;:18;:20::i;:::-;2392:16;:14;:16::i;:::-;:39;2384:48;;;;;;2450:23;2462:10;2450:11;:23::i;:::-;2442:32;;;;;;;;2509:28;2526:10;2509:16;:28::i;:::-;2484:53;;-1:-1:-1;;;;;2547:22:62;;2594:23;2611:5;2594:16;:23::i;:::-;2579:38;-1:-1:-1;;;;;;2635:18:62;;;;2627:27;;;;;;-1:-1:-1;;;;;2672:18:62;;;;;;;2665:168;;2714:4;2706:12;;2739:23;2756:5;2739:16;:23::i;:::-;2732:30;-1:-1:-1;;;;;;2785:14:62;;;;;;;:36;;-1:-1:-1;;;;;;2803:18:62;;;;2785:36;2777:45;;;;;;;;2665:168;;;2843:39;2860:5;2867:14;2843:16;:39::i;:::-;2892:58;;;;;;;;;;;;;;;;;;;2939:10;2892:28;:58::i;:::-;2960:42;2978:23;2999:1;2978:16;:14;:16::i;:::-;:20;:23;:20;:23;:::i;:::-;2960:17;:42::i;:::-;2319:690;;;;:::o;1885:428::-;2058:22;-1:-1:-1;;;;;1955:24:62;;;;;;:48;;-1:-1:-1;;;;;;1983:20:62;;;;;1955:48;1947:57;;;;;;;;2023:23;2035:10;2023:11;:23::i;:::-;2022:24;2014:33;;;;;;2083:24;-1:-1:-1;;;;;2083:16:62;:24::i;:::-;2058:49;-1:-1:-1;;;;;;2125:28:62;;;;2117:37;;;;;;2164:44;2181:10;2193:14;2164:16;:44::i;:::-;2218:36;-1:-1:-1;;;;;2243:10:62;2218:16;:36::i;:::-;2264:42;2282:23;2303:1;2282:16;:14;:16::i;:::-;:20;:23;:20;:23;:::i;2264:42::-;1885:428;;:::o;2149:190:93:-;-1:-1:-1;;;;;2213:22:93;;;;2205:31;;;;;;2251:39;2272:7;:5;:7::i;:::-;2251:39;;;-1:-1:-1;;;;;2251:39:93;;;;;;;;;;;;;;;;;;;;;1523:66;2300:21;;:14;:21;;;:32;;-1:-1:-1;;2300:32:93;-1:-1:-1;;;;;2300:32:93;;;;;;;;;;2149:190::o;3947:186:62:-;4116:10;4036:14;:77;4096:14;4061:50;;;;;;;;;;;;;-1:-1:-1;;;;;4061:50:62;-1:-1:-1;;;;;4061:50:62;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4061:50:62;;;4051:61;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;4051:61:62;;;;;;;;;;;;;4036:77;;;;;;;;;;;;-1:-1:-1;4036:77:62;:90;;-1:-1:-1;;4036:90:62;-1:-1:-1;;;;;4036:90:62;;;;;;;;;;;-1:-1:-1;;;;;3947:186:62:o;3765:176::-;371:2;3844:33;;;3836:42;;;;;;596:66;3888:11;:28;;;;;;:46;3765:176::o;281:82:87:-;160:66;325:24;;:11;:24;;;:31;;-1:-1:-1;;325:31:87;352:4;325:31;;;281:82::o;3590:169:62:-;3689:14;:63;3731:8;3741;3714:36;;;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3714:36:62;;;;;;;-1:-1:-1;;;;;3714:36:62;-1:-1:-1;;;;;3714:36:62;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3714:36:62;;;3704:47;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;3704:47:62;;;;;;;;;;;;;3689:63;;;;;;;;;;;;-1:-1:-1;3689:63:62;3682:70;;-1:-1:-1;;3682:70:62;;;-1:-1:-1;;;;;3590:169:62:o;1060:116:160:-;1120:7;1142:8;;;;1135:16;;;;-1:-1:-1;1164:7:160;;;1060:116::o;1238:128::-;1319:7;;;1339;;;;1332:15;;",
  "source": "pragma solidity 0.4.24;\n\nimport \"../upgradeable_contracts/BridgeValidators.sol\";\n\ncontract BridgeValidatorsDeterministic is BridgeValidators {\n    function isValidatorDuty(address _validator) external view returns (bool) {\n        address next = getNextValidator(F_ADDR);\n        require(next != address(0));\n\n        // first validator is always on duty, others are always not\n        return _validator == next;\n    }\n}\n",
  "sourcePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/mocks/BridgeValidatorsDeterministic.sol",
  "ast": {
    "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/mocks/BridgeValidatorsDeterministic.sol",
    "exportedSymbols": {
      "BridgeValidatorsDeterministic": [
        3450
      ]
    },
    "id": 3451,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3420,
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:28"
      },
      {
        "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/BridgeValidators.sol",
        "file": "../upgradeable_contracts/BridgeValidators.sol",
        "id": 3421,
        "nodeType": "ImportDirective",
        "scope": 3451,
        "sourceUnit": 13254,
        "src": "25:55:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3422,
              "name": "BridgeValidators",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13253,
              "src": "124:16:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BridgeValidators_$13253",
                "typeString": "contract BridgeValidators"
              }
            },
            "id": 3423,
            "nodeType": "InheritanceSpecifier",
            "src": "124:16:28"
          }
        ],
        "contractDependencies": [
          9266,
          9984,
          13253,
          14798,
          14817,
          15318
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 3450,
        "linearizedBaseContracts": [
          3450,
          13253,
          9984,
          15318,
          14817,
          14798,
          9266
        ],
        "name": "BridgeValidatorsDeterministic",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3448,
              "nodeType": "Block",
              "src": "221:197:28",
              "statements": [
                {
                  "assignments": [
                    3431
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3431,
                      "name": "next",
                      "nodeType": "VariableDeclaration",
                      "scope": 3449,
                      "src": "231:12:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3430,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "231:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3435,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3433,
                        "name": "F_ADDR",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9525,
                        "src": "263:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3432,
                      "name": "getNextValidator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9862,
                      "src": "246:16:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_address_$",
                        "typeString": "function (address) view returns (address)"
                      }
                    },
                    "id": 3434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "246:24:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "231:39:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3437,
                          "name": "next",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3431,
                          "src": "288:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 3439,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "304:1:28",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3438,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "296:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 3440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "296:10:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "288:18:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3436,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        30716,
                        30717
                      ],
                      "referencedDeclaration": 30716,
                      "src": "280:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "280:27:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3443,
                  "nodeType": "ExpressionStatement",
                  "src": "280:27:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 3444,
                      "name": "_validator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3425,
                      "src": "393:10:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 3445,
                      "name": "next",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3431,
                      "src": "407:4:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "393:18:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3429,
                  "id": 3447,
                  "nodeType": "Return",
                  "src": "386:25:28"
                }
              ]
            },
            "documentation": null,
            "id": 3449,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isValidatorDuty",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3425,
                  "name": "_validator",
                  "nodeType": "VariableDeclaration",
                  "scope": 3449,
                  "src": "172:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3424,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "172:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "171:20:28"
            },
            "payable": false,
            "returnParameters": {
              "id": 3429,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3428,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3449,
                  "src": "215:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3427,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "215:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "214:6:28"
            },
            "scope": 3450,
            "src": "147:271:28",
            "stateMutability": "view",
            "superFunction": 9983,
            "visibility": "external"
          }
        ],
        "scope": 3451,
        "src": "82:338:28"
      }
    ],
    "src": "0:421:28"
  },
  "legacyAST": {
    "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/mocks/BridgeValidatorsDeterministic.sol",
    "exportedSymbols": {
      "BridgeValidatorsDeterministic": [
        3450
      ]
    },
    "id": 3451,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3420,
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:28"
      },
      {
        "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/BridgeValidators.sol",
        "file": "../upgradeable_contracts/BridgeValidators.sol",
        "id": 3421,
        "nodeType": "ImportDirective",
        "scope": 3451,
        "sourceUnit": 13254,
        "src": "25:55:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3422,
              "name": "BridgeValidators",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13253,
              "src": "124:16:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BridgeValidators_$13253",
                "typeString": "contract BridgeValidators"
              }
            },
            "id": 3423,
            "nodeType": "InheritanceSpecifier",
            "src": "124:16:28"
          }
        ],
        "contractDependencies": [
          9266,
          9984,
          13253,
          14798,
          14817,
          15318
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 3450,
        "linearizedBaseContracts": [
          3450,
          13253,
          9984,
          15318,
          14817,
          14798,
          9266
        ],
        "name": "BridgeValidatorsDeterministic",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3448,
              "nodeType": "Block",
              "src": "221:197:28",
              "statements": [
                {
                  "assignments": [
                    3431
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3431,
                      "name": "next",
                      "nodeType": "VariableDeclaration",
                      "scope": 3449,
                      "src": "231:12:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3430,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "231:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3435,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3433,
                        "name": "F_ADDR",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9525,
                        "src": "263:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3432,
                      "name": "getNextValidator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9862,
                      "src": "246:16:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_address_$",
                        "typeString": "function (address) view returns (address)"
                      }
                    },
                    "id": 3434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "246:24:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "231:39:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3437,
                          "name": "next",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3431,
                          "src": "288:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 3439,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "304:1:28",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3438,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "296:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 3440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "296:10:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "288:18:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3436,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        30716,
                        30717
                      ],
                      "referencedDeclaration": 30716,
                      "src": "280:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "280:27:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3443,
                  "nodeType": "ExpressionStatement",
                  "src": "280:27:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 3444,
                      "name": "_validator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3425,
                      "src": "393:10:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 3445,
                      "name": "next",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3431,
                      "src": "407:4:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "393:18:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3429,
                  "id": 3447,
                  "nodeType": "Return",
                  "src": "386:25:28"
                }
              ]
            },
            "documentation": null,
            "id": 3449,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isValidatorDuty",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3425,
                  "name": "_validator",
                  "nodeType": "VariableDeclaration",
                  "scope": 3449,
                  "src": "172:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3424,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "172:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "171:20:28"
            },
            "payable": false,
            "returnParameters": {
              "id": 3429,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3428,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3449,
                  "src": "215:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3427,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "215:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "214:6:28"
            },
            "scope": 3450,
            "src": "147:271:28",
            "stateMutability": "view",
            "superFunction": 9983,
            "visibility": "external"
          }
        ],
        "scope": 3451,
        "src": "82:338:28"
      }
    ],
    "src": "0:421:28"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-11-26T16:22:39.598Z",
  "devdoc": {
    "methods": {
      "owner()": {
        "details": "Tells the address of the owner",
        "return": "the address of the owner"
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "the address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}