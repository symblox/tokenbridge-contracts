{
  "contractName": "BasicAMBNativeToErc20",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_messageId",
          "type": "bytes32"
        }
      ],
      "name": "fixFailedMessage",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_bridgeContract",
          "type": "address"
        }
      ],
      "name": "setBridgeContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_day",
          "type": "uint256"
        }
      ],
      "name": "totalSpentPerDay",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isInitialized",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_dailyLimit",
          "type": "uint256"
        }
      ],
      "name": "setExecutionDailyLimit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCurrentDay",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "executionDailyLimit",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_day",
          "type": "uint256"
        }
      ],
      "name": "totalExecutedPerDay",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_messageId",
          "type": "bytes32"
        }
      ],
      "name": "messageFixed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_feeManager",
          "type": "address"
        }
      ],
      "name": "setFeeManagerContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "dailyLimit",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_mediatorContract",
          "type": "address"
        }
      ],
      "name": "setMediatorContractOnOtherSide",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "mediatorContractOnOtherSide",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withinExecutionLimit",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "executionMaxPerTx",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_recipient",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "handleBridgedTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "maxAvailablePerTx",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_messageId",
          "type": "bytes32"
        }
      ],
      "name": "requestFailedMessageFix",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_minPerTx",
          "type": "uint256"
        }
      ],
      "name": "setMinPerTx",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_dailyLimit",
          "type": "uint256"
        }
      ],
      "name": "setDailyLimit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "requestGasLimit",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_maxPerTx",
          "type": "uint256"
        }
      ],
      "name": "setMaxPerTx",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "bridgeContract",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimalShift",
      "outputs": [
        {
          "name": "",
          "type": "int256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "feeManagerContract",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "minPerTx",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withinLimit",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_maxPerTx",
          "type": "uint256"
        }
      ],
      "name": "setExecutionMaxPerTx",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_requestGasLimit",
          "type": "uint256"
        }
      ],
      "name": "setRequestGasLimit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "maxPerTx",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "feeAmount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "messageId",
          "type": "bytes32"
        }
      ],
      "name": "FeeDistributed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "messageId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "FailedMessageFixed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "messageId",
          "type": "bytes32"
        }
      ],
      "name": "TokensBridged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "newLimit",
          "type": "uint256"
        }
      ],
      "name": "DailyLimitChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "newLimit",
          "type": "uint256"
        }
      ],
      "name": "ExecutionDailyLimitChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBridgeInterfacesVersion",
      "outputs": [
        {
          "name": "major",
          "type": "uint64"
        },
        {
          "name": "minor",
          "type": "uint64"
        },
        {
          "name": "patch",
          "type": "uint64"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBridgeMode",
      "outputs": [
        {
          "name": "_data",
          "type": "bytes4"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity 0.4.24;\n\nimport \"../Initializable.sol\";\nimport \"../Upgradeable.sol\";\nimport \"../Claimable.sol\";\nimport \"../VersionableBridge.sol\";\nimport \"../TokenBridgeMediator.sol\";\nimport \"../RewardableMediator.sol\";\n\n/**\n* @title BasicAMBNativeToErc20\n* @dev Common mediator functionality for native-to-erc20 bridge intended to work on top of AMB bridge.\n*/\ncontract BasicAMBNativeToErc20 is\n    Initializable,\n    Upgradeable,\n    Claimable,\n    VersionableBridge,\n    TokenBridgeMediator,\n    RewardableMediator\n{\n    /**\n    * @dev Stores the initial parameters of the mediator.\n    * @param _bridgeContract the address of the AMB bridge contract.\n    * @param _mediatorContract the address of the mediator contract on the other network.\n    * @param _dailyLimitMaxPerTxMinPerTxArray array with limit values for the assets to be bridged to the other network.\n    *   [ 0 = dailyLimit, 1 = maxPerTx, 2 = minPerTx ]\n    * @param _executionDailyLimitExecutionMaxPerTxArray array with limit values for the assets bridged from the other network.\n    *   [ 0 = executionDailyLimit, 1 = executionMaxPerTx ]\n    * @param _requestGasLimit the gas limit for the message execution.\n    * @param _decimalShift number of decimals shift required to adjust the amount of tokens bridged.\n    * @param _owner address of the owner of the mediator contract\n    * @param _feeManager address of the fee manager contract\n    */\n    function _initialize(\n        address _bridgeContract,\n        address _mediatorContract,\n        uint256[3] _dailyLimitMaxPerTxMinPerTxArray,\n        uint256[2] _executionDailyLimitExecutionMaxPerTxArray,\n        uint256 _requestGasLimit,\n        int256 _decimalShift,\n        address _owner,\n        address _feeManager\n    ) internal {\n        require(!isInitialized());\n\n        _setBridgeContract(_bridgeContract);\n        _setMediatorContractOnOtherSide(_mediatorContract);\n        _setRequestGasLimit(_requestGasLimit);\n        _setLimits(_dailyLimitMaxPerTxMinPerTxArray);\n        _setExecutionLimits(_executionDailyLimitExecutionMaxPerTxArray);\n        _setDecimalShift(_decimalShift);\n        _setFeeManagerContract(_feeManager);\n        _setOwner(_owner);\n    }\n\n    /**\n    * @dev Tells the bridge interface version that this contract supports.\n    * @return major value of the version\n    * @return minor value of the version\n    * @return patch value of the version\n    */\n    function getBridgeInterfacesVersion() external pure returns (uint64 major, uint64 minor, uint64 patch) {\n        return (1, 1, 0);\n    }\n\n    /**\n    * @dev Tells the bridge mode that this contract supports.\n    * @return _data 4 bytes representing the bridge mode\n    */\n    function getBridgeMode() external pure returns (bytes4 _data) {\n        return 0x582ed8fd; // bytes4(keccak256(abi.encodePacked(\"native-to-erc-amb\")))\n    }\n\n    /**\n    * @dev Execute the action to be performed when the bridge tokens are out of execution limits.\n    */\n    function executeActionOnBridgedTokensOutOfLimit(\n        address, /* _recipient */\n        uint256 /* _value */\n    ) internal {\n        revert();\n    }\n}\n",
  "sourcePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/amb_native_to_erc20/BasicAMBNativeToErc20.sol",
  "ast": {
    "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/amb_native_to_erc20/BasicAMBNativeToErc20.sol",
    "exportedSymbols": {
      "BasicAMBNativeToErc20": [
        20280
      ]
    },
    "id": 20281,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 20165,
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:119"
      },
      {
        "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/Initializable.sol",
        "file": "../Initializable.sol",
        "id": 20166,
        "nodeType": "ImportDirective",
        "scope": 20281,
        "sourceUnit": 14799,
        "src": "25:30:119",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/Upgradeable.sol",
        "file": "../Upgradeable.sol",
        "id": 20167,
        "nodeType": "ImportDirective",
        "scope": 20281,
        "sourceUnit": 16410,
        "src": "56:28:119",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/Claimable.sol",
        "file": "../Claimable.sol",
        "id": 20168,
        "nodeType": "ImportDirective",
        "scope": 20281,
        "sourceUnit": 14053,
        "src": "85:26:119",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/VersionableBridge.sol",
        "file": "../VersionableBridge.sol",
        "id": 20169,
        "nodeType": "ImportDirective",
        "scope": 20281,
        "sourceUnit": 16713,
        "src": "112:34:119",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/TokenBridgeMediator.sol",
        "file": "../TokenBridgeMediator.sol",
        "id": 20170,
        "nodeType": "ImportDirective",
        "scope": 20281,
        "sourceUnit": 16262,
        "src": "147:36:119",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/RewardableMediator.sol",
        "file": "../RewardableMediator.sol",
        "id": 20171,
        "nodeType": "ImportDirective",
        "scope": 20281,
        "sourceUnit": 15718,
        "src": "184:35:119",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 20172,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 14798,
              "src": "400:13:119",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$14798",
                "typeString": "contract Initializable"
              }
            },
            "id": 20173,
            "nodeType": "InheritanceSpecifier",
            "src": "400:13:119"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 20174,
              "name": "Upgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16409,
              "src": "419:11:119",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Upgradeable_$16409",
                "typeString": "contract Upgradeable"
              }
            },
            "id": 20175,
            "nodeType": "InheritanceSpecifier",
            "src": "419:11:119"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 20176,
              "name": "Claimable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 14052,
              "src": "436:9:119",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Claimable_$14052",
                "typeString": "contract Claimable"
              }
            },
            "id": 20177,
            "nodeType": "InheritanceSpecifier",
            "src": "436:9:119"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 20178,
              "name": "VersionableBridge",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16712,
              "src": "451:17:119",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_VersionableBridge_$16712",
                "typeString": "contract VersionableBridge"
              }
            },
            "id": 20179,
            "nodeType": "InheritanceSpecifier",
            "src": "451:17:119"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 20180,
              "name": "TokenBridgeMediator",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16261,
              "src": "474:19:119",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TokenBridgeMediator_$16261",
                "typeString": "contract TokenBridgeMediator"
              }
            },
            "id": 20181,
            "nodeType": "InheritanceSpecifier",
            "src": "474:19:119"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 20182,
              "name": "RewardableMediator",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15717,
              "src": "499:18:119",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RewardableMediator_$15717",
                "typeString": "contract RewardableMediator"
              }
            },
            "id": 20183,
            "nodeType": "InheritanceSpecifier",
            "src": "499:18:119"
          }
        ],
        "contractDependencies": [
          9266,
          11468,
          12916,
          14052,
          14172,
          14798,
          15318,
          15717,
          16261,
          16390,
          16409,
          16712
        ],
        "contractKind": "contract",
        "documentation": "@title BasicAMBNativeToErc20\n@dev Common mediator functionality for native-to-erc20 bridge intended to work on top of AMB bridge.",
        "fullyImplemented": false,
        "id": 20280,
        "linearizedBaseContracts": [
          20280,
          15717,
          16261,
          16390,
          12916,
          14172,
          11468,
          15318,
          16712,
          14052,
          16409,
          14798,
          9266
        ],
        "name": "BasicAMBNativeToErc20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 20244,
              "nodeType": "Block",
              "src": "1754:435:119",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1772:16:119",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 20207,
                            "name": "isInitialized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14797,
                            "src": "1773:13:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 20208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1773:15:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 20206,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        30716,
                        30717
                      ],
                      "referencedDeclaration": 30716,
                      "src": "1764:7:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 20210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1764:25:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20211,
                  "nodeType": "ExpressionStatement",
                  "src": "1764:25:119"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20213,
                        "name": "_bridgeContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20185,
                        "src": "1819:15:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 20212,
                      "name": "_setBridgeContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11403,
                      "src": "1800:18:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 20214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1800:35:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20215,
                  "nodeType": "ExpressionStatement",
                  "src": "1800:35:119"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20217,
                        "name": "_mediatorContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20187,
                        "src": "1877:17:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 20216,
                      "name": "_setMediatorContractOnOtherSide",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11415,
                      "src": "1845:31:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 20218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1845:50:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20219,
                  "nodeType": "ExpressionStatement",
                  "src": "1845:50:119"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20221,
                        "name": "_requestGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20197,
                        "src": "1925:16:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 20220,
                      "name": "_setRequestGasLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11434,
                      "src": "1905:19:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 20222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1905:37:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20223,
                  "nodeType": "ExpressionStatement",
                  "src": "1905:37:119"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20225,
                        "name": "_dailyLimitMaxPerTxMinPerTxArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20191,
                        "src": "1963:32:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                          "typeString": "uint256[3] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                          "typeString": "uint256[3] memory"
                        }
                      ],
                      "id": 20224,
                      "name": "_setLimits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12875,
                      "src": "1952:10:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$3_memory_ptr_$returns$__$",
                        "typeString": "function (uint256[3] memory)"
                      }
                    },
                    "id": 20226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1952:44:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20227,
                  "nodeType": "ExpressionStatement",
                  "src": "1952:44:119"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20229,
                        "name": "_executionDailyLimitExecutionMaxPerTxArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20195,
                        "src": "2026:42:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      ],
                      "id": 20228,
                      "name": "_setExecutionLimits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12915,
                      "src": "2006:19:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$2_memory_ptr_$returns$__$",
                        "typeString": "function (uint256[2] memory)"
                      }
                    },
                    "id": 20230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2006:63:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20231,
                  "nodeType": "ExpressionStatement",
                  "src": "2006:63:119"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20233,
                        "name": "_decimalShift",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20199,
                        "src": "2096:13:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 20232,
                      "name": "_setDecimalShift",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14089,
                      "src": "2079:16:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_int256_$returns$__$",
                        "typeString": "function (int256)"
                      }
                    },
                    "id": 20234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2079:31:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20235,
                  "nodeType": "ExpressionStatement",
                  "src": "2079:31:119"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20237,
                        "name": "_feeManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20203,
                        "src": "2143:11:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 20236,
                      "name": "_setFeeManagerContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15663,
                      "src": "2120:22:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 20238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2120:35:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20239,
                  "nodeType": "ExpressionStatement",
                  "src": "2120:35:119"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20241,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20201,
                        "src": "2175:6:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 20240,
                      "name": "_setOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15317,
                      "src": "2165:9:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 20242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2165:17:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20243,
                  "nodeType": "ExpressionStatement",
                  "src": "2165:17:119"
                }
              ]
            },
            "documentation": "@dev Stores the initial parameters of the mediator.\n@param _bridgeContract the address of the AMB bridge contract.\n@param _mediatorContract the address of the mediator contract on the other network.\n@param _dailyLimitMaxPerTxMinPerTxArray array with limit values for the assets to be bridged to the other network.\n  [ 0 = dailyLimit, 1 = maxPerTx, 2 = minPerTx ]\n@param _executionDailyLimitExecutionMaxPerTxArray array with limit values for the assets bridged from the other network.\n  [ 0 = executionDailyLimit, 1 = executionMaxPerTx ]\n@param _requestGasLimit the gas limit for the message execution.\n@param _decimalShift number of decimals shift required to adjust the amount of tokens bridged.\n@param _owner address of the owner of the mediator contract\n@param _feeManager address of the fee manager contract",
            "id": 20245,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "_initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20185,
                  "name": "_bridgeContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 20245,
                  "src": "1447:23:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20184,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1447:7:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20187,
                  "name": "_mediatorContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 20245,
                  "src": "1480:25:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20186,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1480:7:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20191,
                  "name": "_dailyLimitMaxPerTxMinPerTxArray",
                  "nodeType": "VariableDeclaration",
                  "scope": 20245,
                  "src": "1515:43:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                    "typeString": "uint256[3]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 20188,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1515:7:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 20190,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "33",
                      "id": 20189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1523:1:119",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "3"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1515:10:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
                      "typeString": "uint256[3]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20195,
                  "name": "_executionDailyLimitExecutionMaxPerTxArray",
                  "nodeType": "VariableDeclaration",
                  "scope": 20245,
                  "src": "1568:53:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 20192,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1568:7:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 20194,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 20193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1576:1:119",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1568:10:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20197,
                  "name": "_requestGasLimit",
                  "nodeType": "VariableDeclaration",
                  "scope": 20245,
                  "src": "1631:24:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20196,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1631:7:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20199,
                  "name": "_decimalShift",
                  "nodeType": "VariableDeclaration",
                  "scope": 20245,
                  "src": "1665:20:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 20198,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1665:6:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20201,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 20245,
                  "src": "1695:14:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20200,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1695:7:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20203,
                  "name": "_feeManager",
                  "nodeType": "VariableDeclaration",
                  "scope": 20245,
                  "src": "1719:19:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20202,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1719:7:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1437:307:119"
            },
            "payable": false,
            "returnParameters": {
              "id": 20205,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1754:0:119"
            },
            "scope": 20280,
            "src": "1417:772:119",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 20259,
              "nodeType": "Block",
              "src": "2511:33:119",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 20254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2529:1:119",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 20255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2532:1:119",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 20256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2535:1:119",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "id": 20257,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2528:9:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_rational_1_by_1_$_t_rational_1_by_1_$_t_rational_0_by_1_$",
                      "typeString": "tuple(int_const 1,int_const 1,int_const 0)"
                    }
                  },
                  "functionReturnParameters": 20253,
                  "id": 20258,
                  "nodeType": "Return",
                  "src": "2521:16:119"
                }
              ]
            },
            "documentation": "@dev Tells the bridge interface version that this contract supports.\n@return major value of the version\n@return minor value of the version\n@return patch value of the version",
            "id": 20260,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getBridgeInterfacesVersion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20246,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2443:2:119"
            },
            "payable": false,
            "returnParameters": {
              "id": 20253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20248,
                  "name": "major",
                  "nodeType": "VariableDeclaration",
                  "scope": 20260,
                  "src": "2469:12:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 20247,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2469:6:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20250,
                  "name": "minor",
                  "nodeType": "VariableDeclaration",
                  "scope": 20260,
                  "src": "2483:12:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 20249,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2483:6:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20252,
                  "name": "patch",
                  "nodeType": "VariableDeclaration",
                  "scope": 20260,
                  "src": "2497:12:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 20251,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2497:6:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2468:42:119"
            },
            "scope": 20280,
            "src": "2408:136:119",
            "stateMutability": "pure",
            "superFunction": 16706,
            "visibility": "external"
          },
          {
            "body": {
              "id": 20267,
              "nodeType": "Block",
              "src": "2746:94:119",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "30783538326564386664",
                    "id": 20265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2763:10:119",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1479465213_by_1",
                      "typeString": "int_const 1479465213"
                    },
                    "value": "0x582ed8fd"
                  },
                  "functionReturnParameters": 20264,
                  "id": 20266,
                  "nodeType": "Return",
                  "src": "2756:17:119"
                }
              ]
            },
            "documentation": "@dev Tells the bridge mode that this contract supports.\n@return _data 4 bytes representing the bridge mode",
            "id": 20268,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getBridgeMode",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20261,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2706:2:119"
            },
            "payable": false,
            "returnParameters": {
              "id": 20264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20263,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 20268,
                  "src": "2732:12:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 20262,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "2732:6:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2731:14:119"
            },
            "scope": 20280,
            "src": "2684:156:119",
            "stateMutability": "pure",
            "superFunction": 16711,
            "visibility": "external"
          },
          {
            "body": {
              "id": 20278,
              "nodeType": "Block",
              "src": "3086:25:119",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 20275,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        30718,
                        30719
                      ],
                      "referencedDeclaration": 30718,
                      "src": "3096:6:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 20276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3096:8:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20277,
                  "nodeType": "ExpressionStatement",
                  "src": "3096:8:119"
                }
              ]
            },
            "documentation": "@dev Execute the action to be performed when the bridge tokens are out of execution limits.",
            "id": 20279,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "executeActionOnBridgedTokensOutOfLimit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20273,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20270,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 20279,
                  "src": "3016:7:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20269,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3016:7:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20272,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 20279,
                  "src": "3050:7:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20271,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3050:7:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3006:70:119"
            },
            "payable": false,
            "returnParameters": {
              "id": 20274,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3086:0:119"
            },
            "scope": 20280,
            "src": "2959:152:119",
            "stateMutability": "nonpayable",
            "superFunction": 16246,
            "visibility": "internal"
          }
        ],
        "scope": 20281,
        "src": "362:2751:119"
      }
    ],
    "src": "0:3114:119"
  },
  "legacyAST": {
    "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/amb_native_to_erc20/BasicAMBNativeToErc20.sol",
    "exportedSymbols": {
      "BasicAMBNativeToErc20": [
        20280
      ]
    },
    "id": 20281,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 20165,
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:119"
      },
      {
        "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/Initializable.sol",
        "file": "../Initializable.sol",
        "id": 20166,
        "nodeType": "ImportDirective",
        "scope": 20281,
        "sourceUnit": 14799,
        "src": "25:30:119",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/Upgradeable.sol",
        "file": "../Upgradeable.sol",
        "id": 20167,
        "nodeType": "ImportDirective",
        "scope": 20281,
        "sourceUnit": 16410,
        "src": "56:28:119",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/Claimable.sol",
        "file": "../Claimable.sol",
        "id": 20168,
        "nodeType": "ImportDirective",
        "scope": 20281,
        "sourceUnit": 14053,
        "src": "85:26:119",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/VersionableBridge.sol",
        "file": "../VersionableBridge.sol",
        "id": 20169,
        "nodeType": "ImportDirective",
        "scope": 20281,
        "sourceUnit": 16713,
        "src": "112:34:119",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/TokenBridgeMediator.sol",
        "file": "../TokenBridgeMediator.sol",
        "id": 20170,
        "nodeType": "ImportDirective",
        "scope": 20281,
        "sourceUnit": 16262,
        "src": "147:36:119",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/RewardableMediator.sol",
        "file": "../RewardableMediator.sol",
        "id": 20171,
        "nodeType": "ImportDirective",
        "scope": 20281,
        "sourceUnit": 15718,
        "src": "184:35:119",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 20172,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 14798,
              "src": "400:13:119",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$14798",
                "typeString": "contract Initializable"
              }
            },
            "id": 20173,
            "nodeType": "InheritanceSpecifier",
            "src": "400:13:119"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 20174,
              "name": "Upgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16409,
              "src": "419:11:119",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Upgradeable_$16409",
                "typeString": "contract Upgradeable"
              }
            },
            "id": 20175,
            "nodeType": "InheritanceSpecifier",
            "src": "419:11:119"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 20176,
              "name": "Claimable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 14052,
              "src": "436:9:119",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Claimable_$14052",
                "typeString": "contract Claimable"
              }
            },
            "id": 20177,
            "nodeType": "InheritanceSpecifier",
            "src": "436:9:119"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 20178,
              "name": "VersionableBridge",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16712,
              "src": "451:17:119",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_VersionableBridge_$16712",
                "typeString": "contract VersionableBridge"
              }
            },
            "id": 20179,
            "nodeType": "InheritanceSpecifier",
            "src": "451:17:119"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 20180,
              "name": "TokenBridgeMediator",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16261,
              "src": "474:19:119",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TokenBridgeMediator_$16261",
                "typeString": "contract TokenBridgeMediator"
              }
            },
            "id": 20181,
            "nodeType": "InheritanceSpecifier",
            "src": "474:19:119"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 20182,
              "name": "RewardableMediator",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15717,
              "src": "499:18:119",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RewardableMediator_$15717",
                "typeString": "contract RewardableMediator"
              }
            },
            "id": 20183,
            "nodeType": "InheritanceSpecifier",
            "src": "499:18:119"
          }
        ],
        "contractDependencies": [
          9266,
          11468,
          12916,
          14052,
          14172,
          14798,
          15318,
          15717,
          16261,
          16390,
          16409,
          16712
        ],
        "contractKind": "contract",
        "documentation": "@title BasicAMBNativeToErc20\n@dev Common mediator functionality for native-to-erc20 bridge intended to work on top of AMB bridge.",
        "fullyImplemented": false,
        "id": 20280,
        "linearizedBaseContracts": [
          20280,
          15717,
          16261,
          16390,
          12916,
          14172,
          11468,
          15318,
          16712,
          14052,
          16409,
          14798,
          9266
        ],
        "name": "BasicAMBNativeToErc20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 20244,
              "nodeType": "Block",
              "src": "1754:435:119",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1772:16:119",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 20207,
                            "name": "isInitialized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14797,
                            "src": "1773:13:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 20208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1773:15:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 20206,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        30716,
                        30717
                      ],
                      "referencedDeclaration": 30716,
                      "src": "1764:7:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 20210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1764:25:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20211,
                  "nodeType": "ExpressionStatement",
                  "src": "1764:25:119"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20213,
                        "name": "_bridgeContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20185,
                        "src": "1819:15:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 20212,
                      "name": "_setBridgeContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11403,
                      "src": "1800:18:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 20214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1800:35:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20215,
                  "nodeType": "ExpressionStatement",
                  "src": "1800:35:119"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20217,
                        "name": "_mediatorContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20187,
                        "src": "1877:17:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 20216,
                      "name": "_setMediatorContractOnOtherSide",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11415,
                      "src": "1845:31:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 20218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1845:50:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20219,
                  "nodeType": "ExpressionStatement",
                  "src": "1845:50:119"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20221,
                        "name": "_requestGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20197,
                        "src": "1925:16:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 20220,
                      "name": "_setRequestGasLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11434,
                      "src": "1905:19:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 20222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1905:37:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20223,
                  "nodeType": "ExpressionStatement",
                  "src": "1905:37:119"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20225,
                        "name": "_dailyLimitMaxPerTxMinPerTxArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20191,
                        "src": "1963:32:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                          "typeString": "uint256[3] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                          "typeString": "uint256[3] memory"
                        }
                      ],
                      "id": 20224,
                      "name": "_setLimits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12875,
                      "src": "1952:10:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$3_memory_ptr_$returns$__$",
                        "typeString": "function (uint256[3] memory)"
                      }
                    },
                    "id": 20226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1952:44:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20227,
                  "nodeType": "ExpressionStatement",
                  "src": "1952:44:119"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20229,
                        "name": "_executionDailyLimitExecutionMaxPerTxArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20195,
                        "src": "2026:42:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      ],
                      "id": 20228,
                      "name": "_setExecutionLimits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12915,
                      "src": "2006:19:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$2_memory_ptr_$returns$__$",
                        "typeString": "function (uint256[2] memory)"
                      }
                    },
                    "id": 20230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2006:63:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20231,
                  "nodeType": "ExpressionStatement",
                  "src": "2006:63:119"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20233,
                        "name": "_decimalShift",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20199,
                        "src": "2096:13:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 20232,
                      "name": "_setDecimalShift",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14089,
                      "src": "2079:16:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_int256_$returns$__$",
                        "typeString": "function (int256)"
                      }
                    },
                    "id": 20234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2079:31:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20235,
                  "nodeType": "ExpressionStatement",
                  "src": "2079:31:119"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20237,
                        "name": "_feeManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20203,
                        "src": "2143:11:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 20236,
                      "name": "_setFeeManagerContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15663,
                      "src": "2120:22:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 20238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2120:35:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20239,
                  "nodeType": "ExpressionStatement",
                  "src": "2120:35:119"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20241,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20201,
                        "src": "2175:6:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 20240,
                      "name": "_setOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15317,
                      "src": "2165:9:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 20242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2165:17:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20243,
                  "nodeType": "ExpressionStatement",
                  "src": "2165:17:119"
                }
              ]
            },
            "documentation": "@dev Stores the initial parameters of the mediator.\n@param _bridgeContract the address of the AMB bridge contract.\n@param _mediatorContract the address of the mediator contract on the other network.\n@param _dailyLimitMaxPerTxMinPerTxArray array with limit values for the assets to be bridged to the other network.\n  [ 0 = dailyLimit, 1 = maxPerTx, 2 = minPerTx ]\n@param _executionDailyLimitExecutionMaxPerTxArray array with limit values for the assets bridged from the other network.\n  [ 0 = executionDailyLimit, 1 = executionMaxPerTx ]\n@param _requestGasLimit the gas limit for the message execution.\n@param _decimalShift number of decimals shift required to adjust the amount of tokens bridged.\n@param _owner address of the owner of the mediator contract\n@param _feeManager address of the fee manager contract",
            "id": 20245,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "_initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20185,
                  "name": "_bridgeContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 20245,
                  "src": "1447:23:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20184,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1447:7:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20187,
                  "name": "_mediatorContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 20245,
                  "src": "1480:25:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20186,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1480:7:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20191,
                  "name": "_dailyLimitMaxPerTxMinPerTxArray",
                  "nodeType": "VariableDeclaration",
                  "scope": 20245,
                  "src": "1515:43:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                    "typeString": "uint256[3]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 20188,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1515:7:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 20190,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "33",
                      "id": 20189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1523:1:119",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "3"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1515:10:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
                      "typeString": "uint256[3]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20195,
                  "name": "_executionDailyLimitExecutionMaxPerTxArray",
                  "nodeType": "VariableDeclaration",
                  "scope": 20245,
                  "src": "1568:53:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 20192,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1568:7:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 20194,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 20193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1576:1:119",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1568:10:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20197,
                  "name": "_requestGasLimit",
                  "nodeType": "VariableDeclaration",
                  "scope": 20245,
                  "src": "1631:24:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20196,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1631:7:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20199,
                  "name": "_decimalShift",
                  "nodeType": "VariableDeclaration",
                  "scope": 20245,
                  "src": "1665:20:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 20198,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1665:6:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20201,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 20245,
                  "src": "1695:14:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20200,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1695:7:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20203,
                  "name": "_feeManager",
                  "nodeType": "VariableDeclaration",
                  "scope": 20245,
                  "src": "1719:19:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20202,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1719:7:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1437:307:119"
            },
            "payable": false,
            "returnParameters": {
              "id": 20205,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1754:0:119"
            },
            "scope": 20280,
            "src": "1417:772:119",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 20259,
              "nodeType": "Block",
              "src": "2511:33:119",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 20254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2529:1:119",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 20255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2532:1:119",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 20256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2535:1:119",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "id": 20257,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2528:9:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_rational_1_by_1_$_t_rational_1_by_1_$_t_rational_0_by_1_$",
                      "typeString": "tuple(int_const 1,int_const 1,int_const 0)"
                    }
                  },
                  "functionReturnParameters": 20253,
                  "id": 20258,
                  "nodeType": "Return",
                  "src": "2521:16:119"
                }
              ]
            },
            "documentation": "@dev Tells the bridge interface version that this contract supports.\n@return major value of the version\n@return minor value of the version\n@return patch value of the version",
            "id": 20260,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getBridgeInterfacesVersion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20246,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2443:2:119"
            },
            "payable": false,
            "returnParameters": {
              "id": 20253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20248,
                  "name": "major",
                  "nodeType": "VariableDeclaration",
                  "scope": 20260,
                  "src": "2469:12:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 20247,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2469:6:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20250,
                  "name": "minor",
                  "nodeType": "VariableDeclaration",
                  "scope": 20260,
                  "src": "2483:12:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 20249,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2483:6:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20252,
                  "name": "patch",
                  "nodeType": "VariableDeclaration",
                  "scope": 20260,
                  "src": "2497:12:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 20251,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2497:6:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2468:42:119"
            },
            "scope": 20280,
            "src": "2408:136:119",
            "stateMutability": "pure",
            "superFunction": 16706,
            "visibility": "external"
          },
          {
            "body": {
              "id": 20267,
              "nodeType": "Block",
              "src": "2746:94:119",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "30783538326564386664",
                    "id": 20265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2763:10:119",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1479465213_by_1",
                      "typeString": "int_const 1479465213"
                    },
                    "value": "0x582ed8fd"
                  },
                  "functionReturnParameters": 20264,
                  "id": 20266,
                  "nodeType": "Return",
                  "src": "2756:17:119"
                }
              ]
            },
            "documentation": "@dev Tells the bridge mode that this contract supports.\n@return _data 4 bytes representing the bridge mode",
            "id": 20268,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getBridgeMode",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20261,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2706:2:119"
            },
            "payable": false,
            "returnParameters": {
              "id": 20264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20263,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 20268,
                  "src": "2732:12:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 20262,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "2732:6:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2731:14:119"
            },
            "scope": 20280,
            "src": "2684:156:119",
            "stateMutability": "pure",
            "superFunction": 16711,
            "visibility": "external"
          },
          {
            "body": {
              "id": 20278,
              "nodeType": "Block",
              "src": "3086:25:119",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 20275,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        30718,
                        30719
                      ],
                      "referencedDeclaration": 30718,
                      "src": "3096:6:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 20276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3096:8:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20277,
                  "nodeType": "ExpressionStatement",
                  "src": "3096:8:119"
                }
              ]
            },
            "documentation": "@dev Execute the action to be performed when the bridge tokens are out of execution limits.",
            "id": 20279,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "executeActionOnBridgedTokensOutOfLimit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20273,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20270,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 20279,
                  "src": "3016:7:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20269,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3016:7:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20272,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 20279,
                  "src": "3050:7:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20271,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3050:7:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3006:70:119"
            },
            "payable": false,
            "returnParameters": {
              "id": 20274,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3086:0:119"
            },
            "scope": 20280,
            "src": "2959:152:119",
            "stateMutability": "nonpayable",
            "superFunction": 16246,
            "visibility": "internal"
          }
        ],
        "scope": 20281,
        "src": "362:2751:119"
      }
    ],
    "src": "0:3114:119"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-11-26T16:22:39.910Z",
  "devdoc": {
    "methods": {
      "bridgeContract()": {
        "details": "Get the AMB interface for the bridge contract address",
        "return": "AMB interface for the bridge contract address"
      },
      "decimalShift()": {
        "details": "Returns the value of foreign-to-home decimal shift.",
        "return": "decimal shift."
      },
      "feeManagerContract()": {
        "details": "Tells the fee manager contract address",
        "return": "the address of the fee manager contract."
      },
      "fixFailedMessage(bytes32)": {
        "details": "Handles the request to fix transferred assets which bridged message execution failed on the other network. It uses the information stored by passMessage method when the assets were initially transferred",
        "params": {
          "_messageId": "id of the message which execution failed on the other network."
        }
      },
      "getBridgeInterfacesVersion()": {
        "details": "Tells the bridge interface version that this contract supports.",
        "return": "major value of the versionminor value of the versionpatch value of the version"
      },
      "getBridgeMode()": {
        "details": "Tells the bridge mode that this contract supports.",
        "return": "_data 4 bytes representing the bridge mode"
      },
      "handleBridgedTokens(address,uint256)": {
        "details": "Handles the bridged tokens. Checks that the value is inside the execution limits and invokes the method to execute the Mint or Unlock accordingly.",
        "params": {
          "_recipient": "address that will receive the tokens",
          "_value": "amount of tokens to be received"
        }
      },
      "maxAvailablePerTx()": {
        "details": "Retrieves maximum available bridge amount per one transaction taking into account maxPerTx() and dailyLimit() parameters.",
        "return": "minimum of maxPerTx parameter and remaining daily quota."
      },
      "mediatorContractOnOtherSide()": {
        "details": "Tells the mediator contract address from the other network.",
        "return": "the address of the mediator contract."
      },
      "messageFixed(bytes32)": {
        "details": "Tells if a message sent to the AMB bridge has been fixed.",
        "return": "bool indicating the status of the message."
      },
      "owner()": {
        "details": "Tells the address of the owner",
        "return": "the address of the owner"
      },
      "requestFailedMessageFix(bytes32)": {
        "details": "Method to be called when a bridged message execution failed. It will generate a new message requesting to fix/roll back the transferred assets on the other network.",
        "params": {
          "_messageId": "id of the message which execution failed."
        }
      },
      "requestGasLimit()": {
        "details": "Tells the gas limit to be used in the message execution by the AMB bridge on the other network.",
        "return": "the gas limit for the message execution."
      },
      "setBridgeContract(address)": {
        "details": "Sets the AMB bridge contract address. Only the owner can call this method.",
        "params": {
          "_bridgeContract": "the address of the bridge contract."
        }
      },
      "setFeeManagerContract(address)": {
        "details": "Sets the fee manager contract address. Only the owner can call this method.",
        "params": {
          "_feeManager": "the address of the fee manager contract."
        }
      },
      "setMediatorContractOnOtherSide(address)": {
        "details": "Sets the mediator contract address from the other network. Only the owner can call this method.",
        "params": {
          "_mediatorContract": "the address of the mediator contract."
        }
      },
      "setRequestGasLimit(uint256)": {
        "details": "Sets the gas limit to be used in the message execution by the AMB bridge on the other network. This value can't exceed the parameter maxGasPerTx defined on the AMB bridge. Only the owner can call this method.",
        "params": {
          "_requestGasLimit": "the gas limit for the message execution."
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "the address to transfer ownership to."
        }
      }
    },
    "title": "BasicAMBNativeToErc20"
  },
  "userdoc": {
    "methods": {}
  }
}