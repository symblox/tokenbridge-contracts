{
  "contractName": "HomeStakeTokenMediator",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_receiver",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "relayTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_messageId",
          "type": "bytes32"
        }
      ],
      "name": "fixFailedMessage",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_bridgeContract",
          "type": "address"
        }
      ],
      "name": "setBridgeContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "erc677token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isFeeCollectingActivated",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_blockReward",
          "type": "address"
        }
      ],
      "name": "setBlockRewardContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_day",
          "type": "uint256"
        }
      ],
      "name": "totalSpentPerDay",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isInitialized",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_dailyLimit",
          "type": "uint256"
        }
      ],
      "name": "setExecutionDailyLimit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCurrentDay",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBridgeMode",
      "outputs": [
        {
          "name": "_data",
          "type": "bytes4"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "executionDailyLimit",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_day",
          "type": "uint256"
        }
      ],
      "name": "totalExecutedPerDay",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "blockRewardContract",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_messageId",
          "type": "bytes32"
        }
      ],
      "name": "messageFixed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "dailyLimit",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "setFee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_mediatorContract",
          "type": "address"
        }
      ],
      "name": "setMediatorContractOnOtherSide",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "mediatorContractOnOtherSide",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withinExecutionLimit",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "executionMaxPerTx",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_recipient",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "handleBridgedTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "maxAvailablePerTx",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "calculateFee",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_messageId",
          "type": "bytes32"
        }
      ],
      "name": "requestFailedMessageFix",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBridgeInterfacesVersion",
      "outputs": [
        {
          "name": "major",
          "type": "uint64"
        },
        {
          "name": "minor",
          "type": "uint64"
        },
        {
          "name": "patch",
          "type": "uint64"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "outOfLimitAmount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_minPerTx",
          "type": "uint256"
        }
      ],
      "name": "setMinPerTx",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "onTokenTransfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "messageId",
          "type": "bytes32"
        },
        {
          "name": "unlockOnOtherSide",
          "type": "bool"
        },
        {
          "name": "valueToUnlock",
          "type": "uint256"
        }
      ],
      "name": "fixAssetsAboveLimits",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_dailyLimit",
          "type": "uint256"
        }
      ],
      "name": "setDailyLimit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "requestGasLimit",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_maxPerTx",
          "type": "uint256"
        }
      ],
      "name": "setMaxPerTx",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "bridgeContract",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getFee",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimalShift",
      "outputs": [
        {
          "name": "",
          "type": "int256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "minPerTx",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withinLimit",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_maxPerTx",
          "type": "uint256"
        }
      ],
      "name": "setExecutionMaxPerTx",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_requestGasLimit",
          "type": "uint256"
        }
      ],
      "name": "setRequestGasLimit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "maxPerTx",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "FeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "messageId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "FailedMessageFixed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "messageId",
          "type": "bytes32"
        }
      ],
      "name": "TokensBridged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "newLimit",
          "type": "uint256"
        }
      ],
      "name": "DailyLimitChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "newLimit",
          "type": "uint256"
        }
      ],
      "name": "ExecutionDailyLimitChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "messageId",
          "type": "bytes32"
        }
      ],
      "name": "MediatorAmountLimitExceeded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "transactionHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "messageId",
          "type": "bytes32"
        }
      ],
      "name": "AmountLimitExceeded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "messageId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "remaining",
          "type": "uint256"
        }
      ],
      "name": "AssetAboveLimitsFixed",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_bridgeContract",
          "type": "address"
        },
        {
          "name": "_mediatorContract",
          "type": "address"
        },
        {
          "name": "_erc677token",
          "type": "address"
        },
        {
          "name": "_dailyLimitMaxPerTxMinPerTxArray",
          "type": "uint256[3]"
        },
        {
          "name": "_executionDailyLimitExecutionMaxPerTxArray",
          "type": "uint256[2]"
        },
        {
          "name": "_requestGasLimit",
          "type": "uint256"
        },
        {
          "name": "_decimalShift",
          "type": "int256"
        },
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_bridgeContract",
          "type": "address"
        },
        {
          "name": "_mediatorContract",
          "type": "address"
        },
        {
          "name": "_erc677token",
          "type": "address"
        },
        {
          "name": "_dailyLimitMaxPerTxMinPerTxArray",
          "type": "uint256[3]"
        },
        {
          "name": "_executionDailyLimitExecutionMaxPerTxArray",
          "type": "uint256[2]"
        },
        {
          "name": "_requestGasLimit",
          "type": "uint256"
        },
        {
          "name": "_decimalShift",
          "type": "int256"
        },
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_blockReward",
          "type": "address"
        },
        {
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "rewardableInitialize",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "transferTokenOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_mintHandler",
          "type": "address"
        }
      ],
      "name": "setMintHandler",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getMintHandler",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "claimTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_receiver\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"relayTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_messageId\",\"type\":\"bytes32\"}],\"name\":\"fixFailedMessage\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_bridgeContract\",\"type\":\"address\"}],\"name\":\"setBridgeContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"erc677token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isFeeCollectingActivated\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"transferTokenOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_blockReward\",\"type\":\"address\"}],\"name\":\"setBlockRewardContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_day\",\"type\":\"uint256\"}],\"name\":\"totalSpentPerDay\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isInitialized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dailyLimit\",\"type\":\"uint256\"}],\"name\":\"setExecutionDailyLimit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCurrentDay\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBridgeMode\",\"outputs\":[{\"name\":\"_data\",\"type\":\"bytes4\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"executionDailyLimit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_day\",\"type\":\"uint256\"}],\"name\":\"totalExecutedPerDay\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"blockRewardContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_messageId\",\"type\":\"bytes32\"}],\"name\":\"messageFixed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dailyLimit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"claimTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_mediatorContract\",\"type\":\"address\"}],\"name\":\"setMediatorContractOnOtherSide\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_mintHandler\",\"type\":\"address\"}],\"name\":\"setMintHandler\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMintHandler\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mediatorContractOnOtherSide\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withinExecutionLimit\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"executionMaxPerTx\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_recipient\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"handleBridgedTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxAvailablePerTx\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"calculateFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_messageId\",\"type\":\"bytes32\"}],\"name\":\"requestFailedMessageFix\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBridgeInterfacesVersion\",\"outputs\":[{\"name\":\"major\",\"type\":\"uint64\"},{\"name\":\"minor\",\"type\":\"uint64\"},{\"name\":\"patch\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"outOfLimitAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_minPerTx\",\"type\":\"uint256\"}],\"name\":\"setMinPerTx\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"onTokenTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"messageId\",\"type\":\"bytes32\"},{\"name\":\"unlockOnOtherSide\",\"type\":\"bool\"},{\"name\":\"valueToUnlock\",\"type\":\"uint256\"}],\"name\":\"fixAssetsAboveLimits\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dailyLimit\",\"type\":\"uint256\"}],\"name\":\"setDailyLimit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_bridgeContract\",\"type\":\"address\"},{\"name\":\"_mediatorContract\",\"type\":\"address\"},{\"name\":\"_erc677token\",\"type\":\"address\"},{\"name\":\"_dailyLimitMaxPerTxMinPerTxArray\",\"type\":\"uint256[3]\"},{\"name\":\"_executionDailyLimitExecutionMaxPerTxArray\",\"type\":\"uint256[2]\"},{\"name\":\"_requestGasLimit\",\"type\":\"uint256\"},{\"name\":\"_decimalShift\",\"type\":\"int256\"},{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_blockReward\",\"type\":\"address\"},{\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"rewardableInitialize\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"requestGasLimit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_bridgeContract\",\"type\":\"address\"},{\"name\":\"_mediatorContract\",\"type\":\"address\"},{\"name\":\"_erc677token\",\"type\":\"address\"},{\"name\":\"_dailyLimitMaxPerTxMinPerTxArray\",\"type\":\"uint256[3]\"},{\"name\":\"_executionDailyLimitExecutionMaxPerTxArray\",\"type\":\"uint256[2]\"},{\"name\":\"_requestGasLimit\",\"type\":\"uint256\"},{\"name\":\"_decimalShift\",\"type\":\"int256\"},{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_maxPerTx\",\"type\":\"uint256\"}],\"name\":\"setMaxPerTx\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bridgeContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimalShift\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minPerTx\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withinLimit\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_maxPerTx\",\"type\":\"uint256\"}],\"name\":\"setExecutionMaxPerTx\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_requestGasLimit\",\"type\":\"uint256\"}],\"name\":\"setRequestGasLimit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxPerTx\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"FeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"messageId\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"FailedMessageFixed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"messageId\",\"type\":\"bytes32\"}],\"name\":\"TokensBridged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newLimit\",\"type\":\"uint256\"}],\"name\":\"DailyLimitChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newLimit\",\"type\":\"uint256\"}],\"name\":\"ExecutionDailyLimitChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"messageId\",\"type\":\"bytes32\"}],\"name\":\"MediatorAmountLimitExceeded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"transactionHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"messageId\",\"type\":\"bytes32\"}],\"name\":\"AmountLimitExceeded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"messageId\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"remaining\",\"type\":\"uint256\"}],\"name\":\"AssetAboveLimitsFixed\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"blockRewardContract()\":{\"details\":\"Retrieves currently used block reward contract\",\"return\":\"configured block reward contract address\"},\"bridgeContract()\":{\"details\":\"Get the AMB interface for the bridge contract address\",\"return\":\"AMB interface for the bridge contract address\"},\"calculateFee(uint256)\":{\"details\":\"Calculates the fee amount to be subtracted from the value.\",\"params\":{\"_value\":\"the base value from which fees are calculated\"}},\"claimTokens(address,address)\":{\"details\":\"Withdraws the erc20 tokens or native coins from this contract.\",\"params\":{\"_to\":\"address of the tokens/coins receiver.\",\"_token\":\"address of the claimed token or address(0) for native coins.\"}},\"decimalShift()\":{\"details\":\"Returns the value of foreign-to-home decimal shift.\",\"return\":\"decimal shift.\"},\"erc677token()\":{\"details\":\"Public getter for token contract.\",\"return\":\"address of the used token contract\"},\"fixAssetsAboveLimits(bytes32,bool,uint256)\":{\"details\":\"Fixes locked tokens, that were out of execution limits during the call to handleBridgedTokens\",\"params\":{\"messageId\":\"reference for bridge operation that was out of execution limits\",\"unlockOnOtherSide\":\"true if fixed tokens should be unlocked to the other side of the bridge\",\"valueToUnlock\":\"unlocked amount of tokens, should be less than saved txAboveLimitsValue. Should be less than maxPerTx(), if tokens need to be unlocked on the other side.\"}},\"fixFailedMessage(bytes32)\":{\"details\":\"Handles the request to fix transferred assets which bridged message execution failed on the other network. It uses the information stored by passMessage method when the assets were initially transferred\",\"params\":{\"_messageId\":\"id of the message which execution failed on the other network.\"}},\"getFee()\":{\"details\":\"Retrieves current fee value\",\"return\":\"current value of fee, 1e18 is 100%\"},\"getMintHandler()\":{\"details\":\"Retrieves currently used contract for handling mint operations, defaults to token itself\",\"return\":\"address of mint handler contract\"},\"handleBridgedTokens(address,uint256)\":{\"details\":\"Handles the bridged tokens. Checks that the value is inside the execution limits and invokes the method to execute the Mint or Unlock accordingly.\",\"params\":{\"_recipient\":\"address that will receive the tokens\",\"_value\":\"amount of tokens to be received\"}},\"initialize(address,address,address,uint256[3],uint256[2],uint256,int256,address)\":{\"params\":{\"_bridgeContract\":\"HomeAMB bridge contract\",\"_dailyLimitMaxPerTxMinPerTxArray\":\"Home limits for outgoing transfers\",\"_decimalShift\":\"decimal shift for bridged STAKE token\",\"_erc677token\":\"address of STAKE token in the Home chain\",\"_executionDailyLimitExecutionMaxPerTxArray\":\"Home execution limits for incoming transfers\",\"_mediatorContract\":\"address of the mediator contract in the Foreign chain\",\"_owner\":\"address of new bridge owner\",\"_requestGasLimit\":\"gas limit used for AMB operations\"}},\"isFeeCollectingActivated()\":{\"details\":\"Returns the state of the fee manager configuration: whether it is ready to collect and distribute fee or not.\"},\"maxAvailablePerTx()\":{\"details\":\"Retrieves maximum available bridge amount per one transaction taking into account maxPerTx() and dailyLimit() parameters.\",\"return\":\"minimum of maxPerTx parameter and remaining daily quota.\"},\"mediatorContractOnOtherSide()\":{\"details\":\"Tells the mediator contract address from the other network.\",\"return\":\"the address of the mediator contract.\"},\"messageFixed(bytes32)\":{\"details\":\"Tells if a message sent to the AMB bridge has been fixed.\",\"return\":\"bool indicating the status of the message.\"},\"outOfLimitAmount()\":{\"details\":\"Total amount coins/tokens that were bridged from the other side and are out of execution limits.\",\"return\":\"total amount of all bridge operations above limits.\"},\"owner()\":{\"details\":\"Tells the address of the owner\",\"return\":\"the address of the owner\"},\"relayTokens(address,uint256)\":{\"details\":\"Initiates the bridge operation that will lock the amount of tokens transferred and mint the tokens on the other network. The user should first call Approve method of the ERC677 token.\",\"params\":{\"_receiver\":\"address that will receive the minted tokens on the other network.\",\"_value\":\"amount of tokens to be transferred to the other network.\"}},\"requestFailedMessageFix(bytes32)\":{\"details\":\"Method to be called when a bridged message execution failed. It will generate a new message requesting to fix/roll back the transferred assets on the other network.\",\"params\":{\"_messageId\":\"id of the message which execution failed.\"}},\"requestGasLimit()\":{\"details\":\"Tells the gas limit to be used in the message execution by the AMB bridge on the other network.\",\"return\":\"the gas limit for the message execution.\"},\"rewardableInitialize(address,address,address,uint256[3],uint256[2],uint256,int256,address,address,uint256)\":{\"params\":{\"_blockReward\":\"address of block reward contract used for fee distribution\",\"_bridgeContract\":\"HomeAMB bridge contract\",\"_dailyLimitMaxPerTxMinPerTxArray\":\"Home limits for outgoing transfers\",\"_decimalShift\":\"decimal shift for bridged STAKE token\",\"_erc677token\":\"address of STAKE token in the Home chain\",\"_executionDailyLimitExecutionMaxPerTxArray\":\"Home execution limits for incoming transfers\",\"_fee\":\"initial home fee\",\"_mediatorContract\":\"address of the mediator contract in the Foreign chain\",\"_owner\":\"address of new bridge owner\",\"_requestGasLimit\":\"gas limit used for AMB operations\"}},\"setBlockRewardContract(address)\":{\"details\":\"Updates address of currently used block reward contract\",\"params\":{\"_blockReward\":\"address of a new contract\"}},\"setBridgeContract(address)\":{\"details\":\"Sets the AMB bridge contract address. Only the owner can call this method.\",\"params\":{\"_bridgeContract\":\"the address of the bridge contract.\"}},\"setFee(uint256)\":{\"details\":\"Sets the fee percentage amount for the mediator operations. Only the owner can call this method.\",\"params\":{\"_fee\":\"the fee percentage\"}},\"setMediatorContractOnOtherSide(address)\":{\"details\":\"Sets the mediator contract address from the other network. Only the owner can call this method.\",\"params\":{\"_mediatorContract\":\"the address of the mediator contract.\"}},\"setMintHandler(address)\":{\"details\":\"Updates address of contract used for handling mint operations, all subsequent mint operations will be called through this contract\",\"params\":{\"_mintHandler\":\"address of new contract\"}},\"setRequestGasLimit(uint256)\":{\"details\":\"Sets the gas limit to be used in the message execution by the AMB bridge on the other network. This value can't exceed the parameter maxGasPerTx defined on the AMB bridge. Only the owner can call this method.\",\"params\":{\"_requestGasLimit\":\"the gas limit for the message execution.\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"the address to transfer ownership to.\"}},\"transferTokenOwnership(address)\":{\"details\":\"Allows to transfer token ownership to different proxy contract. Can be called only once, when mediator is the current owner of a token. All subsequent calls to erc677 token will be done through new proxy contract.\",\"params\":{\"_owner\":\"token proxy contract address\"}}},\"title\":\"HomeStakeTokenMediator\"},\"userdoc\":{\"methods\":{\"initialize(address,address,address,uint256[3],uint256[2],uint256,int256,address)\":{\"notice\":\"Initializes home mediator\"},\"rewardableInitialize(address,address,address,uint256[3],uint256[2],uint256,int256,address,address,uint256)\":{\"notice\":\"Initializes rewardable home mediator\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/amb_erc677_to_erc677/HomeStakeTokenMediator.sol\":\"HomeStakeTokenMediator\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/interfaces/ERC677.sol\":{\"keccak256\":\"0xa4252d5b9e3d1b536b6a5edce1b712530827fcc792438ca17fa60fb64d4463ca\",\"urls\":[\"bzzr://ca1db6e12bc9753410003682a5cb6ebfc87ee238e78ba4a3033f915c66c3c72b\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/interfaces/ERC677Receiver.sol\":{\"keccak256\":\"0x1343ae44729d851f88868c8712a9e864316badd59f8dd0988d108c2c43927ac9\",\"urls\":[\"bzzr://f3f8ad86c8f5c7e213fd5811e4362d83cf611bef3fcfd4438a876556ffbb4f16\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/interfaces/IAMB.sol\":{\"keccak256\":\"0xd95469da5c2b895e9f8b23a864f931f053efd9b22a1c0af1928e5802df74c73f\",\"urls\":[\"bzzr://ba73b8e65499bb98dba6fbbceb818784cb8122d6901960e2ef61c7a5ab254a69\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/interfaces/IBlockReward.sol\":{\"keccak256\":\"0xdb49a581a7d2b8591b75036d2fd28b44f05e7887e75d49d28899e1c4b5b42bcb\",\"urls\":[\"bzzr://2fc6833d316577caa3b305cf60a2db2c6ce1d25f810c9cd04c99c4ec61869ff7\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/interfaces/IBurnableMintableERC677Token.sol\":{\"keccak256\":\"0x74fd1c41330140ddd6dc29037ca04ee13a23a44c5c5b3c4ce284a99cc78484a1\",\"urls\":[\"bzzr://dff872387b862977ce1b000a31d08aaccb1ea3e43bf9b7403911841d1e3aabef\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/interfaces/IMintHandler.sol\":{\"keccak256\":\"0xa2a73b3fcc16a2fe00fe3e9be86e590255945fa8cf74755ae062ab3959896ad7\",\"urls\":[\"bzzr://42a46f317e5ac87f8e75082211b8b826f4fa79d1b85c7b0b41d3bad1a2de9a62\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/interfaces/IUpgradeabilityOwnerStorage.sol\":{\"keccak256\":\"0xa6b5c96c8165d49676d227a9b7070faffdb7325906a598797fe66ca5917e76ef\",\"urls\":[\"bzzr://14c7b605baba9012f1386dce78e5b2665c682ec6a5bae3f4a6ec15f98ba40aa9\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/libraries/Address.sol\":{\"keccak256\":\"0x9d5d8f089aedf9dfa743c9bc66bc901db5da5be78892af178340800873e1c722\",\"urls\":[\"bzzr://97602c15f88d529b68d7929717afa75fd03cd0f23a1363c14cd263dbcc17599e\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/libraries/Bytes.sol\":{\"keccak256\":\"0xaac87fcac1962e29a85f577dafccf09d06b413fcc5bf97e821dca0b25183c310\",\"urls\":[\"bzzr://e1a3e3f8d13a8009d505b4d20029adbbcaf4c20a92ee10a223767fbb6d093dd2\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/libraries/SafeERC20.sol\":{\"keccak256\":\"0xb1f0a33f17fee9d600a2269fecce80d79377af3aeb2922e903fe4e3b57dc0c4f\",\"urls\":[\"bzzr://e3b6f5e2a1e88e69d403cbf2925c92c662b4fe6ea28dee292948187203ac6c98\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeability/EternalStorage.sol\":{\"keccak256\":\"0x8f2df79a1cda812d4be25da8f2b138f9b7492e76da1dfba21d87012e649cc51c\",\"urls\":[\"bzzr://0846d08e1b7a84e541ae31c91d2c0b34d88cf3abbd18891ec6eedeea7e958af2\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/BaseERC677Bridge.sol\":{\"keccak256\":\"0x68adcbc23fcaf31480b6cc15c929dd7f62aed7edf48f1b50e2b0e3658b261778\",\"urls\":[\"bzzr://8bba5f8eaae0e989a9899ca07a9df296e28ba67459aad85235112e777ec69fe2\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/BaseOverdrawManagement.sol\":{\"keccak256\":\"0x29dca32b0540208e6916d86e008cabd26717857c5ad6f27788a6461b054477b0\",\"urls\":[\"bzzr://067d7023ac80eb12e11a504b87a219aab2b99ee61ea7d325d2c95dc91c26919c\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/BasicAMBMediator.sol\":{\"keccak256\":\"0x817cdf39d46eed56fdf6fc124b7163d1dc296b8b02fbc0fd34ee1948d8816eab\",\"urls\":[\"bzzr://02cf31c071d2a58a929d0fa1dae4d647ae1ce881221695a0730b66f6098cfa4a\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/BasicTokenBridge.sol\":{\"keccak256\":\"0x0ad6a56603c8bc28ab384cbb7b51a6b4eb242264f23a0f0464224f77a85a19a5\",\"urls\":[\"bzzr://fdb04b2368b6ffab36560c9231b9a90ee1982eba8027d3f4a91e6c964bef5197\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/BlockRewardBridge.sol\":{\"keccak256\":\"0xd2a368b6bbef37c0c0de2cb62bc65221a0176a9bc61eceaf25bebda6e1b5eddd\",\"urls\":[\"bzzr://007080f2afccb51bc63e9b633afeae7ed6b3539dc866246e72f987bcf82eaa33\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/ChooseReceiverHelper.sol\":{\"keccak256\":\"0xed188cae33d353543654b085650def4bf4be21304b0380fa683fbe06dbc4d3ce\",\"urls\":[\"bzzr://6c4aa7785721d11c9c8c03400e24e0049de3359b9deb55a6d8db6443183b974c\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/Claimable.sol\":{\"keccak256\":\"0xfe020277ad01d6e42674c0906fb33eeec54964e928208fdd7fc0ab68c2967773\",\"urls\":[\"bzzr://2d1d90cdfb9e0917f83bdfcc4f8398e3f035c4c62da4e79e81ad4c4252b1d979\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/DecimalShiftBridge.sol\":{\"keccak256\":\"0x9ebdcd28b12565bdb6e87b631c1aa6d7927d3f4298e368acfdd86bbf71fc2a83\",\"urls\":[\"bzzr://9f2f39db4f4778334408a2a2baa2d97b517a76929c2f7ebb1efe0cb4c77cfd23\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/ERC677Storage.sol\":{\"keccak256\":\"0x4c7b3459083f9d776c523846d2ca45a1066c5295b16acba13877f600797f625f\",\"urls\":[\"bzzr://4b738fb49963baf92c55d2a15a9fdb90a731c3a549ec2f331aef1e7e1cdf5317\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/Initializable.sol\":{\"keccak256\":\"0xed94c4128ada87141d6c640d5bf4d0a5227cd68fad16be6304a121847fe6494f\",\"urls\":[\"bzzr://2dfbb776af73c3cfe3b6d3dd4545dc7cc55694d4636c0d1043d46ace7dd42ab2\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/Ownable.sol\":{\"keccak256\":\"0xa61d31759a177fc38a5dcf34387cfc9870bbe64f946c14c380d13ddcd9aa6113\",\"urls\":[\"bzzr://7d8b5611ce1d97b28de5d10d5569fe2bd710e851f55b02d628b7a881ca9a9b40\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/ReentrancyGuard.sol\":{\"keccak256\":\"0x8eeae0c6814a239234e23b741950407be18bf86ccca5b1e2a44f53c1c2e678eb\",\"urls\":[\"bzzr://c189a949f46ce94256fc611ef07a53648519f61d121b95466f4cb4a2ab397465\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/Sacrifice.sol\":{\"keccak256\":\"0x2c8f9b5e39d33552cd16d3fdd84e58f2138042166ae9b351e97fe674f7e3f337\",\"urls\":[\"bzzr://a438edd320ea1fa8141d54002897c3a50cf6cb13b07b4088d01ffb099bb9e859\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/TokenBridgeMediator.sol\":{\"keccak256\":\"0x7bcf6f7e97e77b19dc9c91ebc02a8e7b8210fc450338a5a549b4af0ff76b0254\",\"urls\":[\"bzzr://db9f6e263190a5b0681ed7e52308e112d218bb5881cb2a391da164c126a61f6e\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/TransferInfoStorage.sol\":{\"keccak256\":\"0xf284bf49c93b62b92ba14c5eb87c1f94b4893bf7c65499f254dd6a03363071f2\",\"urls\":[\"bzzr://6cdf94e9fd04016ed2a8d3ada76e413c0aefa1d2346259a4a4c60f5eff3dde1b\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/Upgradeable.sol\":{\"keccak256\":\"0xbfbec6c479103b324cc0c2ab115b3d9d3226abdfa0ab19fccbfdf223a38a6511\",\"urls\":[\"bzzr://fcde383760b302df8f3a6bf5bb8371d1138c2c7bf6d15e1abf972180c181af8b\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/VersionableBridge.sol\":{\"keccak256\":\"0x20e13a4da2277be92631581b29607b525a6d8a1868d5f0bf43d970408e9b2bc0\",\"urls\":[\"bzzr://a8c1f803d409d79319f4907066a1e38a811f758142243bef553ae9ad2516814d\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/amb_erc677_to_erc677/BasicAMBErc677ToErc677.sol\":{\"keccak256\":\"0x91e67c030b00e168dea1c80324f2d7474ad378489b08d338d51c610fb6d2a40f\",\"urls\":[\"bzzr://0b48150dc67d7884b4516f8b89a999c274de9828d6749952cf3ab5da5049c49d\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/amb_erc677_to_erc677/BasicStakeTokenMediator.sol\":{\"keccak256\":\"0x550a81fb87ee419d693ec4450e538b2a8c8327728742711f220fac7543e7bbef\",\"urls\":[\"bzzr://5a98955508c77c4faca9d348005c14ffe565fd95db5f186759dbe25b2ca571f3\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/amb_erc677_to_erc677/HomeStakeTokenFeeManager.sol\":{\"keccak256\":\"0xef4caa70987bc3a8d3262f0fa67dbbf7d4a266ee764d5223030a4750baa40036\",\"urls\":[\"bzzr://582de6e30690059605068886d6a394de2d08bacbc2460db3f70a80fca66e355a\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/amb_erc677_to_erc677/HomeStakeTokenMediator.sol\":{\"keccak256\":\"0xe5f650522013eecfe22e1879c4b23126da114ce7067332c23531c4c8d0f41d46\",\"urls\":[\"bzzr://2b81dbec9010690d277ac1f84dce9cb85183be6e26c2ae803574b9cbc24b5c36\"]},\"openzeppelin-solidity/contracts/AddressUtils.sol\":{\"keccak256\":\"0x5ed3dc711dbb34917afff3c753adf3b0580514d1339cfedaa5a73645d8ac9b56\",\"urls\":[\"bzzr://d597eeb695a3d64766453239e973ddd65994c258ab8d5cab0d90103033ce85fc\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xa1c5e1d9ebbf654d332ca8e7a5c04a6a6a9d142eeaab3b988c2c909c81a62bef\",\"urls\":[\"bzzr://d062fb4a1b6de1f036ee0e73364a2532c4757eb68e95dd8c5cbb2d17b8732c6a\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd5feb2643c87547e65b8d6f1af02539b1dee1ad53046945e237eaa8ba649c93b\",\"urls\":[\"bzzr://69768215a261b30a376a901b83b1e6716e3916c9fd791ac67450c283e62212ad\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol\":{\"keccak256\":\"0x516a17244073b518096ced7c8c94924cb29746ef0a4b6cc6cde125ac0406a419\",\"urls\":[\"bzzr://7addb1b5cad767651b9bcd688ba5b08769c1f3b70a470e34752a7717756d090d\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50613c02806100206000396000f3006080604052600436106102375763ffffffff60e060020a60003504166301e4f53a811461023c5780630950d515146102625780630b26cf661461027a57806318d8f9c91461029b5780631c86a526146102cc57806321e6b53d146102f557806327a3e16b146103165780632bd0bb0514610337578063392e53cd146103615780633dd95d1b146103765780633e6968b61461038e578063437764df146103a357806343b37dd3146103ea5780634fb3fef7146103ff57806356b54bae14610417578063593399821461042c57806367eeba0c1461044457806369fe0e2d1461045957806369ffa08a146104715780636e5d6bea1461049857806370f62449146104b957806378aceaf2146104da578063871c0760146104ef578063879ce676146105045780638aa1949a1461051c5780638b6c0354146105315780638da5cb5b1461055557806395e54a171461056a57806399a5d7471461057f5780639a4a4395146105975780639cb7595a146105af578063a0189345146105f0578063a2a6ca2714610605578063a4c0ed361461061d578063a7444c0d1461064e578063b20d30a91461066e578063b578648314610686578063be3b625b146106d5578063c0b0d022146106ea578063c6f6f2161461077f578063cd59658314610797578063ced72f87146107ac578063dae5f0fd146107c1578063df25f3f0146107d6578063ea9f4968146107eb578063f20151e114610803578063f2fde38b1461081b578063f3b837911461083c578063f968adbe14610854575b600080fd5b34801561024857600080fd5b50610260600160a060020a0360043516602435610869565b005b34801561026e57600080fd5b506102606004356109b5565b34801561028657600080fd5b50610260600160a060020a0360043516610a84565b3480156102a757600080fd5b506102b0610aac565b60408051600160a060020a039092168252519081900360200190f35b3480156102d857600080fd5b506102e1610abb565b604080519115158252519081900360200190f35b34801561030157600080fd5b50610260600160a060020a0360043516610ae8565b34801561032257600080fd5b50610260600160a060020a0360043516610b81565b34801561034357600080fd5b5061034f600435610ba6565b60408051918252519081900360200190f35b34801561036d57600080fd5b506102e1610c63565b34801561038257600080fd5b50610260600435610cb4565b34801561039a57600080fd5b5061034f610d74565b3480156103af57600080fd5b506103b8610d7d565b604080517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff199092168252519081900360200190f35b3480156103f657600080fd5b5061034f610da1565b34801561040b57600080fd5b5061034f600435610def565b34801561042357600080fd5b506102b0610e6a565b34801561043857600080fd5b506102e1600435610e74565b34801561045057600080fd5b5061034f610f3d565b34801561046557600080fd5b50610260600435610f8b565b34801561047d57600080fd5b50610260600160a060020a0360043581169060243516610fb0565b3480156104a457600080fd5b50610260600160a060020a036004351661103c565b3480156104c557600080fd5b50610260600160a060020a0360043516611061565b3480156104e657600080fd5b506102b06110fb565b3480156104fb57600080fd5b506102b0611152565b34801561051057600080fd5b506102e16004356111a9565b34801561052857600080fd5b5061034f6111f3565b34801561053d57600080fd5b50610260600160a060020a0360043516602435611241565b34801561056157600080fd5b506102b06112c1565b34801561057657600080fd5b5061034f611318565b34801561058b57600080fd5b5061034f600435611372565b3480156105a357600080fd5b506102606004356113aa565b3480156105bb57600080fd5b506105c46116df565b6040805167ffffffffffffffff9485168152928416602084015292168183015290519081900360600190f35b3480156105fc57600080fd5b5061034f6116ea565b34801561061157600080fd5b50610260600435611738565b34801561062957600080fd5b506102e160048035600160a060020a03169060248035916044359182019101356117d4565b34801561065a57600080fd5b506102606004356024351515604435611871565b34801561067a57600080fd5b506102606004356119d4565b34801561069257600080fd5b506102e1600160a060020a0360043581169060243581169060443581169060649060c4906101043590610124359061014435811690610164351661018435611a94565b3480156106e157600080fd5b5061034f611b07565b3480156106f657600080fd5b506040805160608181019092526102e191600160a060020a03600480358216936024358316936044359093169236929160c49160649060039083908390808284375050604080518082018252949796958181019594509250600291508390839080828437509396505083359450505060208201359160400135600160a060020a03169050611b55565b34801561078b57600080fd5b50610260600435611bd7565b3480156107a357600080fd5b506102b0611c6f565b3480156107b857600080fd5b5061034f611cc6565b3480156107cd57600080fd5b5061034f611d14565b3480156107e257600080fd5b5061034f611d62565b3480156107f757600080fd5b506102e1600435611db0565b34801561080f57600080fd5b50610260600435611dfb565b34801561082757600080fd5b50610260600160a060020a0360043516611e77565b34801561084857600080fd5b50610260600435611e9c565b34801561086057600080fd5b5061034f611ec1565b600080610874611f0f565b1561087e57600080fd5b610886610aac565b915030905061089483611db0565b151561089f57600080fd5b6108b06108aa610d74565b84611f60565b6108ba6001612029565b604080517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152600160a060020a038381166024830152604482018690529151918416916323b872dd916064808201926020929091908290030181600087803b15801561092c57600080fd5b505af1158015610940573d6000803e3d6000fd5b505050506040513d602081101561095657600080fd5b5061096390506000612029565b6109af823385876040516020018082600160a060020a0316600160a060020a03166c01000000000000000000000000028152601401915050604051602081830303815290604052612084565b50505050565b6000806109c0611c6f565b600160a060020a031633146109d457600080fd5b6109dc611152565b600160a060020a03166109ed61215b565b600160a060020a031614610a0057600080fd5b610a0983610e74565b15610a1357600080fd5b610a1c836121d3565b9150610a27836122a2565b9050610a3283612325565b610a3c82826123f7565b60408051600160a060020a038416815260208101839052815185927f06297b0797e3363e96e454edd4ab62862051bf559a7a431ce09415306771d133928290030190a2505050565b610a8c6112c1565b600160a060020a03163314610aa057600080fd5b610aa98161248b565b50565b6000610ab6612509565b905090565b600080610ac6612560565b600160a060020a031614158015610ab657506000610ae2611cc6565b11905090565b610af06112c1565b600160a060020a03163314610b0457600080fd5b610b0c610aac565b600160a060020a031663f2fde38b826040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a03168152602001915050600060405180830381600087803b158015610b6657600080fd5b505af1158015610b7a573d6000803e3d6000fd5b5050505050565b610b896112c1565b600160a060020a03163314610b9d57600080fd5b610aa9816125b7565b60008060008360405160200180807f746f74616c5370656e74506572446179000000000000000000000000000000008152506010018281526020019150506040516020818303038152906040526040518082805190602001908083835b60208310610c225780518252601f199092019160209182019101610c03565b51815160209384036101000a600019018019909216911617905260408051929094018290039091208652850195909552929092016000205495945050505050565b7f0a6f646cd611241d8073675e00d1a1ff700fbf1b53fcf473de56d1e6e4b714ba60005260046020527f078d888f9b66f3f8bfa10909e31f1e16240db73449f0500afdbbe3a70da457cc5460ff1690565b610cbc6112c1565b600160a060020a03163314610cd057600080fd5b610cd86111f3565b811180610ce3575080155b1515610cee57600080fd5b7f21dbcab260e413c20dc13c28b7db95e2b423d1135f42bb8b7d5214a92270d237600090815260209081527fadd938dbd083a16bae12238cd914fca0afc7a30edb55b1cd5c7f1823f1b0e4218290556040805183815290517f9bebf928b90863f24cc31f726a3a7545efd409f1dcf552301b1ee3710da70d3b929181900390910190a150565b62015180420490565b7f16ea01e90000000000000000000000000000000000000000000000000000000090565b7f21dbcab260e413c20dc13c28b7db95e2b423d1135f42bb8b7d5214a92270d23760009081526020527fadd938dbd083a16bae12238cd914fca0afc7a30edb55b1cd5c7f1823f1b0e4215490565b60008060008360405160200180807f746f74616c45786563757465645065724461790000000000000000000000000081525060130182815260200191505060405160208183030381529060405260405180828051906020019080838360208310610c225780518252601f199092019160209182019101610c03565b6000610ab6612560565b6000600460008360405160200180807f6d65737361676546697865640000000000000000000000000000000000000000815250600c0182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b60208310610ef95780518252601f199092019160209182019101610eda565b51815160209384036101000a600019018019909216911617905260408051929094018290039091208652850195909552929092016000205460ff1695945050505050565b7f4a6a899679f26b73530d8cf1001e83b6f7702e04b6fdb98f3c62dc7e47e041a560009081526020527f1ab29a5cca988aee50edccdd61c5bcaa7ad4b29a03b7ee50f298ceccfe14cc4e5490565b610f936112c1565b600160a060020a03163314610fa757600080fd5b610aa981612818565b30600160a060020a0316636fde82026040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015610fee57600080fd5b505af1158015611002573d6000803e3d6000fd5b505050506040513d602081101561101857600080fd5b5051600160a060020a0316331461102e57600080fd5b61103882826128b2565b5050565b6110446112c1565b600160a060020a0316331461105857600080fd5b610aa9816128f5565b6110696112c1565b600160a060020a0316331461107d57600080fd5b6110868161295f565b151561109157600080fd5b7f8a8236f871f2bbb44f59e8c68b82f7587d19c987e09aba39148cc97ea004a32e60005260026020527ff5de62257e76692f16fec877f26599010536c0cb971bab5dd0f47f8f1a66c7bf8054600160a060020a031916600160a060020a0392909216919091179055565b7f8a8236f871f2bbb44f59e8c68b82f7587d19c987e09aba39148cc97ea004a32e60005260026020527ff5de62257e76692f16fec877f26599010536c0cb971bab5dd0f47f8f1a66c7bf54600160a060020a031690565b7f98aa806e31e94a687a31c65769cb99670064dd7f5a87526da075c5fb4eab988060005260026020527f0c1206883be66049a02d4937078367c00b3d71dd1a9465df969363c6ddeac96d54600160a060020a031690565b6000806111cc836111c06111bb610d74565b610def565b9063ffffffff61296716565b9050806111d7610da1565b101580156111ec57506111e86111f3565b8311155b9392505050565b7fc0ed44c192c86d1cc1ba51340b032c2766b4a2b0041031de13c46dd7104888d560009081526020527ff8e983ee86e5e377e9e34c9131b266382c3f04113d20de077f9e12663c7a646b5490565b611249611c6f565b600160a060020a0316331461125d57600080fd5b611265611152565b600160a060020a031661127661215b565b600160a060020a03161461128957600080fd5b611292816111a9565b156112b7576112a86112a2610d74565b82612974565b6112b282826129fa565b611038565b6110388282612aee565b7f02016836a56b71f0d02689e69e326f4f4c1b9057164ef592671cf0d37c8040c060005260026020527fb7802e97e87ef2842a6cce7da7ffaeaedaa2f61a6a7870b23d9d01fc9b73712e54600160a060020a031690565b6000806000806000611328611ec1565b9350611332610f3d565b925061134461133f610d74565b610ba6565b9150818311611354576000611358565b8183035b90508084106113675780611369565b835b94505050505090565b60006113a4670de0b6b3a764000061139861138b611cc6565b859063ffffffff612b8f16565b9063ffffffff612bb816565b92915050565b600060606113b6611c6f565b600160a060020a031663cb08a10c846040518263ffffffff1660e060020a028152600401808260001916600019168152602001915050602060405180830381600087803b15801561140657600080fd5b505af115801561141a573d6000803e3d6000fd5b505050506040513d602081101561143057600080fd5b50511561143c57600080fd5b30611445611c6f565b600160a060020a0316633f9a8e7e856040518263ffffffff1660e060020a028152600401808260001916600019168152602001915050602060405180830381600087803b15801561149557600080fd5b505af11580156114a9573d6000803e3d6000fd5b505050506040513d60208110156114bf57600080fd5b5051600160a060020a0316146114d457600080fd5b6114dc611152565b600160a060020a03166114ed611c6f565b600160a060020a0316634a610b04856040518263ffffffff1660e060020a028152600401808260001916600019168152602001915050602060405180830381600087803b15801561153d57600080fd5b505af1158015611551573d6000803e3d6000fd5b505050506040513d602081101561156757600080fd5b5051600160a060020a03161461157c57600080fd5b5050604080516024808201849052825180830390910181526044909101909152602081018051600160e060020a03167f0950d51500000000000000000000000000000000000000000000000000000000908117909152906115db611c6f565b600160a060020a031663dc8601b36115f1611152565b836115fa611b07565b6040518463ffffffff1660e060020a0281526004018084600160a060020a0316600160a060020a0316815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b8381101561166757818101518382015260200161164f565b50505050905090810190601f1680156116945780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b1580156116b557600080fd5b505af11580156116c9573d6000803e3d6000fd5b505050506040513d6020811015610b7a57600080fd5b600160026000909192565b7f145286dc85799b6fb9fe322391ba2d95683077b2adf34dd576dedc437e537ba760009081526020527fba10c7a68bf463c41368d64adcf7df23c0de931ea3b09f061e2dfec302fef95f5490565b6117406112c1565b600160a060020a0316331461175457600080fd5b60008111801561176a5750611767610f3d565b81105b801561177c5750611779611ec1565b81105b151561178757600080fd5b7fbbb088c505d18e049d114c7c91f11724e69c55ad6c5397e2b929e68b41fa05d160009081526020527f8df5c48c6b6e11d97548adc824ba0c99103ec09830fa5d53a179984085e6eaa055565b6000806117df610aac565b905033600160a060020a038216146117f657600080fd5b6117fe611f0f565b15156118295761180d85611db0565b151561181857600080fd5b611829611823610d74565b86611f60565b61186581878787878080601f01602080910402602001604051908101604052809392919081815260200183838082843750612084945050505050565b50600195945050505050565b600080600030600160a060020a0316636fde82026040518163ffffffff1660e060020a028152600401602060405180830381600087803b1580156118b457600080fd5b505af11580156118c8573d6000803e3d6000fd5b505050506040513d60208110156118de57600080fd5b5051600160a060020a031633146118f457600080fd5b6118fd86612bcd565b9093509150600160a060020a0383161580159061191a5750600082115b80156119265750838210155b151561193157600080fd5b61195161194c856119406116ea565b9063ffffffff612d5416565b612d66565b611961828563ffffffff612d5416565b905061196d8187612db3565b6040805185815260208101839052815188927f5bcec6564fe8d2cbb4e4eb8237510ceb6b291a5c2ee2e429948d25e9c924c1fa928290030190a284156119cc576119b5611ec1565b8411156119c157600080fd5b6119cc838486612e35565b505050505050565b6119dc6112c1565b600160a060020a031633146119f057600080fd5b6119f8611ec1565b811180611a03575080155b1515611a0e57600080fd5b7f4a6a899679f26b73530d8cf1001e83b6f7702e04b6fdb98f3c62dc7e47e041a5600090815260209081527f1ab29a5cca988aee50edccdd61c5bcaa7ad4b29a03b7ee50f298ceccfe14cc4e8290556040805183815290517fad4123ae17c414d9c6d2fec478b402e6b01856cc250fd01fbfd252fda0089d3c929181900390910190a150565b6000611a9f82612818565b611aa8836125b7565b611af88b8b8b8b6003806020026040519081016040528092919082600360200280828437505060408051808201825293508f925060029150839083908082843782019150505050508b8b8b611b55565b9b9a5050505050505050505050565b7f2dfd6c9f781bb6bbb5369c114e949b69ebb440ef3d4dd6b2836225eb1dc3a2be60009081526020527f2de0d2cdc19d356cb53b5984f91bfd3b31fe0c678a0d190a6db39274bb34753f5490565b7f8a8236f871f2bbb44f59e8c68b82f7587d19c987e09aba39148cc97ea004a32e600090815260026020527ff5de62257e76692f16fec877f26599010536c0cb971bab5dd0f47f8f1a66c7bf8054600160a060020a031916600160a060020a038916179055611bca8989898989898989612fbf565b9998505050505050505050565b611bdf6112c1565b600160a060020a03163314611bf357600080fd5b801580611c175750611c03611d62565b81118015611c175750611c14610f3d565b81105b1515611c2257600080fd5b7f0f8803acad17c63ee38bf2de71e1888bc7a079a6f73658e274b08018bea4e29c60009081526020527f9de0f81379b4d8e60fe509315d071b56e7b732abaf193e74e0d15808b0951d0955565b7f811bbb11e8899da471f0e69a3ed55090fc90215227fc5fb1cb0d6e962ea7b74f60005260026020527fb4ed64697d3ef8518241966f7c6f28b0d72f20f51198717d198d2d55076c593d54600160a060020a031690565b7f241773621b963145d8e249ca69b0240df7de56fca52fb3ec9e2ddd08a968570e60009081526020527f5a69665d049b580e222420a3d5bc58a062e4ab28243d1b83814ab8de398d3a175490565b7f1e8ecaafaddea96ed9ac6d2642dcdfe1bebe58a930b1085842d8fc122b371ee560009081526020527fd5c78dd9468716ca9bb96be25d56436811b20aab3523a9904b12deef1cab239d5490565b7fbbb088c505d18e049d114c7c91f11724e69c55ad6c5397e2b929e68b41fa05d160009081526020527f8df5c48c6b6e11d97548adc824ba0c99103ec09830fa5d53a179984085e6eaa05490565b600080611dc2836111c061133f610d74565b905080611dcd610f3d565b10158015611de25750611dde611ec1565b8311155b80156111ec5750611df1611d62565b9092101592915050565b611e036112c1565b600160a060020a03163314611e1757600080fd5b611e1f610da1565b8110611e2a57600080fd5b7fc0ed44c192c86d1cc1ba51340b032c2766b4a2b0041031de13c46dd7104888d560009081526020527ff8e983ee86e5e377e9e34c9131b266382c3f04113d20de077f9e12663c7a646b55565b611e7f6112c1565b600160a060020a03163314611e9357600080fd5b610aa981613169565b611ea46112c1565b600160a060020a03163314611eb857600080fd5b610aa981613233565b7f0f8803acad17c63ee38bf2de71e1888bc7a079a6f73658e274b08018bea4e29c60009081526020527f9de0f81379b4d8e60fe509315d071b56e7b732abaf193e74e0d15808b0951d095490565b7f6168652c307c1e813ca11cfb3a601f1cf3b22452021a5052d8b05f1f1f8a3e9260005260046020527fcb8d022f2163402334a4962e3279c5def3417d3d8dab9e27ba26e81e3f8337845460ff1690565b611f6d816111c084610ba6565b6000808460405160200180807f746f74616c5370656e74506572446179000000000000000000000000000000008152506010018281526020019150506040516020818303038152906040526040518082805190602001908083835b60208310611fe75780518252601f199092019160209182019101611fc8565b51815160209384036101000a60001901801990921691161790526040805192909401829003909120865285019590955292909201600020939093555050505050565b7f6168652c307c1e813ca11cfb3a601f1cf3b22452021a5052d8b05f1f1f8a3e9260005260046020527fcb8d022f2163402334a4962e3279c5def3417d3d8dab9e27ba26e81e3f833784805460ff1916911515919091179055565b600061208e611f0f565b1515610b7a5784600160a060020a03166342966c68846040518263ffffffff1660e060020a02815260040180828152602001915050600060405180830381600087803b1580156120dd57600080fd5b505af11580156120f1573d6000803e3d6000fd5b505050506120fd610abb565b156121475761210b83611372565b90506121308461211b8685613294565b61212b868563ffffffff612d5416565b612e35565b600081111561214257612142816132ee565b610b7a565b610b7a846121558685613294565b85612e35565b6000612165611c6f565b600160a060020a031663d67bdd256040518163ffffffff1660e060020a028152600401602060405180830381600087803b1580156121a257600080fd5b505af11580156121b6573d6000803e3d6000fd5b505050506040513d60208110156121cc57600080fd5b5051905090565b6000600260008360405160200180807f6d657373616765526563697069656e740000000000000000000000000000000081525060100182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b602083106122585780518252601f199092019160209182019101612239565b51815160209384036101000a6000190180199092169116179052604080519290940182900390912086528501959095529290920160002054600160a060020a031695945050505050565b60008060008360405160200180807f6d65737361676556616c75650000000000000000000000000000000000000000815250600c01826000191660001916815260200191505060405160208183030381529060405260405180828051906020019080838360208310610c225780518252601f199092019160209182019101610c03565b6001600460008360405160200180807f6d65737361676546697865640000000000000000000000000000000000000000815250600c0182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b602083106123aa5780518252601f19909201916020918201910161238b565b51815160209384036101000a60001901801990921691161790526040805192909401829003909120865285019590955292909201600020805460ff19169415159490941790935550505050565b6123ff6110fb565b600160a060020a03166340c10f1983836040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b15801561246157600080fd5b505af1158015612475573d6000803e3d6000fd5b505050506040513d60208110156109af57600080fd5b6124948161295f565b151561249f57600080fd5b7f811bbb11e8899da471f0e69a3ed55090fc90215227fc5fb1cb0d6e962ea7b74f60005260026020527fb4ed64697d3ef8518241966f7c6f28b0d72f20f51198717d198d2d55076c593d8054600160a060020a031916600160a060020a0392909216919091179055565b7fa8b0ade3e2b734f043ce298aca4cc8d19d74270223f34531d0988b7d00cba21d60005260026020527f603cd9dcbfa185d5c37504f4c8b3f16117ed744fba48d08b7aad44a162af1c9354600160a060020a031690565b7f20ae0b8a761b32f3124efb075f427dd6ca669e88ae7747fec9fd1ad688699f3260005260026020527fd76793c705b076d97d490f0c1e5a620caae2c4973213dc37ef69a1be2a5ec07054600160a060020a031690565b60006125c28261295f565b15156125cd57600080fd5b6000905081600160a060020a0316632ee57f8d60e060020a0260e060020a90046040518163ffffffff1660e060020a0281526004016000604051808303816000875af192505050156126ea5760405180807f626c6f636b526577617264000000000000000000000000000000000000000000815250600b0190506040518091039020600160e060020a03191682600160a060020a0316632ee57f8d6040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561269757600080fd5b505af11580156126ab573d6000803e3d6000fd5b505050506040513d60208110156126c157600080fd5b50517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161490506127a1565b81600160a060020a03166310f2ee7c60e060020a0260e060020a90046040518163ffffffff1660e060020a0281526004016000604051808303816000875af192505050156127a15781600160a060020a03166310f2ee7c6040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561277057600080fd5b505af1158015612784573d6000803e3d6000fd5b505050506040513d602081101561279a57600080fd5b5051151590505b8015156127ad57600080fd5b507f20ae0b8a761b32f3124efb075f427dd6ca669e88ae7747fec9fd1ad688699f3260005260026020527fd76793c705b076d97d490f0c1e5a620caae2c4973213dc37ef69a1be2a5ec0708054600160a060020a031916600160a060020a0392909216919091179055565b670de0b6b3a7640000811061282c57600080fd5b7f241773621b963145d8e249ca69b0240df7de56fca52fb3ec9e2ddd08a968570e600090815260209081527f5a69665d049b580e222420a3d5bc58a062e4ab28243d1b83814ab8de398d3a178290556040805183815290517f8c4d35e54a3f2ef1134138fd8ea3daee6a3c89e10d2665996babdf70261e2c76929181900390910190a150565b80600160a060020a03811615156128c857600080fd5b600160a060020a03831615156128e6576128e18261333e565b6128f0565b6128f0838361334a565b505050565b7f98aa806e31e94a687a31c65769cb99670064dd7f5a87526da075c5fb4eab988060005260026020527f0c1206883be66049a02d4937078367c00b3d71dd1a9465df969363c6ddeac96d8054600160a060020a031916600160a060020a0392909216919091179055565b6000903b1190565b818101828110156113a457fe5b612981816111c084610def565b6000808460405160200180807f746f74616c45786563757465645065724461790000000000000000000000000081525060130182815260200191505060405160208183030381529060405260405180828051906020019080838360208310611fe75780518252601f199092019160209182019101611fc8565b600080612a06836133f7565b9150612a1061340a565b9050612a1a6110fb565b600160a060020a03166340c10f1985846040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b158015612a7c57600080fd5b505af1158015612a90573d6000803e3d6000fd5b505050506040513d6020811015612aa657600080fd5b50506040805183815290518291600160a060020a038716917f2f9a6098d4503a127779ba975f5f6b04f842362b1809f346989e9abc0b4dedb69181900360200190a350505050565b6000806000612afb61340a565b9250612b0683612bcd565b9092509050600160a060020a038216158015612b20575080155b1515612b2b57600080fd5b612b3a61194c856111c06116ea565b612b45858585613451565b60408051600160a060020a038716815260208101869052815185927f3344bbb992063ed4b833dabd5d5e55fc18df085bb96654e83aafbfe22e4116ff928290030190a25050505050565b6000821515612ba0575060006113a4565b50818102818382811515612bb057fe5b04146113a457fe5b60008183811515612bc557fe5b049392505050565b600080600260008460405160200180807f74784f75744f664c696d6974526563697069656e74000000000000000000000081525060150182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b60208310612c535780518252601f199092019160209182019101612c34565b51815160209384036101000a600019018019909216911617905260408051929094018290039091208652858101969096525092830160009081205484517f74784f75744f664c696d697456616c75650000000000000000000000000000008188015260318082018b9052865180830390910181526051909101958690528051600160a060020a0390921698509195869592945091925082918401908083835b60208310612d115780518252601f199092019160209182019101612cf2565b51815160209384036101000a6000190180199092169116179052604080519290940182900390912086528501959095529290920160002054949694955050505050565b600082821115612d6057fe5b50900390565b7f145286dc85799b6fb9fe322391ba2d95683077b2adf34dd576dedc437e537ba760009081526020527fba10c7a68bf463c41368d64adcf7df23c0de931ea3b09f061e2dfec302fef95f55565b816000808360405160200180807f74784f75744f664c696d697456616c7565000000000000000000000000000000815250601101826000191660001916815260200191505060405160208183030381529060405260405180828051906020019080838360208310611fe75780518252601f199092019160209182019101611fc8565b60408051600160a060020a03841660248201526044808201849052825180830390910181526064909101909152602081018051600160e060020a03167f8b6c035400000000000000000000000000000000000000000000000000000000908117909152906000612ea3611c6f565b600160a060020a031663dc8601b3612eb9611152565b84612ec2611b07565b6040518463ffffffff1660e060020a0281526004018084600160a060020a0316600160a060020a0316815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b83811015612f2f578181015183820152602001612f17565b50505050905090810190601f168015612f5c5780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b158015612f7d57600080fd5b505af1158015612f91573d6000803e3d6000fd5b505050506040513d6020811015612fa757600080fd5b50519050612fb5818561353a565b6119cc81876135bc565b6040805160048152602481018252602081018051600160e060020a03167f6fde8202000000000000000000000000000000000000000000000000000000001781529151815160009330939291829190808383895b8381101561302b578181015183820152602001613013565b50505050905090810190601f1680156130585780820380516001836020036101000a031916815260200191505b509150506000604051808303816000865af191505015806130ea575030600160a060020a0316636fde82026040518163ffffffff1660e060020a028152600401602060405180830381600087803b1580156130b257600080fd5b505af11580156130c6573d6000803e3d6000fd5b505050506040513d60208110156130dc57600080fd5b5051600160a060020a031633145b806130f457503330145b15156130ff57600080fd5b613107610c63565b1561311157600080fd5b61311a8961248b565b613123886128f5565b61312c8761369d565b6131358661371b565b61313e85613878565b61314784613233565b6131508361394d565b61315982613169565b6131616139b6565b611bca610c63565b600160a060020a038116151561317e57600080fd5b7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e06131a76112c1565b60408051600160a060020a03928316815291841660208301528051918290030190a17f02016836a56b71f0d02689e69e326f4f4c1b9057164ef592671cf0d37c8040c060005260026020527fb7802e97e87ef2842a6cce7da7ffaeaedaa2f61a6a7870b23d9d01fc9b73712e8054600160a060020a031916600160a060020a0392909216919091179055565b61323b613a0d565b81111561324757600080fd5b7f2dfd6c9f781bb6bbb5369c114e949b69ebb440ef3d4dd6b2836225eb1dc3a2be60009081526020527f2de0d2cdc19d356cb53b5984f91bfd3b31fe0c678a0d190a6db39274bb34753f55565b80518290600010156113a45781516014146132ae57600080fd5b6132b782613a54565b9050600160a060020a03811615156132ce57600080fd5b6132d6613a5b565b600160a060020a03828116911614156113a457600080fd5b6132f6612560565b600160a060020a03166362178478826040518263ffffffff1660e060020a02815260040180828152602001915050600060405180830381600087803b158015610b6657600080fd5b30316110388282613a65565b604080517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290518391600091600160a060020a038416916370a0823191602480830192602092919082900301818787803b1580156133af57600080fd5b505af11580156133c3573d6000803e3d6000fd5b505050506040513d60208110156133d957600080fd5b505190506109af600160a060020a038516848363ffffffff613ac616565b60006113a482613405611d14565b613b5b565b6000613414611c6f565b600160a060020a031663669f618b6040518163ffffffff1660e060020a028152600401602060405180830381600087803b1580156121a257600080fd5b82600260008360405160200180807f74784f75744f664c696d6974526563697069656e74000000000000000000000081525060150182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b602083106134d55780518252601f1990920191602091820191016134b6565b51815160209384036101000a600019018019909216911617905260408051929094018290039091208652850195909552929092016000208054600160a060020a031916600160a060020a039590951694909417909355506128f0915083905082612db3565b806000808460405160200180807f6d65737361676556616c75650000000000000000000000000000000000000000815250600c01826000191660001916815260200191505060405160208183030381529060405260405180828051906020019080838360208310611fe75780518252601f199092019160209182019101611fc8565b80600260008460405160200180807f6d657373616765526563697069656e740000000000000000000000000000000081525060100182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b602083106136405780518252601f199092019160209182019101613621565b51815160209384036101000a600019018019909216911617905260408051929094018290039091208652850195909552929092016000208054600160a060020a031916600160a060020a0395909516949094179093555050505050565b6136a68161295f565b15156136b157600080fd5b7fa8b0ade3e2b734f043ce298aca4cc8d19d74270223f34531d0988b7d00cba21d60005260026020527f603cd9dcbfa185d5c37504f4c8b3f16117ed744fba48d08b7aad44a162af1c938054600160a060020a031916600160a060020a0392909216919091179055565b60408101516000108015613736575060408101516020820151115b8015613746575060208101518151115b151561375157600080fd5b80517f4a6a899679f26b73530d8cf1001e83b6f7702e04b6fdb98f3c62dc7e47e041a5600090815260208181527f1ab29a5cca988aee50edccdd61c5bcaa7ad4b29a03b7ee50f298ceccfe14cc4e92909255908201517f0f8803acad17c63ee38bf2de71e1888bc7a079a6f73658e274b08018bea4e29c82527f9de0f81379b4d8e60fe509315d071b56e7b732abaf193e74e0d15808b0951d095560408201517fbbb088c505d18e049d114c7c91f11724e69c55ad6c5397e2b929e68b41fa05d182527f8df5c48c6b6e11d97548adc824ba0c99103ec09830fa5d53a179984085e6eaa0557fad4123ae17c414d9c6d2fec478b402e6b01856cc250fd01fbfd252fda0089d3c9082905b60200201516040518082815260200191505060405180910390a150565b805160208201511061388957600080fd5b80517f21dbcab260e413c20dc13c28b7db95e2b423d1135f42bb8b7d5214a92270d237600090815260208181527fadd938dbd083a16bae12238cd914fca0afc7a30edb55b1cd5c7f1823f1b0e42192909255908201517fc0ed44c192c86d1cc1ba51340b032c2766b4a2b0041031de13c46dd7104888d582527ff8e983ee86e5e377e9e34c9131b266382c3f04113d20de077f9e12663c7a646b557f9bebf928b90863f24cc31f726a3a7545efd409f1dcf552301b1ee3710da70d3b90829061385b565b604c198113801561395e5750604d81125b151561396957600080fd5b7f1e8ecaafaddea96ed9ac6d2642dcdfe1bebe58a930b1085842d8fc122b371ee560009081526020527fd5c78dd9468716ca9bb96be25d56436811b20aab3523a9904b12deef1cab239d55565b7f0a6f646cd611241d8073675e00d1a1ff700fbf1b53fcf473de56d1e6e4b714ba60005260046020527f078d888f9b66f3f8bfa10909e31f1e16240db73449f0500afdbbe3a70da457cc805460ff19166001179055565b6000613a17611c6f565b600160a060020a031663e5789d036040518163ffffffff1660e060020a028152600401602060405180830381600087803b1580156121a257600080fd5b6014015190565b6000610ab6611152565b604051600160a060020a0383169082156108fc029083906000818181858888f193505050501515611038578082613a9a613ba6565b600160a060020a039091168152604051908190036020019082f080158015610b7a573d6000803e3d6000fd5b82600160a060020a031663a9059cbb83836040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050600060405180830381600087803b158015613b2957600080fd5b505af1158015613b3d573d6000803e3d6000fd5b505050503d156128f05760206000803e60005115156128f057600080fd5b6000811515613b6b5750816113a4565b6000821315613b8f57613b8883600a84900a63ffffffff612b8f16565b90506113a4565b6111ec836000849003600a0a63ffffffff612bb816565b604051602180613bb6833901905600608060405260405160208060218339810160405251600160a060020a038116ff00a165627a7a7230582053734d5c1d9e43495bc1a2c510cfa24c55210b408890a0745040e5a59d19314e0029",
  "deployedBytecode": "0x6080604052600436106102375763ffffffff60e060020a60003504166301e4f53a811461023c5780630950d515146102625780630b26cf661461027a57806318d8f9c91461029b5780631c86a526146102cc57806321e6b53d146102f557806327a3e16b146103165780632bd0bb0514610337578063392e53cd146103615780633dd95d1b146103765780633e6968b61461038e578063437764df146103a357806343b37dd3146103ea5780634fb3fef7146103ff57806356b54bae14610417578063593399821461042c57806367eeba0c1461044457806369fe0e2d1461045957806369ffa08a146104715780636e5d6bea1461049857806370f62449146104b957806378aceaf2146104da578063871c0760146104ef578063879ce676146105045780638aa1949a1461051c5780638b6c0354146105315780638da5cb5b1461055557806395e54a171461056a57806399a5d7471461057f5780639a4a4395146105975780639cb7595a146105af578063a0189345146105f0578063a2a6ca2714610605578063a4c0ed361461061d578063a7444c0d1461064e578063b20d30a91461066e578063b578648314610686578063be3b625b146106d5578063c0b0d022146106ea578063c6f6f2161461077f578063cd59658314610797578063ced72f87146107ac578063dae5f0fd146107c1578063df25f3f0146107d6578063ea9f4968146107eb578063f20151e114610803578063f2fde38b1461081b578063f3b837911461083c578063f968adbe14610854575b600080fd5b34801561024857600080fd5b50610260600160a060020a0360043516602435610869565b005b34801561026e57600080fd5b506102606004356109b5565b34801561028657600080fd5b50610260600160a060020a0360043516610a84565b3480156102a757600080fd5b506102b0610aac565b60408051600160a060020a039092168252519081900360200190f35b3480156102d857600080fd5b506102e1610abb565b604080519115158252519081900360200190f35b34801561030157600080fd5b50610260600160a060020a0360043516610ae8565b34801561032257600080fd5b50610260600160a060020a0360043516610b81565b34801561034357600080fd5b5061034f600435610ba6565b60408051918252519081900360200190f35b34801561036d57600080fd5b506102e1610c63565b34801561038257600080fd5b50610260600435610cb4565b34801561039a57600080fd5b5061034f610d74565b3480156103af57600080fd5b506103b8610d7d565b604080517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff199092168252519081900360200190f35b3480156103f657600080fd5b5061034f610da1565b34801561040b57600080fd5b5061034f600435610def565b34801561042357600080fd5b506102b0610e6a565b34801561043857600080fd5b506102e1600435610e74565b34801561045057600080fd5b5061034f610f3d565b34801561046557600080fd5b50610260600435610f8b565b34801561047d57600080fd5b50610260600160a060020a0360043581169060243516610fb0565b3480156104a457600080fd5b50610260600160a060020a036004351661103c565b3480156104c557600080fd5b50610260600160a060020a0360043516611061565b3480156104e657600080fd5b506102b06110fb565b3480156104fb57600080fd5b506102b0611152565b34801561051057600080fd5b506102e16004356111a9565b34801561052857600080fd5b5061034f6111f3565b34801561053d57600080fd5b50610260600160a060020a0360043516602435611241565b34801561056157600080fd5b506102b06112c1565b34801561057657600080fd5b5061034f611318565b34801561058b57600080fd5b5061034f600435611372565b3480156105a357600080fd5b506102606004356113aa565b3480156105bb57600080fd5b506105c46116df565b6040805167ffffffffffffffff9485168152928416602084015292168183015290519081900360600190f35b3480156105fc57600080fd5b5061034f6116ea565b34801561061157600080fd5b50610260600435611738565b34801561062957600080fd5b506102e160048035600160a060020a03169060248035916044359182019101356117d4565b34801561065a57600080fd5b506102606004356024351515604435611871565b34801561067a57600080fd5b506102606004356119d4565b34801561069257600080fd5b506102e1600160a060020a0360043581169060243581169060443581169060649060c4906101043590610124359061014435811690610164351661018435611a94565b3480156106e157600080fd5b5061034f611b07565b3480156106f657600080fd5b506040805160608181019092526102e191600160a060020a03600480358216936024358316936044359093169236929160c49160649060039083908390808284375050604080518082018252949796958181019594509250600291508390839080828437509396505083359450505060208201359160400135600160a060020a03169050611b55565b34801561078b57600080fd5b50610260600435611bd7565b3480156107a357600080fd5b506102b0611c6f565b3480156107b857600080fd5b5061034f611cc6565b3480156107cd57600080fd5b5061034f611d14565b3480156107e257600080fd5b5061034f611d62565b3480156107f757600080fd5b506102e1600435611db0565b34801561080f57600080fd5b50610260600435611dfb565b34801561082757600080fd5b50610260600160a060020a0360043516611e77565b34801561084857600080fd5b50610260600435611e9c565b34801561086057600080fd5b5061034f611ec1565b600080610874611f0f565b1561087e57600080fd5b610886610aac565b915030905061089483611db0565b151561089f57600080fd5b6108b06108aa610d74565b84611f60565b6108ba6001612029565b604080517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152600160a060020a038381166024830152604482018690529151918416916323b872dd916064808201926020929091908290030181600087803b15801561092c57600080fd5b505af1158015610940573d6000803e3d6000fd5b505050506040513d602081101561095657600080fd5b5061096390506000612029565b6109af823385876040516020018082600160a060020a0316600160a060020a03166c01000000000000000000000000028152601401915050604051602081830303815290604052612084565b50505050565b6000806109c0611c6f565b600160a060020a031633146109d457600080fd5b6109dc611152565b600160a060020a03166109ed61215b565b600160a060020a031614610a0057600080fd5b610a0983610e74565b15610a1357600080fd5b610a1c836121d3565b9150610a27836122a2565b9050610a3283612325565b610a3c82826123f7565b60408051600160a060020a038416815260208101839052815185927f06297b0797e3363e96e454edd4ab62862051bf559a7a431ce09415306771d133928290030190a2505050565b610a8c6112c1565b600160a060020a03163314610aa057600080fd5b610aa98161248b565b50565b6000610ab6612509565b905090565b600080610ac6612560565b600160a060020a031614158015610ab657506000610ae2611cc6565b11905090565b610af06112c1565b600160a060020a03163314610b0457600080fd5b610b0c610aac565b600160a060020a031663f2fde38b826040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a03168152602001915050600060405180830381600087803b158015610b6657600080fd5b505af1158015610b7a573d6000803e3d6000fd5b5050505050565b610b896112c1565b600160a060020a03163314610b9d57600080fd5b610aa9816125b7565b60008060008360405160200180807f746f74616c5370656e74506572446179000000000000000000000000000000008152506010018281526020019150506040516020818303038152906040526040518082805190602001908083835b60208310610c225780518252601f199092019160209182019101610c03565b51815160209384036101000a600019018019909216911617905260408051929094018290039091208652850195909552929092016000205495945050505050565b7f0a6f646cd611241d8073675e00d1a1ff700fbf1b53fcf473de56d1e6e4b714ba60005260046020527f078d888f9b66f3f8bfa10909e31f1e16240db73449f0500afdbbe3a70da457cc5460ff1690565b610cbc6112c1565b600160a060020a03163314610cd057600080fd5b610cd86111f3565b811180610ce3575080155b1515610cee57600080fd5b7f21dbcab260e413c20dc13c28b7db95e2b423d1135f42bb8b7d5214a92270d237600090815260209081527fadd938dbd083a16bae12238cd914fca0afc7a30edb55b1cd5c7f1823f1b0e4218290556040805183815290517f9bebf928b90863f24cc31f726a3a7545efd409f1dcf552301b1ee3710da70d3b929181900390910190a150565b62015180420490565b7f16ea01e90000000000000000000000000000000000000000000000000000000090565b7f21dbcab260e413c20dc13c28b7db95e2b423d1135f42bb8b7d5214a92270d23760009081526020527fadd938dbd083a16bae12238cd914fca0afc7a30edb55b1cd5c7f1823f1b0e4215490565b60008060008360405160200180807f746f74616c45786563757465645065724461790000000000000000000000000081525060130182815260200191505060405160208183030381529060405260405180828051906020019080838360208310610c225780518252601f199092019160209182019101610c03565b6000610ab6612560565b6000600460008360405160200180807f6d65737361676546697865640000000000000000000000000000000000000000815250600c0182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b60208310610ef95780518252601f199092019160209182019101610eda565b51815160209384036101000a600019018019909216911617905260408051929094018290039091208652850195909552929092016000205460ff1695945050505050565b7f4a6a899679f26b73530d8cf1001e83b6f7702e04b6fdb98f3c62dc7e47e041a560009081526020527f1ab29a5cca988aee50edccdd61c5bcaa7ad4b29a03b7ee50f298ceccfe14cc4e5490565b610f936112c1565b600160a060020a03163314610fa757600080fd5b610aa981612818565b30600160a060020a0316636fde82026040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015610fee57600080fd5b505af1158015611002573d6000803e3d6000fd5b505050506040513d602081101561101857600080fd5b5051600160a060020a0316331461102e57600080fd5b61103882826128b2565b5050565b6110446112c1565b600160a060020a0316331461105857600080fd5b610aa9816128f5565b6110696112c1565b600160a060020a0316331461107d57600080fd5b6110868161295f565b151561109157600080fd5b7f8a8236f871f2bbb44f59e8c68b82f7587d19c987e09aba39148cc97ea004a32e60005260026020527ff5de62257e76692f16fec877f26599010536c0cb971bab5dd0f47f8f1a66c7bf8054600160a060020a031916600160a060020a0392909216919091179055565b7f8a8236f871f2bbb44f59e8c68b82f7587d19c987e09aba39148cc97ea004a32e60005260026020527ff5de62257e76692f16fec877f26599010536c0cb971bab5dd0f47f8f1a66c7bf54600160a060020a031690565b7f98aa806e31e94a687a31c65769cb99670064dd7f5a87526da075c5fb4eab988060005260026020527f0c1206883be66049a02d4937078367c00b3d71dd1a9465df969363c6ddeac96d54600160a060020a031690565b6000806111cc836111c06111bb610d74565b610def565b9063ffffffff61296716565b9050806111d7610da1565b101580156111ec57506111e86111f3565b8311155b9392505050565b7fc0ed44c192c86d1cc1ba51340b032c2766b4a2b0041031de13c46dd7104888d560009081526020527ff8e983ee86e5e377e9e34c9131b266382c3f04113d20de077f9e12663c7a646b5490565b611249611c6f565b600160a060020a0316331461125d57600080fd5b611265611152565b600160a060020a031661127661215b565b600160a060020a03161461128957600080fd5b611292816111a9565b156112b7576112a86112a2610d74565b82612974565b6112b282826129fa565b611038565b6110388282612aee565b7f02016836a56b71f0d02689e69e326f4f4c1b9057164ef592671cf0d37c8040c060005260026020527fb7802e97e87ef2842a6cce7da7ffaeaedaa2f61a6a7870b23d9d01fc9b73712e54600160a060020a031690565b6000806000806000611328611ec1565b9350611332610f3d565b925061134461133f610d74565b610ba6565b9150818311611354576000611358565b8183035b90508084106113675780611369565b835b94505050505090565b60006113a4670de0b6b3a764000061139861138b611cc6565b859063ffffffff612b8f16565b9063ffffffff612bb816565b92915050565b600060606113b6611c6f565b600160a060020a031663cb08a10c846040518263ffffffff1660e060020a028152600401808260001916600019168152602001915050602060405180830381600087803b15801561140657600080fd5b505af115801561141a573d6000803e3d6000fd5b505050506040513d602081101561143057600080fd5b50511561143c57600080fd5b30611445611c6f565b600160a060020a0316633f9a8e7e856040518263ffffffff1660e060020a028152600401808260001916600019168152602001915050602060405180830381600087803b15801561149557600080fd5b505af11580156114a9573d6000803e3d6000fd5b505050506040513d60208110156114bf57600080fd5b5051600160a060020a0316146114d457600080fd5b6114dc611152565b600160a060020a03166114ed611c6f565b600160a060020a0316634a610b04856040518263ffffffff1660e060020a028152600401808260001916600019168152602001915050602060405180830381600087803b15801561153d57600080fd5b505af1158015611551573d6000803e3d6000fd5b505050506040513d602081101561156757600080fd5b5051600160a060020a03161461157c57600080fd5b5050604080516024808201849052825180830390910181526044909101909152602081018051600160e060020a03167f0950d51500000000000000000000000000000000000000000000000000000000908117909152906115db611c6f565b600160a060020a031663dc8601b36115f1611152565b836115fa611b07565b6040518463ffffffff1660e060020a0281526004018084600160a060020a0316600160a060020a0316815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b8381101561166757818101518382015260200161164f565b50505050905090810190601f1680156116945780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b1580156116b557600080fd5b505af11580156116c9573d6000803e3d6000fd5b505050506040513d6020811015610b7a57600080fd5b600160026000909192565b7f145286dc85799b6fb9fe322391ba2d95683077b2adf34dd576dedc437e537ba760009081526020527fba10c7a68bf463c41368d64adcf7df23c0de931ea3b09f061e2dfec302fef95f5490565b6117406112c1565b600160a060020a0316331461175457600080fd5b60008111801561176a5750611767610f3d565b81105b801561177c5750611779611ec1565b81105b151561178757600080fd5b7fbbb088c505d18e049d114c7c91f11724e69c55ad6c5397e2b929e68b41fa05d160009081526020527f8df5c48c6b6e11d97548adc824ba0c99103ec09830fa5d53a179984085e6eaa055565b6000806117df610aac565b905033600160a060020a038216146117f657600080fd5b6117fe611f0f565b15156118295761180d85611db0565b151561181857600080fd5b611829611823610d74565b86611f60565b61186581878787878080601f01602080910402602001604051908101604052809392919081815260200183838082843750612084945050505050565b50600195945050505050565b600080600030600160a060020a0316636fde82026040518163ffffffff1660e060020a028152600401602060405180830381600087803b1580156118b457600080fd5b505af11580156118c8573d6000803e3d6000fd5b505050506040513d60208110156118de57600080fd5b5051600160a060020a031633146118f457600080fd5b6118fd86612bcd565b9093509150600160a060020a0383161580159061191a5750600082115b80156119265750838210155b151561193157600080fd5b61195161194c856119406116ea565b9063ffffffff612d5416565b612d66565b611961828563ffffffff612d5416565b905061196d8187612db3565b6040805185815260208101839052815188927f5bcec6564fe8d2cbb4e4eb8237510ceb6b291a5c2ee2e429948d25e9c924c1fa928290030190a284156119cc576119b5611ec1565b8411156119c157600080fd5b6119cc838486612e35565b505050505050565b6119dc6112c1565b600160a060020a031633146119f057600080fd5b6119f8611ec1565b811180611a03575080155b1515611a0e57600080fd5b7f4a6a899679f26b73530d8cf1001e83b6f7702e04b6fdb98f3c62dc7e47e041a5600090815260209081527f1ab29a5cca988aee50edccdd61c5bcaa7ad4b29a03b7ee50f298ceccfe14cc4e8290556040805183815290517fad4123ae17c414d9c6d2fec478b402e6b01856cc250fd01fbfd252fda0089d3c929181900390910190a150565b6000611a9f82612818565b611aa8836125b7565b611af88b8b8b8b6003806020026040519081016040528092919082600360200280828437505060408051808201825293508f925060029150839083908082843782019150505050508b8b8b611b55565b9b9a5050505050505050505050565b7f2dfd6c9f781bb6bbb5369c114e949b69ebb440ef3d4dd6b2836225eb1dc3a2be60009081526020527f2de0d2cdc19d356cb53b5984f91bfd3b31fe0c678a0d190a6db39274bb34753f5490565b7f8a8236f871f2bbb44f59e8c68b82f7587d19c987e09aba39148cc97ea004a32e600090815260026020527ff5de62257e76692f16fec877f26599010536c0cb971bab5dd0f47f8f1a66c7bf8054600160a060020a031916600160a060020a038916179055611bca8989898989898989612fbf565b9998505050505050505050565b611bdf6112c1565b600160a060020a03163314611bf357600080fd5b801580611c175750611c03611d62565b81118015611c175750611c14610f3d565b81105b1515611c2257600080fd5b7f0f8803acad17c63ee38bf2de71e1888bc7a079a6f73658e274b08018bea4e29c60009081526020527f9de0f81379b4d8e60fe509315d071b56e7b732abaf193e74e0d15808b0951d0955565b7f811bbb11e8899da471f0e69a3ed55090fc90215227fc5fb1cb0d6e962ea7b74f60005260026020527fb4ed64697d3ef8518241966f7c6f28b0d72f20f51198717d198d2d55076c593d54600160a060020a031690565b7f241773621b963145d8e249ca69b0240df7de56fca52fb3ec9e2ddd08a968570e60009081526020527f5a69665d049b580e222420a3d5bc58a062e4ab28243d1b83814ab8de398d3a175490565b7f1e8ecaafaddea96ed9ac6d2642dcdfe1bebe58a930b1085842d8fc122b371ee560009081526020527fd5c78dd9468716ca9bb96be25d56436811b20aab3523a9904b12deef1cab239d5490565b7fbbb088c505d18e049d114c7c91f11724e69c55ad6c5397e2b929e68b41fa05d160009081526020527f8df5c48c6b6e11d97548adc824ba0c99103ec09830fa5d53a179984085e6eaa05490565b600080611dc2836111c061133f610d74565b905080611dcd610f3d565b10158015611de25750611dde611ec1565b8311155b80156111ec5750611df1611d62565b9092101592915050565b611e036112c1565b600160a060020a03163314611e1757600080fd5b611e1f610da1565b8110611e2a57600080fd5b7fc0ed44c192c86d1cc1ba51340b032c2766b4a2b0041031de13c46dd7104888d560009081526020527ff8e983ee86e5e377e9e34c9131b266382c3f04113d20de077f9e12663c7a646b55565b611e7f6112c1565b600160a060020a03163314611e9357600080fd5b610aa981613169565b611ea46112c1565b600160a060020a03163314611eb857600080fd5b610aa981613233565b7f0f8803acad17c63ee38bf2de71e1888bc7a079a6f73658e274b08018bea4e29c60009081526020527f9de0f81379b4d8e60fe509315d071b56e7b732abaf193e74e0d15808b0951d095490565b7f6168652c307c1e813ca11cfb3a601f1cf3b22452021a5052d8b05f1f1f8a3e9260005260046020527fcb8d022f2163402334a4962e3279c5def3417d3d8dab9e27ba26e81e3f8337845460ff1690565b611f6d816111c084610ba6565b6000808460405160200180807f746f74616c5370656e74506572446179000000000000000000000000000000008152506010018281526020019150506040516020818303038152906040526040518082805190602001908083835b60208310611fe75780518252601f199092019160209182019101611fc8565b51815160209384036101000a60001901801990921691161790526040805192909401829003909120865285019590955292909201600020939093555050505050565b7f6168652c307c1e813ca11cfb3a601f1cf3b22452021a5052d8b05f1f1f8a3e9260005260046020527fcb8d022f2163402334a4962e3279c5def3417d3d8dab9e27ba26e81e3f833784805460ff1916911515919091179055565b600061208e611f0f565b1515610b7a5784600160a060020a03166342966c68846040518263ffffffff1660e060020a02815260040180828152602001915050600060405180830381600087803b1580156120dd57600080fd5b505af11580156120f1573d6000803e3d6000fd5b505050506120fd610abb565b156121475761210b83611372565b90506121308461211b8685613294565b61212b868563ffffffff612d5416565b612e35565b600081111561214257612142816132ee565b610b7a565b610b7a846121558685613294565b85612e35565b6000612165611c6f565b600160a060020a031663d67bdd256040518163ffffffff1660e060020a028152600401602060405180830381600087803b1580156121a257600080fd5b505af11580156121b6573d6000803e3d6000fd5b505050506040513d60208110156121cc57600080fd5b5051905090565b6000600260008360405160200180807f6d657373616765526563697069656e740000000000000000000000000000000081525060100182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b602083106122585780518252601f199092019160209182019101612239565b51815160209384036101000a6000190180199092169116179052604080519290940182900390912086528501959095529290920160002054600160a060020a031695945050505050565b60008060008360405160200180807f6d65737361676556616c75650000000000000000000000000000000000000000815250600c01826000191660001916815260200191505060405160208183030381529060405260405180828051906020019080838360208310610c225780518252601f199092019160209182019101610c03565b6001600460008360405160200180807f6d65737361676546697865640000000000000000000000000000000000000000815250600c0182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b602083106123aa5780518252601f19909201916020918201910161238b565b51815160209384036101000a60001901801990921691161790526040805192909401829003909120865285019590955292909201600020805460ff19169415159490941790935550505050565b6123ff6110fb565b600160a060020a03166340c10f1983836040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b15801561246157600080fd5b505af1158015612475573d6000803e3d6000fd5b505050506040513d60208110156109af57600080fd5b6124948161295f565b151561249f57600080fd5b7f811bbb11e8899da471f0e69a3ed55090fc90215227fc5fb1cb0d6e962ea7b74f60005260026020527fb4ed64697d3ef8518241966f7c6f28b0d72f20f51198717d198d2d55076c593d8054600160a060020a031916600160a060020a0392909216919091179055565b7fa8b0ade3e2b734f043ce298aca4cc8d19d74270223f34531d0988b7d00cba21d60005260026020527f603cd9dcbfa185d5c37504f4c8b3f16117ed744fba48d08b7aad44a162af1c9354600160a060020a031690565b7f20ae0b8a761b32f3124efb075f427dd6ca669e88ae7747fec9fd1ad688699f3260005260026020527fd76793c705b076d97d490f0c1e5a620caae2c4973213dc37ef69a1be2a5ec07054600160a060020a031690565b60006125c28261295f565b15156125cd57600080fd5b6000905081600160a060020a0316632ee57f8d60e060020a0260e060020a90046040518163ffffffff1660e060020a0281526004016000604051808303816000875af192505050156126ea5760405180807f626c6f636b526577617264000000000000000000000000000000000000000000815250600b0190506040518091039020600160e060020a03191682600160a060020a0316632ee57f8d6040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561269757600080fd5b505af11580156126ab573d6000803e3d6000fd5b505050506040513d60208110156126c157600080fd5b50517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161490506127a1565b81600160a060020a03166310f2ee7c60e060020a0260e060020a90046040518163ffffffff1660e060020a0281526004016000604051808303816000875af192505050156127a15781600160a060020a03166310f2ee7c6040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561277057600080fd5b505af1158015612784573d6000803e3d6000fd5b505050506040513d602081101561279a57600080fd5b5051151590505b8015156127ad57600080fd5b507f20ae0b8a761b32f3124efb075f427dd6ca669e88ae7747fec9fd1ad688699f3260005260026020527fd76793c705b076d97d490f0c1e5a620caae2c4973213dc37ef69a1be2a5ec0708054600160a060020a031916600160a060020a0392909216919091179055565b670de0b6b3a7640000811061282c57600080fd5b7f241773621b963145d8e249ca69b0240df7de56fca52fb3ec9e2ddd08a968570e600090815260209081527f5a69665d049b580e222420a3d5bc58a062e4ab28243d1b83814ab8de398d3a178290556040805183815290517f8c4d35e54a3f2ef1134138fd8ea3daee6a3c89e10d2665996babdf70261e2c76929181900390910190a150565b80600160a060020a03811615156128c857600080fd5b600160a060020a03831615156128e6576128e18261333e565b6128f0565b6128f0838361334a565b505050565b7f98aa806e31e94a687a31c65769cb99670064dd7f5a87526da075c5fb4eab988060005260026020527f0c1206883be66049a02d4937078367c00b3d71dd1a9465df969363c6ddeac96d8054600160a060020a031916600160a060020a0392909216919091179055565b6000903b1190565b818101828110156113a457fe5b612981816111c084610def565b6000808460405160200180807f746f74616c45786563757465645065724461790000000000000000000000000081525060130182815260200191505060405160208183030381529060405260405180828051906020019080838360208310611fe75780518252601f199092019160209182019101611fc8565b600080612a06836133f7565b9150612a1061340a565b9050612a1a6110fb565b600160a060020a03166340c10f1985846040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b158015612a7c57600080fd5b505af1158015612a90573d6000803e3d6000fd5b505050506040513d6020811015612aa657600080fd5b50506040805183815290518291600160a060020a038716917f2f9a6098d4503a127779ba975f5f6b04f842362b1809f346989e9abc0b4dedb69181900360200190a350505050565b6000806000612afb61340a565b9250612b0683612bcd565b9092509050600160a060020a038216158015612b20575080155b1515612b2b57600080fd5b612b3a61194c856111c06116ea565b612b45858585613451565b60408051600160a060020a038716815260208101869052815185927f3344bbb992063ed4b833dabd5d5e55fc18df085bb96654e83aafbfe22e4116ff928290030190a25050505050565b6000821515612ba0575060006113a4565b50818102818382811515612bb057fe5b04146113a457fe5b60008183811515612bc557fe5b049392505050565b600080600260008460405160200180807f74784f75744f664c696d6974526563697069656e74000000000000000000000081525060150182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b60208310612c535780518252601f199092019160209182019101612c34565b51815160209384036101000a600019018019909216911617905260408051929094018290039091208652858101969096525092830160009081205484517f74784f75744f664c696d697456616c75650000000000000000000000000000008188015260318082018b9052865180830390910181526051909101958690528051600160a060020a0390921698509195869592945091925082918401908083835b60208310612d115780518252601f199092019160209182019101612cf2565b51815160209384036101000a6000190180199092169116179052604080519290940182900390912086528501959095529290920160002054949694955050505050565b600082821115612d6057fe5b50900390565b7f145286dc85799b6fb9fe322391ba2d95683077b2adf34dd576dedc437e537ba760009081526020527fba10c7a68bf463c41368d64adcf7df23c0de931ea3b09f061e2dfec302fef95f55565b816000808360405160200180807f74784f75744f664c696d697456616c7565000000000000000000000000000000815250601101826000191660001916815260200191505060405160208183030381529060405260405180828051906020019080838360208310611fe75780518252601f199092019160209182019101611fc8565b60408051600160a060020a03841660248201526044808201849052825180830390910181526064909101909152602081018051600160e060020a03167f8b6c035400000000000000000000000000000000000000000000000000000000908117909152906000612ea3611c6f565b600160a060020a031663dc8601b3612eb9611152565b84612ec2611b07565b6040518463ffffffff1660e060020a0281526004018084600160a060020a0316600160a060020a0316815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b83811015612f2f578181015183820152602001612f17565b50505050905090810190601f168015612f5c5780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b158015612f7d57600080fd5b505af1158015612f91573d6000803e3d6000fd5b505050506040513d6020811015612fa757600080fd5b50519050612fb5818561353a565b6119cc81876135bc565b6040805160048152602481018252602081018051600160e060020a03167f6fde8202000000000000000000000000000000000000000000000000000000001781529151815160009330939291829190808383895b8381101561302b578181015183820152602001613013565b50505050905090810190601f1680156130585780820380516001836020036101000a031916815260200191505b509150506000604051808303816000865af191505015806130ea575030600160a060020a0316636fde82026040518163ffffffff1660e060020a028152600401602060405180830381600087803b1580156130b257600080fd5b505af11580156130c6573d6000803e3d6000fd5b505050506040513d60208110156130dc57600080fd5b5051600160a060020a031633145b806130f457503330145b15156130ff57600080fd5b613107610c63565b1561311157600080fd5b61311a8961248b565b613123886128f5565b61312c8761369d565b6131358661371b565b61313e85613878565b61314784613233565b6131508361394d565b61315982613169565b6131616139b6565b611bca610c63565b600160a060020a038116151561317e57600080fd5b7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e06131a76112c1565b60408051600160a060020a03928316815291841660208301528051918290030190a17f02016836a56b71f0d02689e69e326f4f4c1b9057164ef592671cf0d37c8040c060005260026020527fb7802e97e87ef2842a6cce7da7ffaeaedaa2f61a6a7870b23d9d01fc9b73712e8054600160a060020a031916600160a060020a0392909216919091179055565b61323b613a0d565b81111561324757600080fd5b7f2dfd6c9f781bb6bbb5369c114e949b69ebb440ef3d4dd6b2836225eb1dc3a2be60009081526020527f2de0d2cdc19d356cb53b5984f91bfd3b31fe0c678a0d190a6db39274bb34753f55565b80518290600010156113a45781516014146132ae57600080fd5b6132b782613a54565b9050600160a060020a03811615156132ce57600080fd5b6132d6613a5b565b600160a060020a03828116911614156113a457600080fd5b6132f6612560565b600160a060020a03166362178478826040518263ffffffff1660e060020a02815260040180828152602001915050600060405180830381600087803b158015610b6657600080fd5b30316110388282613a65565b604080517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290518391600091600160a060020a038416916370a0823191602480830192602092919082900301818787803b1580156133af57600080fd5b505af11580156133c3573d6000803e3d6000fd5b505050506040513d60208110156133d957600080fd5b505190506109af600160a060020a038516848363ffffffff613ac616565b60006113a482613405611d14565b613b5b565b6000613414611c6f565b600160a060020a031663669f618b6040518163ffffffff1660e060020a028152600401602060405180830381600087803b1580156121a257600080fd5b82600260008360405160200180807f74784f75744f664c696d6974526563697069656e74000000000000000000000081525060150182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b602083106134d55780518252601f1990920191602091820191016134b6565b51815160209384036101000a600019018019909216911617905260408051929094018290039091208652850195909552929092016000208054600160a060020a031916600160a060020a039590951694909417909355506128f0915083905082612db3565b806000808460405160200180807f6d65737361676556616c75650000000000000000000000000000000000000000815250600c01826000191660001916815260200191505060405160208183030381529060405260405180828051906020019080838360208310611fe75780518252601f199092019160209182019101611fc8565b80600260008460405160200180807f6d657373616765526563697069656e740000000000000000000000000000000081525060100182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b602083106136405780518252601f199092019160209182019101613621565b51815160209384036101000a600019018019909216911617905260408051929094018290039091208652850195909552929092016000208054600160a060020a031916600160a060020a0395909516949094179093555050505050565b6136a68161295f565b15156136b157600080fd5b7fa8b0ade3e2b734f043ce298aca4cc8d19d74270223f34531d0988b7d00cba21d60005260026020527f603cd9dcbfa185d5c37504f4c8b3f16117ed744fba48d08b7aad44a162af1c938054600160a060020a031916600160a060020a0392909216919091179055565b60408101516000108015613736575060408101516020820151115b8015613746575060208101518151115b151561375157600080fd5b80517f4a6a899679f26b73530d8cf1001e83b6f7702e04b6fdb98f3c62dc7e47e041a5600090815260208181527f1ab29a5cca988aee50edccdd61c5bcaa7ad4b29a03b7ee50f298ceccfe14cc4e92909255908201517f0f8803acad17c63ee38bf2de71e1888bc7a079a6f73658e274b08018bea4e29c82527f9de0f81379b4d8e60fe509315d071b56e7b732abaf193e74e0d15808b0951d095560408201517fbbb088c505d18e049d114c7c91f11724e69c55ad6c5397e2b929e68b41fa05d182527f8df5c48c6b6e11d97548adc824ba0c99103ec09830fa5d53a179984085e6eaa0557fad4123ae17c414d9c6d2fec478b402e6b01856cc250fd01fbfd252fda0089d3c9082905b60200201516040518082815260200191505060405180910390a150565b805160208201511061388957600080fd5b80517f21dbcab260e413c20dc13c28b7db95e2b423d1135f42bb8b7d5214a92270d237600090815260208181527fadd938dbd083a16bae12238cd914fca0afc7a30edb55b1cd5c7f1823f1b0e42192909255908201517fc0ed44c192c86d1cc1ba51340b032c2766b4a2b0041031de13c46dd7104888d582527ff8e983ee86e5e377e9e34c9131b266382c3f04113d20de077f9e12663c7a646b557f9bebf928b90863f24cc31f726a3a7545efd409f1dcf552301b1ee3710da70d3b90829061385b565b604c198113801561395e5750604d81125b151561396957600080fd5b7f1e8ecaafaddea96ed9ac6d2642dcdfe1bebe58a930b1085842d8fc122b371ee560009081526020527fd5c78dd9468716ca9bb96be25d56436811b20aab3523a9904b12deef1cab239d55565b7f0a6f646cd611241d8073675e00d1a1ff700fbf1b53fcf473de56d1e6e4b714ba60005260046020527f078d888f9b66f3f8bfa10909e31f1e16240db73449f0500afdbbe3a70da457cc805460ff19166001179055565b6000613a17611c6f565b600160a060020a031663e5789d036040518163ffffffff1660e060020a028152600401602060405180830381600087803b1580156121a257600080fd5b6014015190565b6000610ab6611152565b604051600160a060020a0383169082156108fc029083906000818181858888f193505050501515611038578082613a9a613ba6565b600160a060020a039091168152604051908190036020019082f080158015610b7a573d6000803e3d6000fd5b82600160a060020a031663a9059cbb83836040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050600060405180830381600087803b158015613b2957600080fd5b505af1158015613b3d573d6000803e3d6000fd5b505050503d156128f05760206000803e60005115156128f057600080fd5b6000811515613b6b5750816113a4565b6000821315613b8f57613b8883600a84900a63ffffffff612b8f16565b90506113a4565b6111ec836000849003600a0a63ffffffff612bb816565b604051602180613bb6833901905600608060405260405160208060218339810160405251600160a060020a038116ff00a165627a7a7230582053734d5c1d9e43495bc1a2c510cfa24c55210b408890a0745040e5a59d19314e0029",
  "sourceMap": "437:7089:118:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;437:7089:118;;;;;;;",
  "deployedSourceMap": "437:7089:118:-;;;;;;;;;-1:-1:-1;;;437:7089:118;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2384:716:112;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2384:716:112;-1:-1:-1;;;;;2384:716:112;;;;;;;;;3435:382:99;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3435:382:99;;;;;1265:123:68;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1265:123:68;-1:-1:-1;;;;;1265:123:68;;;;;1778:90:112;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1778:90:112;;;;;;;;-1:-1:-1;;;;;1778:90:112;;;;;;;;;;;;;;2134:154:117;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2134:154:117;;;;;;;;;;;;;;;;;;;;;;4206:132:118;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4206:132:118;-1:-1:-1;;;;;4206:132:118;;;;;876:127:117;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;876:127:117;-1:-1:-1;;;;;876:127:117;;;;;1223:160:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1223:160:72;;;;;;;;;;;;;;;;;;;;;369:100:87;;8:9:-1;5:2;;;30:1;27;20:12;5:2;369:100:87;;;;3397:263:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3397:263:72;;;;;2617:145;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2617:145:72;;;;272:159:113;;8:9:-1;5:2;;;30:1;27;20:12;5:2;272:159:113;;;;;;;;-1:-1:-1;;272:159:113;;;;;;;;;;;;;;1667:119:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1667:119:72;;;;1389:166;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1389:166:72;;;;;619:114:117;;8:9:-1;5:2;;;30:1;27;20:12;5:2;619:114:117;;;;1924:161:101;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1924:161:101;;;;;1561:100:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1561:100:72;;;;1664:79:117;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1664:79:117;;;;;6848:335:118;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;6848:335:118;-1:-1:-1;;;;;6848:335:118;;;;;;;;;;1585:153:68;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1585:153:68;-1:-1:-1;;;;;1585:153:68;;;;;4561:181:118;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4561:181:118;-1:-1:-1;;;;;4561:181:118;;;;;4913:127;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4913:127:118;;;;2593:126:68;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2593:126:68;;;;2366:245:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2366:245:72;;;;;1895:116;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1895:116:72;;;;1909:360:99;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1909:360:99;-1:-1:-1;;;;;1909:360:99;;;;;;;1732:92:93;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1732:92:93;;;;4482:382:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4482:382:72;;;;1363:125:117;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1363:125:117;;;;;2538:569:99;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2538:569:99;;;;;130:136:113;;8:9:-1;5:2;;;30:1;27;20:12;5:2;130:136:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;964:114:66;;8:9:-1;5:2;;;30:1;27;20:12;5:2;964:114:66;;;;4060:197:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4060:197:72;;;;;3106:414:112;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3106:414:112;;;;-1:-1:-1;;;;;3106:414:112;;;;;;;;;;;;;;;;5055:722;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5055:722:112;;;;;;;;;;;3165:226:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3165:226:72;;;;;2944:950:118;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2944:950:118;-1:-1:-1;;;;;2944:950:118;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2902:111:68;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2902:111:68;;;;1309:875:118;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1309:875:118;;;;;;;;;;;;-1:-1:-1;;;;;1309:875:118;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1309:875:118;;;;;;;;;;;;;;;;;-1:-1:-1;1309:875:118;-1:-1:-1;1309:875:118;;-1:-1:-1;1309:875:118;;;;;;;;-1:-1:-1;1309:875:118;;-1:-1:-1;;1309:875:118;;;-1:-1:-1;;;1309:875:118;;;;;;;;-1:-1:-1;;;;;1309:875:118;;-1:-1:-1;1309:875:118;;3854:200:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3854:200:72;;;;;2335:114:68;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2335:114:68;;;;1115:88:117;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1115:88:117;;;;1078:111:79;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1078:111:79;;;;2017:97:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2017:97:72;;;;2120:240;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2120:240:72;;;;;3666:182;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3666:182:72;;;;;1992:100:93;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1992:100:93;-1:-1:-1;;;;;1992:100:93;;;;;2062:127:68;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2062:127:68;;;;;1792:97:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1792:97:72;;;;2384:716:112;2735:12;2773:10;2718:6;:4;:6::i;:::-;2717:7;2709:16;;;;;;2750:13;:11;:13::i;:::-;2735:28;;2794:4;2773:26;;2817:19;2829:6;2817:11;:19::i;:::-;2809:28;;;;;;;;2847:44;2867:15;:13;:15::i;:::-;2884:6;2847:19;:44::i;:::-;2902:13;2910:4;2902:7;:13::i;:::-;2925:42;;;;;;2944:10;2925:42;;;;-1:-1:-1;;;;;2925:42:112;;;;;;;;;;;;;;;:18;;;;;;:42;;;;;;;;;;;;;;;-1:-1:-1;2925:18:112;:42;;;5:2:-1;;;;30:1;27;20:12;5:2;2925:42:112;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2925:42:112;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2977:14:112;;-1:-1:-1;2985:5:112;2977:7;:14::i;:::-;3001:92;3038:5;3045:10;3057:6;3082:9;3065:27;;;;;;-1:-1:-1;;;;;3065:27:112;-1:-1:-1;;;;;3065:27:112;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3065:27:112;;;3001:36;:92::i;:::-;2384:716;;;;:::o;3435:382:99:-;3558:17;3616:13;990:16:68;:14;:16::i;:::-;-1:-1:-1;;;;;968:39:68;:10;:39;960:48;;;;;;1045:29;:27;:29::i;:::-;-1:-1:-1;;;;;1026:48:68;:15;:13;:15::i;:::-;-1:-1:-1;;;;;1026:48:68;;1018:57;;;;;;3522:24:99;3535:10;3522:12;:24::i;:::-;3521:25;3513:34;;;;;;3578:28;3595:10;3578:16;:28::i;:::-;3558:48;;3632:24;3645:10;3632:12;:24::i;:::-;3616:40;;3666:27;3682:10;3666:15;:27::i;:::-;3703:44;3730:9;3741:5;3703:26;:44::i;:::-;3762:48;;;-1:-1:-1;;;;;3762:48:99;;;;;;;;;;;;3781:10;;3762:48;;;;;;;;3435:382;;;:::o;1265:123:68:-;783:7:93;:5;:7::i;:::-;-1:-1:-1;;;;;769:21:93;:10;:21;761:30;;;;;;1346:35:68;1365:15;1346:18;:35::i;:::-;1265:123;:::o;1778:90:112:-;1822:6;1847:14;:12;:14::i;:::-;1840:21;;1778:90;:::o;2134:154:117:-;2191:4;;2224:22;:20;:22::i;:::-;-1:-1:-1;;;;;2216:45:117;;;2215:65;;;;;2278:1;2267:8;:6;:8::i;:::-;:12;2207:74;;2134:154;:::o;4206:132:118:-;783:7:93;:5;:7::i;:::-;-1:-1:-1;;;;;769:21:93;:10;:21;761:30;;;;;;4291:13:118;:11;:13::i;:::-;-1:-1:-1;;;;;4283:40:118;;4324:6;4283:48;;;;;-1:-1:-1;;;4283:48:118;;;;;;;-1:-1:-1;;;;;4283:48:118;-1:-1:-1;;;;;4283:48:118;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4283:48:118;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4283:48:118;;;;4206:132;:::o;876:127:117:-;783:7:93;:5;:7::i;:::-;-1:-1:-1;;;;;769:21:93;:10;:21;761:30;;;;;;959:37:117;983:12;959:23;:37::i;1223:160:72:-;1284:7;1310:11;:66;1369:4;1332:42;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1332:42:72;;;1322:53;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1322:53:72;;;;;;;;;;;;;1310:66;;;;;;;;;;;;-1:-1:-1;1310:66:72;;;1223:160;-1:-1:-1;;;;;1223:160:72:o;369:100:87:-;160:66;415:4;438:24;:11;:24;;;;;;369:100;:::o;3397:263:72:-;783:7:93;:5;:7::i;:::-;-1:-1:-1;;;;;769:21:93;:10;:21;761:30;;;;;;3501:19:72;:17;:19::i;:::-;3487:11;:33;:53;;;-1:-1:-1;3524:16:72;;3487:53;3479:62;;;;;;;;1096:66;3551:11;:34;;;;;;;;:48;;;:34;3614:39;;;;;;;;;;;;;;;;;;3397:263;:::o;2617:145::-;2749:6;2743:3;:12;;2617:145::o;272:159:113:-;344:17;272:159;:::o;1667:119:72:-;1096:66;1719:7;1745:34;;;;;;;1667:119;:::o;1389:166::-;1453:7;1479:11;:69;1541:4;1501:45;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1501:45:72;;;1491:56;;;;;;;;;;;;;66:2:-1;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;619:114:117;673:12;704:22;:20;:22::i;1924:161:101:-;1987:4;2010:11;:68;2065:10;2032:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2032:44:101;;;2022:55;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;2022:55:101;;;;;;;;;;;;;2010:68;;;;;;;;;;;;-1:-1:-1;2010:68:101;;;;;1924:161;-1:-1:-1;;;;;1924:161:101:o;1561:100:72:-;756:66;1604:7;1630:24;;;;;;;1561:100;:::o;1664:79:117:-;783:7:93;:5;:7::i;:::-;-1:-1:-1;;;;;769:21:93;:10;:21;761:30;;;;;;1723:13:117;1731:4;1723:7;:13::i;6848:335:118:-;312:4:102;-1:-1:-1;;;;;284:53:102;;:55;;;;;-1:-1:-1;;;284:55:102;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;284:55:102;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;284:55:102;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;284:55:102;-1:-1:-1;;;;;270:69:102;:10;:69;262:78;;;;;;7152:24:118;7164:6;7172:3;7152:11;:24::i;:::-;6848:335;;:::o;1585:153:68:-;783:7:93;:5;:7::i;:::-;-1:-1:-1;;;;;769:21:93;:10;:21;761:30;;;;;;1681:50:68;1713:17;1681:31;:50::i;4561:181:118:-;783:7:93;:5;:7::i;:::-;-1:-1:-1;;;;;769:21:93;:10;:21;761:30;;;;;;4644:37:118;4668:12;4644:23;:37::i;:::-;4636:46;;;;;;;;569:66;4692:28;;:14;:28;;;:43;;-1:-1:-1;;;;;;4692:43:118;-1:-1:-1;;;;;4692:43:118;;;;;;;;;;4561:181::o;4913:127::-;569:66;4960:12;5004:28;:14;:28;;;;-1:-1:-1;;;;;5004:28:118;4913:127;:::o;2593:126:68:-;544:66;2653:7;2679:33;:14;:33;;;;-1:-1:-1;;;;;2679:33:68;2593:126;:::o;2366:245:72:-;2434:4;2450:17;2470:49;2511:7;2470:36;2490:15;:13;:15::i;:::-;2470:19;:36::i;:::-;:40;:49;:40;:49;:::i;:::-;2450:69;;2561:9;2536:21;:19;:21::i;:::-;:34;;:68;;;;;2585:19;:17;:19::i;:::-;2574:7;:30;;2536:68;2529:75;2366:245;-1:-1:-1;;;2366:245:72:o;1895:116::-;922:66;1945:7;1971:33;;;;;;;1895:116;:::o;1909:360:99:-;990:16:68;:14;:16::i;:::-;-1:-1:-1;;;;;968:39:68;:10;:39;960:48;;;;;;1045:29;:27;:29::i;:::-;-1:-1:-1;;;;;1026:48:68;:15;:13;:15::i;:::-;-1:-1:-1;;;;;1026:48:68;;1018:57;;;;;;2010:28:99;2031:6;2010:20;:28::i;:::-;2006:257;;;2054:47;2077:15;:13;:15::i;:::-;2094:6;2054:22;:47::i;:::-;2115:48;2144:10;2156:6;2115:28;:48::i;:::-;2006:257;;;2194:58;2233:10;2245:6;2194:38;:58::i;1732:92:93:-;1523:66;1770:7;1796:21;:14;:21;;;;-1:-1:-1;;;;;1796:21:93;1732:92;:::o;4482:382:72:-;4532:7;4551:17;4591:19;4635:14;4695:28;4571:10;:8;:10::i;:::-;4551:30;;4613:12;:10;:12::i;:::-;4591:34;;4652:33;4669:15;:13;:15::i;:::-;4652:16;:33::i;:::-;4635:50;;4740:6;4726:11;:20;:47;;4772:1;4726:47;;;4763:6;4749:11;:20;4726:47;4695:78;;4802:20;4790:9;:32;:67;;4837:20;4790:67;;;4825:9;4790:67;4783:74;;4482:382;;;;;:::o;1363:125:117:-;1422:7;1448:33;321:7;1448:20;1459:8;:6;:8::i;:::-;1448:6;;:20;:10;:20;:::i;:::-;:24;:33;:24;:33;:::i;:::-;1441:40;1363:125;-1:-1:-1;;1363:125:117:o;2538:569:99:-;2863:21;2927:17;2619:16;:14;:16::i;:::-;-1:-1:-1;;;;;2619:34:99;;2654:10;2619:46;;;;;-1:-1:-1;;;2619:46:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2619:46:99;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2619:46:99;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2619:46:99;2618:47;2610:56;;;;;;2746:4;2684:16;:14;:16::i;:::-;-1:-1:-1;;;;;2684:38:99;;2723:10;2684:50;;;;;-1:-1:-1;;;2684:50:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2684:50:99;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2684:50:99;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2684:50:99;-1:-1:-1;;;;;2684:67:99;;2676:76;;;;;;2822:29;:27;:29::i;:::-;-1:-1:-1;;;;;2770:81:99;:16;:14;:16::i;:::-;-1:-1:-1;;;;;2770:36:99;;2807:10;2770:48;;;;;-1:-1:-1;;;2770:48:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2770:48:99;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2770:48:99;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2770:48:99;-1:-1:-1;;;;;2770:81:99;;2762:90;;;;;;-1:-1:-1;;2947:50:99;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;2947:50:99;;;;;;;;25:18:-1;;61:17;;-1:-1;;;;;182:15;2887:30:99;179:29:-1;;;160:49;;;2887:30:99;3007:16;:14;:16::i;:::-;-1:-1:-1;;;;;3007:37:99;;3045:29;:27;:29::i;:::-;3076:4;3082:17;:15;:17::i;:::-;3007:93;;;;;-1:-1:-1;;;3007:93:99;;;;;;;-1:-1:-1;;;;;3007:93:99;-1:-1:-1;;;;;3007:93:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3007:93:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3007:93:99;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3007:93:99;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;130:136:113;251:1;254;191:12;130:136;;;:::o;964:114:66:-;648:66;1013:7;1039:32;;;;;;;964:114;:::o;4060:197:72:-;783:7:93;:5;:7::i;:::-;-1:-1:-1;;;;;769:21:93;:10;:21;761:30;;;;;;4149:1:72;4137:9;:13;:41;;;;;4166:12;:10;:12::i;:::-;4154:9;:24;4137:41;:67;;;;;4194:10;:8;:10::i;:::-;4182:9;:22;4137:67;4129:76;;;;;;;;447:66;4215:11;:23;;;;;;:35;4060:197::o;3106:414:112:-;3193:4;3209:12;3224:13;:11;:13::i;:::-;3209:28;-1:-1:-1;3255:10:112;-1:-1:-1;;;;;3255:28:112;;;3247:37;;;;;;3299:6;:4;:6::i;:::-;3298:7;3294:124;;;3329:19;3341:6;3329:11;:19::i;:::-;3321:28;;;;;;;;3363:44;3383:15;:13;:15::i;:::-;3400:6;3363:19;:44::i;:::-;3427:65;3464:5;3471;3478:6;3486:5;;3427:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3427:36:112;;-1:-1:-1;;;;;3427:65:112:i;:::-;-1:-1:-1;3509:4:112;;3106:414;-1:-1:-1;;;;;3106:414:112:o;5055:722::-;5217:17;5236:13;5436:20;312:4:102;-1:-1:-1;;;;;284:53:102;;:55;;;;;-1:-1:-1;;;284:55:102;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;284:55:102;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;284:55:102;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;284:55:102;-1:-1:-1;;;;;270:69:102;:10;:69;262:78;;;;;;5253:24:112;5267:9;5253:13;:24::i;:::-;5216:61;;-1:-1:-1;5216:61:112;-1:-1:-1;;;;;;5295:23:112;;;;;;:36;;;5330:1;5322:5;:9;5295:36;:62;;;;;5344:13;5335:5;:22;;5295:62;5287:71;;;;;;;;5368:58;5388:37;5411:13;5388:18;:16;:18::i;:::-;:22;:37;:22;:37;:::i;:::-;5368:19;:58::i;:::-;5459:24;:5;5469:13;5459:24;:9;:24;:::i;:::-;5436:47;;5493:46;5515:12;5529:9;5493:21;:46::i;:::-;5554:61;;;;;;;;;;;;;;5576:9;;5554:61;;;;;;;;5629:17;5625:146;;;5687:10;:8;:10::i;:::-;5670:27;;;5662:36;;;;;;5712:48;5724:9;5735;5746:13;5712:11;:48::i;:::-;5055:722;;;;;;:::o;3165:226:72:-;783:7:93;:5;:7::i;:::-;-1:-1:-1;;;;;769:21:93;:10;:21;761:30;;;;;;3260:10:72;:8;:10::i;:::-;3246:11;:24;:44;;;-1:-1:-1;3274:16:72;;3246:44;3238:53;;;;;;;;756:66;3301:11;:24;;;;;;;;:38;;;:24;3354:30;;;;;;;;;;;;;;;;;;3165:226;:::o;2944:950:118:-;3461:4;3477:13;3485:4;3477:7;:13::i;:::-;3500:37;3524:12;3500:23;:37::i;:::-;3566:321;3594:15;3627:17;3662:12;3692:32;3566:321;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3566:321:118;;;;;;;;;-1:-1:-1;3742:42:118;;-1:-1:-1;3566:321:118;;-1:-1:-1;3566:321:118;;3742:42;;3566:321;3742:42;3566:321;;;;;;;;;;3802:16;3836:13;3867:6;3566:10;:321::i;:::-;3547:340;2944:950;-1:-1:-1;;;;;;;;;;;2944:950:118:o;2902:111:68:-;713:66;2950:7;2976:30;;;;;;;2902:111;:::o;1309:875:118:-;569:66;1762:4;1778:28;;;:14;:28;;;:43;;-1:-1:-1;;;;;;1778:43:118;-1:-1:-1;;;;;1778:43:118;;;;;1850:327;1884:15;1917:17;1778:43;1982:32;2032:42;2092:16;2126:13;2157:6;1850:16;:327::i;:::-;1831:346;1309:875;-1:-1:-1;;;;;;;;;1309:875:118:o;3854:200:72:-;783:7:93;:5;:7::i;:::-;-1:-1:-1;;;;;769:21:93;:10;:21;761:30;;;;;;3931:14:72;;;:70;;;3962:10;:8;:10::i;:::-;3950:9;:22;:50;;;;;3988:12;:10;:12::i;:::-;3976:9;:24;3950:50;3923:79;;;;;;;;601:66;4012:11;:23;;;;;;:35;3854:200::o;2335:114:68:-;377:66;2382:4;2410:31;:14;:31;;;;-1:-1:-1;;;;;2410:31:68;2335:114;:::o;1115:88:117:-;366:66;1154:7;1180:16;;;;;;;1115:88;:::o;1078:111:79:-;260:66;1123:6;1155:26;;;;;;;1078:111;:::o;2017:97:72:-;447:66;2058:7;2084:23;;;;;;;2017:97;:::o;2120:240::-;2179:4;2195:17;2215:46;2253:7;2215:33;2232:15;:13;:15::i;2215:46::-;2195:66;;2294:9;2278:12;:10;:12::i;:::-;:25;;:50;;;;;2318:10;:8;:10::i;:::-;2307:7;:21;;2278:50;:75;;;;;2343:10;:8;:10::i;:::-;2332:21;;;;;2120:240;-1:-1:-1;;2120:240:72:o;3666:182::-;783:7:93;:5;:7::i;:::-;-1:-1:-1;;;;;769:21:93;:10;:21;761:30;;;;;;3764:21:72;:19;:21::i;:::-;3752:33;;3744:42;;;;;;922:66;3796:11;:33;;;;;;:45;3666:182::o;1992:100:93:-;783:7;:5;:7::i;:::-;-1:-1:-1;;;;;769:21:93;:10;:21;761:30;;;;;;2066:19;2076:8;2066:9;:19::i;2062:127:68:-;783:7:93;:5;:7::i;:::-;-1:-1:-1;;;;;769:21:93;:10;:21;761:30;;;;;;2145:37:68;2165:16;2145:19;:37::i;1792:97:72:-;601:66;1833:7;1859:23;;;;;;;1792:97;:::o;267:81:94:-;155:66;301:4;324:17;:11;:17;;;;;;267:81;:::o;2768:188:72:-;2915:34;2942:6;2915:22;2932:4;2915:16;:22::i;:34::-;2846:11;:66;2905:4;2868:42;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2868:42:72;;;2858:53;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;2858:53:72;;;;;;;;;;;;;2846:66;;;;;;;;;;;;-1:-1:-1;2846:66:72;:103;;;;-1:-1:-1;;;;;2768:188:72:o;354:80:94:-;155:66;402:17;;:11;:17;;;:25;;-1:-1:-1;;402:25:94;;;;;;;;;;354:80::o;5822:791:118:-;6127:11;5951:6;:4;:6::i;:::-;5950:7;5946:661;;;6042:6;-1:-1:-1;;;;;6013:41:118;;6055:6;6013:49;;;;;-1:-1:-1;;;6013:49:118;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6013:49:118;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6013:49:118;;;;6081:26;:24;:26::i;:::-;6077:520;;;6141:20;6154:6;6141:12;:20::i;:::-;6127:34;;6255:65;6267:5;6274:28;6289:5;6296;6274:14;:28::i;:::-;6304:15;:6;6315:3;6304:15;:10;:15;:::i;:::-;6255:11;:65::i;:::-;6348:1;6342:3;:7;6338:150;;;6450:19;6465:3;6450:14;:19::i;:::-;6077:520;;;6526:56;6538:5;6545:28;6560:5;6567;6545:14;:28::i;:::-;6575:6;6526:11;:56::i;4237:113:68:-;4285:7;4311:16;:14;:16::i;:::-;-1:-1:-1;;;;;4311:30:68;;:32;;;;;-1:-1:-1;;;4311:32:68;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4311:32:68;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4311:32:68;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4311:32:68;;-1:-1:-1;4237:113:68;:::o;1302:177:101:-;1371:7;1397:14;:75;1459:10;1422:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1422:48:101;;;1412:59;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1412:59:101;;;;;;;;;;;;;1397:75;;;;;;;;;;;;-1:-1:-1;1397:75:101;;-1:-1:-1;;;;;1397:75:101;;1302:177;-1:-1:-1;;;;;1302:177:101:o;622:166::-;687:7;713:11;:68;768:10;735:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;735:44:101;;;725:55;;;;;;;;;;;;;66:2:-1;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;1631:146:101;1766:4;1695:11;:68;1750:10;1717:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1717:44:101;;;1707:55;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1707:55:101;;;;;;;;;;;;;1695:68;;;;;;;;;;;;-1:-1:-1;1695:68:101;:75;;-1:-1:-1;;1695:75:101;;;;;;;;;;;-1:-1:-1;;;;1631:146:101:o;7385:139:118:-;7476:16;:14;:16::i;:::-;-1:-1:-1;;;;;7476:21:118;;7498:10;7510:6;7476:41;;;;;-1:-1:-1;;;7476:41:118;;;;;;;-1:-1:-1;;;;;7476:41:118;-1:-1:-1;;;;;7476:41:118;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7476:41:118;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7476:41:118;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;3154:187:68;3234:40;3258:15;3234:23;:40::i;:::-;3226:49;;;;;;;;377:66;3285:31;;:14;:31;;;:49;;-1:-1:-1;;;;;;3285:49:68;-1:-1:-1;;;;;3285:49:68;;;;;;;;;;3154:187::o;368:115:63:-;95:66:83;415:6:63;447:28;:14;:28;;;;-1:-1:-1;;;;;447:28:63;368:115;:::o;588:144:73:-;274:66;643:12;687:37;:14;:37;;;;-1:-1:-1;;;;;687:37:73;588:144;:::o;738:838::-;1068:26;820:37;844:12;820:23;:37::i;:::-;812:46;;;;;;;;1097:5;1068:34;;1116:12;-1:-1:-1;;;;;1116:17:73;452:10;-1:-1:-1;;;1134:24:73;-1:-1:-1;;;1116:43:73;;;;;;;-1:-1:-1;;;1116:43:73;;;;;;;;;;;;;;;;;;;;1112:356;;;1276:24;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1215:86:73;;1228:12;-1:-1:-1;;;;;1215:48:73;;:50;;;;;-1:-1:-1;;;1215:50:73;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1215:50:73;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1215:50:73;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1215:50:73;-1:-1:-1;;1215:86:73;;;-1:-1:-1;1112:356:73;;;1322:12;-1:-1:-1;;;;;1322:17:73;545:10;-1:-1:-1;;;1340:22:73;-1:-1:-1;;;1322:41:73;;;;;;;-1:-1:-1;;;1322:41:73;;;;;;;;;;;;;;;;;;;;1318:150;;;1416:12;-1:-1:-1;;;;;1403:47:73;;:49;;;;;-1:-1:-1;;;1403:49:73;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1403:49:73;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1403:49:73;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1403:49:73;:54;;;-1:-1:-1;1318:150:73;1485:21;1477:30;;;;;;;;-1:-1:-1;274:66:73;1517:37;;:14;:37;;;:52;;-1:-1:-1;;;;;;1517:52:73;-1:-1:-1;;;;;1517:52:73;;;;;;;;;;738:838::o;1839:144:117:-;321:7;1897:14;;1889:23;;;;;;366:66;1922:11;:16;;;;;;;;:23;;;:16;1960;;;;;;;;;;;;;;;;;;1839:144;:::o;892:225:78:-;964:3;-1:-1:-1;;;;;455:17:78;;;;447:26;;;;;;-1:-1:-1;;;;;983:20:78;;;979:132;;;1019:21;1036:3;1019:16;:21::i;:::-;979:132;;;1071:29;1088:6;1096:3;1071:16;:29::i;:::-;892:225;;;:::o;3503:147:68:-;544:66;3590:33;;:14;:33;;;:53;;-1:-1:-1;;;;;;3590:53:68;-1:-1:-1;;;;;3590:53:68;;;;;;;;;;3503:147::o;438:578:159:-;496:4;971:18;;1003:8;;438:578::o;1238:128:160:-;1319:7;;;1339;;;;1332:15;;;2962:197:72;3115:37;3145:6;3115:25;3135:4;3115:19;:25::i;:37::-;3043:11;:69;3105:4;3065:45;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3065:45:72;;;3055:56;;;;;;;;;;;;;66:2:-1;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;5252:286:118;5345:13;5390:18;5361:19;5373:6;5361:11;:19::i;:::-;5345:35;;5411:11;:9;:11::i;:::-;5390:32;;5432:16;:14;:16::i;:::-;-1:-1:-1;;;;;5432:21:118;;5454:10;5466:5;5432:40;;;;;-1:-1:-1;;;5432:40:118;;;;;;;-1:-1:-1;;;;;5432:40:118;-1:-1:-1;;;;;5432:40:118;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5432:40:118;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5432:40:118;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;5487:44:118;;;;;;;;5520:10;;-1:-1:-1;;;;;5487:44:118;;;;;;;;5432:40;5487:44;;;5252:286;;;;:::o;4055:497:112:-;4158:18;4200:17;4227:13;4179:11;:9;:11::i;:::-;4158:32;;4271:25;4285:10;4271:13;:25::i;:::-;4250:46;;-1:-1:-1;4250:46:112;-1:-1:-1;;;;;;4314:23:112;;;:37;;;;-1:-1:-1;4341:10:112;;4314:37;4306:46;;;;;;;;4362:51;4382:30;4405:6;4382:18;:16;:18::i;4362:51::-;4423:48;4440:10;4452:6;4460:10;4423:16;:48::i;:::-;4486:59;;;-1:-1:-1;;;;;4486:59:112;;;;;;;;;;;;4534:10;;4486:59;;;;;;;;4055:497;;;;;:::o;203:380:160:-;263:9;489:7;;485:36;;;-1:-1:-1;513:1:160;506:8;;485:36;-1:-1:-1;531:7:160;;;536:2;531;:7;551:6;;;;;;;;:12;544:20;;;665:283;725:7;941:2;936;:7;;;;;;;;;665:283;-1:-1:-1;;;665:283:160:o;1670:300:66:-;1736:17;1755:13;1792:14;:80;1859:10;1817:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1817:53:66;;;1807:64;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1807:64:66;;;;;;;;;;;;;1792:80;;;;;;;;;-1:-1:-1;1792:80:66;;;-1:-1:-1;1792:80:66;;;;1912:49;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1912::66;;;;;;;;1902:60;;-1:-1:-1;;;;;1792:80:66;;;;-1:-1:-1;;;;;1912:49:66;;-1:-1:-1;1912:49:66;;-1:-1:-1;1912:49:66;;1902:60;;;;1912:49;1902:60;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1902:60:66;;;;;;;;;;;;;1890:73;;;;;;;;;;;;-1:-1:-1;1890:73:66;;1670:300;;1890:73;;-1:-1:-1;;;;;1670:300:66:o;1060:116:160:-;1120:7;1142:8;;;;1135:16;;;;-1:-1:-1;1164:7:160;;;1060:116::o;1278:112:66:-;648:66;1342:11;:32;;;;;;:41;1278:112::o;2842:175::-;3004:6;2928:11;:73;2988:10;2950:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2950::66;;;2940:60;;;;;;;;;;;;;66:2:-1;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;1105:506:99;1282:57;;;-1:-1:-1;;;;;1282:57:99;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1282:57:99;;;;;;;;25:18:-1;;61:17;;-1:-1;;;;;182:15;1219:33:99;179:29:-1;;;160:49;;;1219:33:99;1195:21;1371:16;:14;:16::i;:::-;-1:-1:-1;;;;;1371:37:99;;1422:29;:27;:29::i;:::-;1465:4;1483:17;:15;:17::i;:::-;1371:139;;;;;-1:-1:-1;;;1371:139:99;;;;;;;-1:-1:-1;;;;;1371:139:99;-1:-1:-1;;;;;1371:139:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1371:139:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1371:139:99;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1371:139:99;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1371:139:99;;-1:-1:-1;1521:35:99;1371:139;1549:6;1521:15;:35::i;:::-;1566:38;1586:10;1598:5;1566:19;:38::i;699:964:112:-;1091:44:93;;;22:32:-1;6:49;;1091:44:93;;;;;49:4:-1;25:18;;61:17;;-1:-1;;;;;182:15;1114:20:93;179:29:-1;160:49;;1072:64:93;;;;1171:4:112;;1080::93;;1091:44;1072:64;;;25:18:-1;1072:64:93;;25:18:-1;1171:4:112;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1072:64:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1071:65;:208;;;;1252:4;-1:-1:-1;;;;;1224:53:93;;:55;;;;;-1:-1:-1;;;1224:55:93;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1224:55:93;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1224:55:93;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1224:55:93;-1:-1:-1;;;;;1210:69:93;:10;:69;1071:208;:299;;;-1:-1:-1;1343:10:93;1365:4;1343:27;1071:299;1050:382;;;;;;;;1196:15:112;:13;:15::i;:::-;1195:16;1187:25;;;;;;1223:35;1242:15;1223:18;:35::i;:::-;1268:50;1300:17;1268:31;:50::i;:::-;1328:28;1343:12;1328:14;:28::i;:::-;1366:44;1377:32;1366:10;:44::i;:::-;1420:63;1440:42;1420:19;:63::i;:::-;1493:37;1513:16;1493:19;:37::i;:::-;1540:31;1557:13;1540:16;:31::i;:::-;1581:17;1591:6;1581:9;:17::i;:::-;1608:15;:13;:15::i;:::-;1641;:13;:15::i;2149:190:93:-;-1:-1:-1;;;;;2213:22:93;;;;2205:31;;;;;;2251:39;2272:7;:5;:7::i;:::-;2251:39;;;-1:-1:-1;;;;;2251:39:93;;;;;;;;;;;;;;;;;;;;;1523:66;2300:21;;:14;:21;;;:32;;-1:-1:-1;;;;;;2300:32:93;-1:-1:-1;;;;;2300:32:93;;;;;;;;;;2149:190::o;3850:182:68:-;3952:13;:11;:13::i;:::-;3932:33;;;3924:42;;;;;;713:66;3976:11;:30;;;;;;:49;3850:182::o;388:373:77:-;523:12;;504:5;;463:17;-1:-1:-1;519:236:77;;;563:12;;579:2;563:18;555:27;;;;;;608;629:5;608:20;:27::i;:::-;596:39;-1:-1:-1;;;;;;657:23:77;;;;649:32;;;;;;716:27;:25;:27::i;:::-;-1:-1:-1;;;;;703:40:77;;;;;;;695:49;;;;;2726:122:117;2783:22;:20;:22::i;:::-;-1:-1:-1;;;;;2783:52:117;;2836:4;2783:58;;;;;-1:-1:-1;;;2783:58:117;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;1270:145:78;1352:4;1344:21;1375:33;1397:3;1344:21;1375;:33::i;1656:210::-;1795:21;;;;;;1811:4;1795:21;;;;;;1760:6;;1730:16;;-1:-1:-1;;;;;1795:15:78;;;;;:21;;;;;;;;;;;;;;1730:16;1795:15;:21;;;5:2:-1;;;;30:1;27;20:12;5:2;1795:21:78;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1795:21:78;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1795:21:78;;-1:-1:-1;1826:33:78;-1:-1:-1;;;;;1826:19:78;;1846:3;1795:21;1826:33;:19;:33;:::i;1733:127:79:-;1793:7;1819:34;1830:6;1838:14;:12;:14::i;:::-;1819:10;:34::i;4512:105:68:-;4556:7;4582:16;:14;:16::i;:::-;-1:-1:-1;;;;;4582:26:68;;:28;;;;;-1:-1:-1;;;4582:28:68;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;2305:252:66;2489:10;2406:14;:80;2473:10;2431:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2431:53:66;;;2421:64;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;2421:64:66;;;;;;;;;;;;;2406:80;;;;;;;;;;;;-1:-1:-1;2406:80:66;:93;;-1:-1:-1;;;;;;2406:93:66;-1:-1:-1;;;;;2406:93:66;;;;;;;;;;;-1:-1:-1;2509:41:66;;-1:-1:-1;2531:6:66;;-1:-1:-1;2539:10:66;2509:21;:41::i;311:164:101:-;462:6;391:11;:68;446:10;413:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;413:44:101;;;403:55;;;;;;;;;;;;;66:2:-1;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;992:183:101;1158:10;1080:14;:75;1142:10;1105:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1105:48:101;;;1095:59;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1095:59:101;;;;;;;;;;;;;1080:75;;;;;;;;;;;;-1:-1:-1;1080:75:101;:88;;-1:-1:-1;;;;;;1080:88:101;-1:-1:-1;;;;;1080:88:101;;;;;;;;;;;-1:-1:-1;;;;;992:183:101:o;489:153:63:-;556:31;580:6;556:23;:31::i;:::-;548:40;;;;;;;;95:66:83;598:28:63;;:14;:28;;;:37;;-1:-1:-1;;;;;;598:37:63;-1:-1:-1;;;;;598:37:63;;;;;;;;;;489:153::o;4870:446:72:-;4950:10;;;;4963:1;-1:-1:-1;4950:73:72;;;;-1:-1:-1;5013:10:72;;;;;5000;;;:23;4950:73;:139;;;;-1:-1:-1;5079:10:72;;;;5066;;:23;4950:139;4929:195;;;;;;;;5162:10;;756:66;5170:1;5135:24;;;5162:10;5135:24;;;;:37;;;;5208:10;;;;601:66;5182:23;;;:36;5254:10;;;;447:66;5228:23;;;:36;5280:29;;5162:7;;5298:10;;;;;5280:29;;;;;;;;;;;;;;;;;;4870:446;:::o;5322:314::-;5411:10;;;5398;;;:23;5390:32;;;;;;5509:10;;1096:66;5517:1;5472:34;;;5509:10;5472:34;;;;:47;;;;5565:10;;;;922:66;5529:33;;;:46;5591:38;;5509:7;;5618:10;;718:247:79;-1:-1:-1;;876:6:79;:12;:27;;;;;901:2;892:6;:11;876:27;868:36;;;;;;;;260:66;914:11;:26;;;;;;:44;718:247::o;281:82:87:-;160:66;325:24;;:11;:24;;;:31;;-1:-1:-1;;325:31:87;352:4;325:31;;;281:82::o;4800:109:68:-;4846:7;4872:16;:14;:16::i;:::-;-1:-1:-1;;;;;4872:28:68;;:30;;;;;-1:-1:-1;;;4872:30:68;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;1216:154:20;1350:2;1338:15;1332:22;;1310:54::o;1874:122:112:-;1934:7;1960:29;:27;:29::i;431:177:18:-;513:22;;-1:-1:-1;;;;;513:14:18;;;:22;;;;;528:6;;513:22;;;;528:6;513:14;:22;;;;;;;512:23;508:94;;;573:6;581:9;551:40;;:::i;:::-;-1:-1:-1;;;;;551:40:18;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;579:339:22;677:6;-1:-1:-1;;;;;665:28:22;;694:3;699:6;665:41;;;;;-1:-1:-1;;;665:41:22;;;;;;;-1:-1:-1;;;;;665:41:22;-1:-1:-1;;;;;665:41:22;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;665:41:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;665:41:22;;;;742:14;739:2;;;796;793:1;790;775:24;832:1;826:8;819:16;816:2;;;868:1;865;858:12;2040:290:79;2113:7;2136:11;;2132:55;;;-1:-1:-1;2170:6:79;2163:13;;2132:55;2209:1;2200:6;:10;2196:79;;;2233:31;:6;2244:2;:19;;;2233:31;:10;:31;:::i;:::-;2226:38;;;;2196:79;2291:32;:6;2314:7;;;;2302:2;:20;2291:32;:10;:32;:::i;437:7089:118:-;;;;;;;;;;:::o",
  "source": "pragma solidity 0.4.24;\n\nimport \"../../interfaces/IMintHandler.sol\";\nimport \"./BasicStakeTokenMediator.sol\";\nimport \"./HomeStakeTokenFeeManager.sol\";\nimport \"../../interfaces/IBurnableMintableERC677Token.sol\";\n\n/**\n* @title HomeStakeTokenMediator\n* @dev Home side implementation for stake token mediator intended to work on top of AMB bridge.\n* It is designed to be used as an implementation contract of EternalStorageProxy contract.\n*/\ncontract HomeStakeTokenMediator is BasicStakeTokenMediator, HomeStakeTokenFeeManager {\n    bytes32 internal constant MINT_HANDLER = 0x8a8236f871f2bbb44f59e8c68b82f7587d19c987e09aba39148cc97ea004a32e; // keccak256(abi.encodePacked(\"mintHandler\"))\n\n    /**\n     * Initializes home mediator\n     * @param _bridgeContract HomeAMB bridge contract\n     * @param _mediatorContract address of the mediator contract in the Foreign chain\n     * @param _erc677token address of STAKE token in the Home chain\n     * @param _dailyLimitMaxPerTxMinPerTxArray Home limits for outgoing transfers\n     * @param _executionDailyLimitExecutionMaxPerTxArray Home execution limits for incoming transfers\n     * @param _requestGasLimit gas limit used for AMB operations\n     * @param _decimalShift decimal shift for bridged STAKE token\n     * @param _owner address of new bridge owner\n     */\n    function initialize(\n        address _bridgeContract,\n        address _mediatorContract,\n        address _erc677token,\n        uint256[3] _dailyLimitMaxPerTxMinPerTxArray, // [ 0 = _dailyLimit, 1 = _maxPerTx, 2 = _minPerTx ]\n        uint256[2] _executionDailyLimitExecutionMaxPerTxArray, // [ 0 = _executionDailyLimit, 1 = _executionMaxPerTx ]\n        uint256 _requestGasLimit,\n        int256 _decimalShift,\n        address _owner\n    ) public returns (bool) {\n        addressStorage[MINT_HANDLER] = _erc677token;\n        return\n            super.initialize(\n                _bridgeContract,\n                _mediatorContract,\n                _erc677token,\n                _dailyLimitMaxPerTxMinPerTxArray,\n                _executionDailyLimitExecutionMaxPerTxArray,\n                _requestGasLimit,\n                _decimalShift,\n                _owner\n            );\n    }\n\n    /**\n     * Initializes rewardable home mediator\n     * @param _bridgeContract HomeAMB bridge contract\n     * @param _mediatorContract address of the mediator contract in the Foreign chain\n     * @param _erc677token address of STAKE token in the Home chain\n     * @param _dailyLimitMaxPerTxMinPerTxArray Home limits for outgoing transfers\n     * @param _executionDailyLimitExecutionMaxPerTxArray Home execution limits for incoming transfers\n     * @param _requestGasLimit gas limit used for AMB operations\n     * @param _decimalShift decimal shift for bridged STAKE token\n     * @param _owner address of new bridge owner\n     * @param _blockReward address of block reward contract used for fee distribution\n     * @param _fee initial home fee\n     */\n    function rewardableInitialize(\n        address _bridgeContract,\n        address _mediatorContract,\n        address _erc677token,\n        uint256[3] _dailyLimitMaxPerTxMinPerTxArray, // [ 0 = _dailyLimit, 1 = _maxPerTx, 2 = _minPerTx ]\n        uint256[2] _executionDailyLimitExecutionMaxPerTxArray, // [ 0 = _executionDailyLimit, 1 = _executionMaxPerTx ]\n        uint256 _requestGasLimit,\n        int256 _decimalShift,\n        address _owner,\n        address _blockReward,\n        uint256 _fee\n    ) external returns (bool) {\n        _setFee(_fee);\n        _setBlockRewardContract(_blockReward);\n        return\n            initialize(\n                _bridgeContract,\n                _mediatorContract,\n                _erc677token,\n                _dailyLimitMaxPerTxMinPerTxArray,\n                _executionDailyLimitExecutionMaxPerTxArray,\n                _requestGasLimit,\n                _decimalShift,\n                _owner\n            );\n    }\n\n    /**\n     * @dev Allows to transfer token ownership to different proxy contract.\n     * Can be called only once, when mediator is the current owner of a token.\n     * All subsequent calls to erc677 token will be done through new proxy contract.\n     * @param _owner token proxy contract address\n     */\n    function transferTokenOwnership(address _owner) external onlyOwner {\n        Ownable(erc677token()).transferOwnership(_owner);\n    }\n\n    /**\n     * @dev Updates address of contract used for handling mint operations,\n     * all subsequent mint operations will be called through this contract\n     * @param _mintHandler address of new contract\n     */\n    function setMintHandler(address _mintHandler) external onlyOwner {\n        require(AddressUtils.isContract(_mintHandler));\n        addressStorage[MINT_HANDLER] = _mintHandler;\n    }\n\n    /**\n     * @dev Retrieves currently used contract for handling mint operations, defaults to token itself\n     * @return address of mint handler contract\n     */\n    function getMintHandler() public view returns (IMintHandler) {\n        return IMintHandler(addressStorage[MINT_HANDLER]);\n    }\n\n    /**\n     * @dev Executes action on the request to deposit tokens relayed from the other network\n     * @param _recipient address of tokens receiver\n     * @param _value amount of bridged tokens\n     */\n    function executeActionOnBridgedTokens(address _recipient, uint256 _value) internal {\n        uint256 value = _shiftValue(_value);\n        bytes32 _messageId = messageId();\n        getMintHandler().mint(_recipient, value);\n        emit TokensBridged(_recipient, value, _messageId);\n    }\n\n    /**\n     * @dev Executes action on withdrawal of bridged tokens\n     * @param _token address of token contract\n     * @param _from address of tokens sender\n     * @param _value requsted amount of bridged tokens\n     * @param _data alternative receiver, if specified\n     */\n    function bridgeSpecificActionsOnTokenTransfer(ERC677 _token, address _from, uint256 _value, bytes _data) internal {\n        if (!lock()) {\n            // burn all incoming tokens\n            IBurnableMintableERC677Token(_token).burn(_value);\n\n            if (isFeeCollectingActivated()) {\n                uint256 fee = calculateFee(_value);\n                // the calculated fee is subtracted from the original value\n                passMessage(_from, chooseReceiver(_from, _data), _value.sub(fee));\n                if (fee > 0) {\n                    // the fee manager will take care about fee distribution\n                    _distributeFee(fee);\n                }\n            } else {\n                passMessage(_from, chooseReceiver(_from, _data), _value);\n            }\n        }\n    }\n\n    /**\n     * @dev Withdraws the erc20 tokens or native coins from this contract.\n     * @param _token address of the claimed token or address(0) for native coins.\n     * @param _to address of the tokens/coins receiver.\n     */\n    function claimTokens(address _token, address _to) external onlyIfUpgradeabilityOwner {\n        // For home side of the bridge, tokens are not locked at the contract, they are minted and burned instead.\n        // So, its is safe to allow claiming of any tokens. Native coins are allowed as well.\n        claimValues(_token, _to);\n    }\n\n    /**\n     * @dev Executes action on relayed request to fix the failed transfer of tokens\n     * @param _recipient address of tokens receiver\n     * @param _value amount of fixed tokens\n     */\n    function executeActionOnFixedTokens(address _recipient, uint256 _value) internal {\n        getMintHandler().mint(_recipient, _value);\n    }\n}\n",
  "sourcePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/amb_erc677_to_erc677/HomeStakeTokenMediator.sol",
  "ast": {
    "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/amb_erc677_to_erc677/HomeStakeTokenMediator.sol",
    "exportedSymbols": {
      "HomeStakeTokenMediator": [
        20163
      ]
    },
    "id": 20164,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 19882,
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:118"
      },
      {
        "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/interfaces/IMintHandler.sol",
        "file": "../../interfaces/IMintHandler.sol",
        "id": 19883,
        "nodeType": "ImportDirective",
        "scope": 20164,
        "sourceUnit": 1801,
        "src": "25:43:118",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/amb_erc677_to_erc677/BasicStakeTokenMediator.sol",
        "file": "./BasicStakeTokenMediator.sol",
        "id": 19884,
        "nodeType": "ImportDirective",
        "scope": 20164,
        "sourceUnit": 19199,
        "src": "69:39:118",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/amb_erc677_to_erc677/HomeStakeTokenFeeManager.sol",
        "file": "./HomeStakeTokenFeeManager.sol",
        "id": 19885,
        "nodeType": "ImportDirective",
        "scope": 20164,
        "sourceUnit": 19881,
        "src": "109:40:118",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/interfaces/IBurnableMintableERC677Token.sol",
        "file": "../../interfaces/IBurnableMintableERC677Token.sol",
        "id": 19886,
        "nodeType": "ImportDirective",
        "scope": 20164,
        "sourceUnit": 1678,
        "src": "150:59:118",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 19887,
              "name": "BasicStakeTokenMediator",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19198,
              "src": "472:23:118",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BasicStakeTokenMediator_$19198",
                "typeString": "contract BasicStakeTokenMediator"
              }
            },
            "id": 19888,
            "nodeType": "InheritanceSpecifier",
            "src": "472:23:118"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 19889,
              "name": "HomeStakeTokenFeeManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19880,
              "src": "497:24:118",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HomeStakeTokenFeeManager_$19880",
                "typeString": "contract HomeStakeTokenFeeManager"
              }
            },
            "id": 19890,
            "nodeType": "InheritanceSpecifier",
            "src": "497:24:118"
          }
        ],
        "contractDependencies": [
          1500,
          9266,
          10090,
          10871,
          11468,
          12916,
          13008,
          13954,
          14052,
          14172,
          14357,
          14798,
          15318,
          15349,
          16261,
          16390,
          16409,
          16712,
          19169,
          19198,
          19880
        ],
        "contractKind": "contract",
        "documentation": "@title HomeStakeTokenMediator\n@dev Home side implementation for stake token mediator intended to work on top of AMB bridge.\nIt is designed to be used as an implementation contract of EternalStorageProxy contract.",
        "fullyImplemented": true,
        "id": 20163,
        "linearizedBaseContracts": [
          20163,
          19880,
          19198,
          19169,
          16261,
          16390,
          10090,
          13954,
          14357,
          1500,
          12916,
          14172,
          11468,
          15318,
          13008,
          10871,
          16712,
          14052,
          16409,
          15349,
          14798,
          9266
        ],
        "name": "HomeStakeTokenMediator",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 19893,
            "name": "MINT_HANDLER",
            "nodeType": "VariableDeclaration",
            "scope": 20163,
            "src": "528:107:118",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 19891,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "528:7:118",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307838613832333666383731663262626234346635396538633638623832663735383764313963393837653039616261333931343863633937656130303461333265",
              "id": 19892,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "569:66:118",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_62649242615281595315670923160557474808717154178045469792435621148543584346926_by_1",
                "typeString": "int_const 6264...(69 digits omitted)...6926"
              },
              "value": "0x8a8236f871f2bbb44f59e8c68b82f7587d19c987e09aba39148cc97ea004a32e"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 19936,
              "nodeType": "Block",
              "src": "1768:416:118",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 19922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 19918,
                        "name": "addressStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9253,
                        "src": "1778:14:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 19920,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 19919,
                        "name": "MINT_HANDLER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19893,
                        "src": "1793:12:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1778:28:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 19921,
                      "name": "_erc677token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19899,
                      "src": "1809:12:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1778:43:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 19923,
                  "nodeType": "ExpressionStatement",
                  "src": "1778:43:118"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 19926,
                        "name": "_bridgeContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19895,
                        "src": "1884:15:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19927,
                        "name": "_mediatorContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19897,
                        "src": "1917:17:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19928,
                        "name": "_erc677token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19899,
                        "src": "1952:12:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19929,
                        "name": "_dailyLimitMaxPerTxMinPerTxArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19903,
                        "src": "1982:32:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                          "typeString": "uint256[3] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19930,
                        "name": "_executionDailyLimitExecutionMaxPerTxArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19907,
                        "src": "2032:42:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19931,
                        "name": "_requestGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19909,
                        "src": "2092:16:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19932,
                        "name": "_decimalShift",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19911,
                        "src": "2126:13:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19933,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19913,
                        "src": "2157:6:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                          "typeString": "uint256[3] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 19924,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31041,
                        "src": "1850:5:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_HomeStakeTokenMediator_$20163",
                          "typeString": "contract super HomeStakeTokenMediator"
                        }
                      },
                      "id": 19925,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18873,
                      "src": "1850:16:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$3_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$_t_int256_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address,address,address,uint256[3] memory,uint256[2] memory,uint256,int256,address) returns (bool)"
                      }
                    },
                    "id": 19934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1850:327:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 19917,
                  "id": 19935,
                  "nodeType": "Return",
                  "src": "1831:346:118"
                }
              ]
            },
            "documentation": "Initializes home mediator\n@param _bridgeContract HomeAMB bridge contract\n@param _mediatorContract address of the mediator contract in the Foreign chain\n@param _erc677token address of STAKE token in the Home chain\n@param _dailyLimitMaxPerTxMinPerTxArray Home limits for outgoing transfers\n@param _executionDailyLimitExecutionMaxPerTxArray Home execution limits for incoming transfers\n@param _requestGasLimit gas limit used for AMB operations\n@param _decimalShift decimal shift for bridged STAKE token\n@param _owner address of new bridge owner",
            "id": 19937,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19914,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19895,
                  "name": "_bridgeContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 19937,
                  "src": "1338:23:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19894,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1338:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19897,
                  "name": "_mediatorContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 19937,
                  "src": "1371:25:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19896,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1371:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19899,
                  "name": "_erc677token",
                  "nodeType": "VariableDeclaration",
                  "scope": 19937,
                  "src": "1406:20:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19898,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1406:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19903,
                  "name": "_dailyLimitMaxPerTxMinPerTxArray",
                  "nodeType": "VariableDeclaration",
                  "scope": 19937,
                  "src": "1436:43:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                    "typeString": "uint256[3]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 19900,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1436:7:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 19902,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "33",
                      "id": 19901,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1444:1:118",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "3"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1436:10:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
                      "typeString": "uint256[3]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19907,
                  "name": "_executionDailyLimitExecutionMaxPerTxArray",
                  "nodeType": "VariableDeclaration",
                  "scope": 19937,
                  "src": "1542:53:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 19904,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1542:7:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 19906,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 19905,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1550:1:118",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1542:10:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19909,
                  "name": "_requestGasLimit",
                  "nodeType": "VariableDeclaration",
                  "scope": 19937,
                  "src": "1661:24:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19908,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1661:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19911,
                  "name": "_decimalShift",
                  "nodeType": "VariableDeclaration",
                  "scope": 19937,
                  "src": "1695:20:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 19910,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1695:6:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19913,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 19937,
                  "src": "1725:14:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19912,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1725:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1328:417:118"
            },
            "payable": false,
            "returnParameters": {
              "id": 19917,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19916,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 19937,
                  "src": "1762:4:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 19915,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1762:4:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1761:6:118"
            },
            "scope": 20163,
            "src": "1309:875:118",
            "stateMutability": "nonpayable",
            "superFunction": 18873,
            "visibility": "public"
          },
          {
            "body": {
              "id": 19985,
              "nodeType": "Block",
              "src": "3467:427:118",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 19967,
                        "name": "_fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19961,
                        "src": "3485:4:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 19966,
                      "name": "_setFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19844,
                      "src": "3477:7:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 19968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3477:13:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19969,
                  "nodeType": "ExpressionStatement",
                  "src": "3477:13:118"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 19971,
                        "name": "_blockReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19959,
                        "src": "3524:12:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 19970,
                      "name": "_setBlockRewardContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13007,
                      "src": "3500:23:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 19972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3500:37:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19973,
                  "nodeType": "ExpressionStatement",
                  "src": "3500:37:118"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 19975,
                        "name": "_bridgeContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19939,
                        "src": "3594:15:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19976,
                        "name": "_mediatorContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19941,
                        "src": "3627:17:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19977,
                        "name": "_erc677token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19943,
                        "src": "3662:12:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19978,
                        "name": "_dailyLimitMaxPerTxMinPerTxArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19947,
                        "src": "3692:32:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$3_calldata_ptr",
                          "typeString": "uint256[3] calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19979,
                        "name": "_executionDailyLimitExecutionMaxPerTxArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19951,
                        "src": "3742:42:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                          "typeString": "uint256[2] calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19980,
                        "name": "_requestGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19953,
                        "src": "3802:16:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19981,
                        "name": "_decimalShift",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19955,
                        "src": "3836:13:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19982,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19957,
                        "src": "3867:6:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$3_calldata_ptr",
                          "typeString": "uint256[3] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                          "typeString": "uint256[2] calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 19974,
                      "name": "initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19937
                      ],
                      "referencedDeclaration": 19937,
                      "src": "3566:10:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$3_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$_t_int256_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address,address,address,uint256[3] memory,uint256[2] memory,uint256,int256,address) returns (bool)"
                      }
                    },
                    "id": 19983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3566:321:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 19965,
                  "id": 19984,
                  "nodeType": "Return",
                  "src": "3547:340:118"
                }
              ]
            },
            "documentation": "Initializes rewardable home mediator\n@param _bridgeContract HomeAMB bridge contract\n@param _mediatorContract address of the mediator contract in the Foreign chain\n@param _erc677token address of STAKE token in the Home chain\n@param _dailyLimitMaxPerTxMinPerTxArray Home limits for outgoing transfers\n@param _executionDailyLimitExecutionMaxPerTxArray Home execution limits for incoming transfers\n@param _requestGasLimit gas limit used for AMB operations\n@param _decimalShift decimal shift for bridged STAKE token\n@param _owner address of new bridge owner\n@param _blockReward address of block reward contract used for fee distribution\n@param _fee initial home fee",
            "id": 19986,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "rewardableInitialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19962,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19939,
                  "name": "_bridgeContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 19986,
                  "src": "2983:23:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19938,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2983:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19941,
                  "name": "_mediatorContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 19986,
                  "src": "3016:25:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19940,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3016:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19943,
                  "name": "_erc677token",
                  "nodeType": "VariableDeclaration",
                  "scope": 19986,
                  "src": "3051:20:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19942,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3051:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19947,
                  "name": "_dailyLimitMaxPerTxMinPerTxArray",
                  "nodeType": "VariableDeclaration",
                  "scope": 19986,
                  "src": "3081:43:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$3_calldata_ptr",
                    "typeString": "uint256[3]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 19944,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3081:7:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 19946,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "33",
                      "id": 19945,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3089:1:118",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "3"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "3081:10:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
                      "typeString": "uint256[3]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19951,
                  "name": "_executionDailyLimitExecutionMaxPerTxArray",
                  "nodeType": "VariableDeclaration",
                  "scope": 19986,
                  "src": "3187:53:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 19948,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3187:7:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 19950,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 19949,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3195:1:118",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "3187:10:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19953,
                  "name": "_requestGasLimit",
                  "nodeType": "VariableDeclaration",
                  "scope": 19986,
                  "src": "3306:24:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19952,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3306:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19955,
                  "name": "_decimalShift",
                  "nodeType": "VariableDeclaration",
                  "scope": 19986,
                  "src": "3340:20:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 19954,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3340:6:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19957,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 19986,
                  "src": "3370:14:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19956,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3370:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19959,
                  "name": "_blockReward",
                  "nodeType": "VariableDeclaration",
                  "scope": 19986,
                  "src": "3394:20:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19958,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3394:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19961,
                  "name": "_fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 19986,
                  "src": "3424:12:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19960,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3424:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2973:469:118"
            },
            "payable": false,
            "returnParameters": {
              "id": 19965,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19964,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 19986,
                  "src": "3461:4:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 19963,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3461:4:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3460:6:118"
            },
            "scope": 20163,
            "src": "2944:950:118",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 20001,
              "nodeType": "Block",
              "src": "4273:65:118",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 19998,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19988,
                        "src": "4324:6:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 19994,
                              "name": "erc677token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18882,
                              "src": "4291:11:118",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ERC677_$1469_$",
                                "typeString": "function () view returns (contract ERC677)"
                              }
                            },
                            "id": 19995,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4291:13:118",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC677_$1469",
                              "typeString": "contract ERC677"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC677_$1469",
                              "typeString": "contract ERC677"
                            }
                          ],
                          "id": 19993,
                          "name": "Ownable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15318,
                          "src": "4283:7:118",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Ownable_$15318_$",
                            "typeString": "type(contract Ownable)"
                          }
                        },
                        "id": 19996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4283:22:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Ownable_$15318",
                          "typeString": "contract Ownable"
                        }
                      },
                      "id": 19997,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15291,
                      "src": "4283:40:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 19999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4283:48:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20000,
                  "nodeType": "ExpressionStatement",
                  "src": "4283:48:118"
                }
              ]
            },
            "documentation": "@dev Allows to transfer token ownership to different proxy contract.\nCan be called only once, when mediator is the current owner of a token.\nAll subsequent calls to erc677 token will be done through new proxy contract.\n@param _owner token proxy contract address",
            "id": 20002,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 19991,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 19990,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 15233,
                  "src": "4263:9:118",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4263:9:118"
              }
            ],
            "name": "transferTokenOwnership",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19989,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19988,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 20002,
                  "src": "4238:14:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19987,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4238:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4237:16:118"
            },
            "payable": false,
            "returnParameters": {
              "id": 19992,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4273:0:118"
            },
            "scope": 20163,
            "src": "4206:132:118",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 20022,
              "nodeType": "Block",
              "src": "4626:116:118",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 20012,
                            "name": "_mintHandler",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20004,
                            "src": "4668:12:118",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 20010,
                            "name": "AddressUtils",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29889,
                            "src": "4644:12:118",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AddressUtils_$29889_$",
                              "typeString": "type(library AddressUtils)"
                            }
                          },
                          "id": 20011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29888,
                          "src": "4644:23:118",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 20013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4644:37:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 20009,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        30716,
                        30717
                      ],
                      "referencedDeclaration": 30716,
                      "src": "4636:7:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 20014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4636:46:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20015,
                  "nodeType": "ExpressionStatement",
                  "src": "4636:46:118"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 20020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 20016,
                        "name": "addressStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9253,
                        "src": "4692:14:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 20018,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 20017,
                        "name": "MINT_HANDLER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19893,
                        "src": "4707:12:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4692:28:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 20019,
                      "name": "_mintHandler",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20004,
                      "src": "4723:12:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4692:43:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 20021,
                  "nodeType": "ExpressionStatement",
                  "src": "4692:43:118"
                }
              ]
            },
            "documentation": "@dev Updates address of contract used for handling mint operations,\nall subsequent mint operations will be called through this contract\n@param _mintHandler address of new contract",
            "id": 20023,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 20007,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 20006,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 15233,
                  "src": "4616:9:118",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4616:9:118"
              }
            ],
            "name": "setMintHandler",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20005,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20004,
                  "name": "_mintHandler",
                  "nodeType": "VariableDeclaration",
                  "scope": 20023,
                  "src": "4585:20:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20003,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4585:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4584:22:118"
            },
            "payable": false,
            "returnParameters": {
              "id": 20008,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4626:0:118"
            },
            "scope": 20163,
            "src": "4561:181:118",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 20034,
              "nodeType": "Block",
              "src": "4974:66:118",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 20029,
                          "name": "addressStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9253,
                          "src": "5004:14:118",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                            "typeString": "mapping(bytes32 => address)"
                          }
                        },
                        "id": 20031,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 20030,
                          "name": "MINT_HANDLER",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19893,
                          "src": "5019:12:118",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5004:28:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 20028,
                      "name": "IMintHandler",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1800,
                      "src": "4991:12:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IMintHandler_$1800_$",
                        "typeString": "type(contract IMintHandler)"
                      }
                    },
                    "id": 20032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4991:42:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMintHandler_$1800",
                      "typeString": "contract IMintHandler"
                    }
                  },
                  "functionReturnParameters": 20027,
                  "id": 20033,
                  "nodeType": "Return",
                  "src": "4984:49:118"
                }
              ]
            },
            "documentation": "@dev Retrieves currently used contract for handling mint operations, defaults to token itself\n@return address of mint handler contract",
            "id": 20035,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getMintHandler",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20024,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4936:2:118"
            },
            "payable": false,
            "returnParameters": {
              "id": 20027,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20026,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 20035,
                  "src": "4960:12:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IMintHandler_$1800",
                    "typeString": "contract IMintHandler"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 20025,
                    "name": "IMintHandler",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1800,
                    "src": "4960:12:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMintHandler_$1800",
                      "typeString": "contract IMintHandler"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4959:14:118"
            },
            "scope": 20163,
            "src": "4913:127:118",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 20066,
              "nodeType": "Block",
              "src": "5335:203:118",
              "statements": [
                {
                  "assignments": [
                    20043
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 20043,
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "scope": 20067,
                      "src": "5345:13:118",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 20042,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5345:7:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 20047,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20045,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20039,
                        "src": "5373:6:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 20044,
                      "name": "_shiftValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14130,
                      "src": "5361:11:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 20046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5361:19:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5345:35:118"
                },
                {
                  "assignments": [
                    20049
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 20049,
                      "name": "_messageId",
                      "nodeType": "VariableDeclaration",
                      "scope": 20067,
                      "src": "5390:18:118",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 20048,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5390:7:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 20052,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 20050,
                      "name": "messageId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11456,
                      "src": "5411:9:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
                        "typeString": "function () view returns (bytes32)"
                      }
                    },
                    "id": 20051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5411:11:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5390:32:118"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20056,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20037,
                        "src": "5454:10:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 20057,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20043,
                        "src": "5466:5:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 20053,
                          "name": "getMintHandler",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20035,
                          "src": "5432:14:118",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IMintHandler_$1800_$",
                            "typeString": "function () view returns (contract IMintHandler)"
                          }
                        },
                        "id": 20054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5432:16:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMintHandler_$1800",
                          "typeString": "contract IMintHandler"
                        }
                      },
                      "id": 20055,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1799,
                      "src": "5432:21:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 20058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5432:40:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 20059,
                  "nodeType": "ExpressionStatement",
                  "src": "5432:40:118"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20061,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20037,
                        "src": "5501:10:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 20062,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20043,
                        "src": "5513:5:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 20063,
                        "name": "_messageId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20049,
                        "src": "5520:10:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 20060,
                      "name": "TokensBridged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16056,
                      "src": "5487:13:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,uint256,bytes32)"
                      }
                    },
                    "id": 20064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5487:44:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20065,
                  "nodeType": "EmitStatement",
                  "src": "5482:49:118"
                }
              ]
            },
            "documentation": "@dev Executes action on the request to deposit tokens relayed from the other network\n@param _recipient address of tokens receiver\n@param _value amount of bridged tokens",
            "id": 20067,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "executeActionOnBridgedTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20040,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20037,
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 20067,
                  "src": "5290:18:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20036,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5290:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20039,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 20067,
                  "src": "5310:14:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20038,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5310:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5289:36:118"
            },
            "payable": false,
            "returnParameters": {
              "id": 20041,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5335:0:118"
            },
            "scope": 20163,
            "src": "5252:286:118",
            "stateMutability": "nonpayable",
            "superFunction": 16253,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 20131,
              "nodeType": "Block",
              "src": "5936:677:118",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 20080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "5950:7:118",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 20078,
                        "name": "lock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15336,
                        "src": "5951:4:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
                          "typeString": "function () returns (bool)"
                        }
                      },
                      "id": 20079,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5951:6:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 20130,
                  "nodeType": "IfStatement",
                  "src": "5946:661:118",
                  "trueBody": {
                    "id": 20129,
                    "nodeType": "Block",
                    "src": "5959:648:118",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 20085,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20073,
                              "src": "6055:6:118",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 20082,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 20069,
                                  "src": "6042:6:118",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC677_$1469",
                                    "typeString": "contract ERC677"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC677_$1469",
                                    "typeString": "contract ERC677"
                                  }
                                ],
                                "id": 20081,
                                "name": "IBurnableMintableERC677Token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1677,
                                "src": "6013:28:118",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IBurnableMintableERC677Token_$1677_$",
                                  "typeString": "type(contract IBurnableMintableERC677Token)"
                                }
                              },
                              "id": 20083,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6013:36:118",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IBurnableMintableERC677Token_$1677",
                                "typeString": "contract IBurnableMintableERC677Token"
                              }
                            },
                            "id": 20084,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "burn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1669,
                            "src": "6013:41:118",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 20086,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6013:49:118",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 20087,
                        "nodeType": "ExpressionStatement",
                        "src": "6013:49:118"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 20088,
                            "name": "isFeeCollectingActivated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19867,
                            "src": "6081:24:118",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 20089,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6081:26:118",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 20127,
                          "nodeType": "Block",
                          "src": "6508:89:118",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 20119,
                                    "name": "_from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 20071,
                                    "src": "6538:5:118",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 20121,
                                        "name": "_from",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 20071,
                                        "src": "6560:5:118",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "argumentTypes": null,
                                        "id": 20122,
                                        "name": "_data",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 20075,
                                        "src": "6567:5:118",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      ],
                                      "id": 20120,
                                      "name": "chooseReceiver",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 13948,
                                      "src": "6545:14:118",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$returns$_t_address_$",
                                        "typeString": "function (address,bytes memory) view returns (address)"
                                      }
                                    },
                                    "id": 20123,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6545:28:118",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 20124,
                                    "name": "_value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 20073,
                                    "src": "6575:6:118",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 20118,
                                  "name": "passMessage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 16103,
                                  "src": "6526:11:118",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 20125,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6526:56:118",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 20126,
                              "nodeType": "ExpressionStatement",
                              "src": "6526:56:118"
                            }
                          ]
                        },
                        "id": 20128,
                        "nodeType": "IfStatement",
                        "src": "6077:520:118",
                        "trueBody": {
                          "id": 20117,
                          "nodeType": "Block",
                          "src": "6109:393:118",
                          "statements": [
                            {
                              "assignments": [
                                20091
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 20091,
                                  "name": "fee",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 20132,
                                  "src": "6127:11:118",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 20090,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6127:7:118",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 20095,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 20093,
                                    "name": "_value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 20073,
                                    "src": "6154:6:118",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 20092,
                                  "name": "calculateFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 19810,
                                  "src": "6141:12:118",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256) view returns (uint256)"
                                  }
                                },
                                "id": 20094,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6141:20:118",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6127:34:118"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 20097,
                                    "name": "_from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 20071,
                                    "src": "6267:5:118",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 20099,
                                        "name": "_from",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 20071,
                                        "src": "6289:5:118",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "argumentTypes": null,
                                        "id": 20100,
                                        "name": "_data",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 20075,
                                        "src": "6296:5:118",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      ],
                                      "id": 20098,
                                      "name": "chooseReceiver",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 13948,
                                      "src": "6274:14:118",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$returns$_t_address_$",
                                        "typeString": "function (address,bytes memory) view returns (address)"
                                      }
                                    },
                                    "id": 20101,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6274:28:118",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 20104,
                                        "name": "fee",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 20091,
                                        "src": "6315:3:118",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 20102,
                                        "name": "_value",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 20073,
                                        "src": "6304:6:118",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 20103,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sub",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 29958,
                                      "src": "6304:10:118",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 20105,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6304:15:118",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 20096,
                                  "name": "passMessage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 16103,
                                  "src": "6255:11:118",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 20106,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6255:65:118",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 20107,
                              "nodeType": "ExpressionStatement",
                              "src": "6255:65:118"
                            },
                            {
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 20110,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 20108,
                                  "name": "fee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 20091,
                                  "src": "6342:3:118",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 20109,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6348:1:118",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "6342:7:118",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": null,
                              "id": 20116,
                              "nodeType": "IfStatement",
                              "src": "6338:150:118",
                              "trueBody": {
                                "id": 20115,
                                "nodeType": "Block",
                                "src": "6351:137:118",
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 20112,
                                          "name": "fee",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 20091,
                                          "src": "6465:3:118",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 20111,
                                        "name": "_distributeFee",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 19879,
                                        "src": "6450:14:118",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                                          "typeString": "function (uint256)"
                                        }
                                      },
                                      "id": 20113,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6450:19:118",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 20114,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6450:19:118"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev Executes action on withdrawal of bridged tokens\n@param _token address of token contract\n@param _from address of tokens sender\n@param _value requsted amount of bridged tokens\n@param _data alternative receiver, if specified",
            "id": 20132,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "bridgeSpecificActionsOnTokenTransfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20076,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20069,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 20132,
                  "src": "5868:13:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC677_$1469",
                    "typeString": "contract ERC677"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 20068,
                    "name": "ERC677",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1469,
                    "src": "5868:6:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC677_$1469",
                      "typeString": "contract ERC677"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20071,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 20132,
                  "src": "5883:13:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20070,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5883:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20073,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 20132,
                  "src": "5898:14:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20072,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5898:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20075,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 20132,
                  "src": "5914:11:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 20074,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5914:5:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5867:59:118"
            },
            "payable": false,
            "returnParameters": {
              "id": 20077,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5936:0:118"
            },
            "scope": 20163,
            "src": "5822:791:118",
            "stateMutability": "nonpayable",
            "superFunction": 10089,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 20146,
              "nodeType": "Block",
              "src": "6933:250:118",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20142,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20134,
                        "src": "7164:6:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 20143,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20136,
                        "src": "7172:3:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 20141,
                      "name": "claimValues",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14003,
                      "src": "7152:11:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 20144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7152:24:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20145,
                  "nodeType": "ExpressionStatement",
                  "src": "7152:24:118"
                }
              ]
            },
            "documentation": "@dev Withdraws the erc20 tokens or native coins from this contract.\n@param _token address of the claimed token or address(0) for native coins.\n@param _to address of the tokens/coins receiver.",
            "id": 20147,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 20139,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 20138,
                  "name": "onlyIfUpgradeabilityOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 16408,
                  "src": "6907:25:118",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6907:25:118"
              }
            ],
            "name": "claimTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20134,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 20147,
                  "src": "6869:14:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20133,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6869:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20136,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 20147,
                  "src": "6885:11:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20135,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6885:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6868:29:118"
            },
            "payable": false,
            "returnParameters": {
              "id": 20140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6933:0:118"
            },
            "scope": 20163,
            "src": "6848:335:118",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 20161,
              "nodeType": "Block",
              "src": "7466:58:118",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20157,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20149,
                        "src": "7498:10:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 20158,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20151,
                        "src": "7510:6:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 20154,
                          "name": "getMintHandler",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20035,
                          "src": "7476:14:118",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IMintHandler_$1800_$",
                            "typeString": "function () view returns (contract IMintHandler)"
                          }
                        },
                        "id": 20155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7476:16:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMintHandler_$1800",
                          "typeString": "contract IMintHandler"
                        }
                      },
                      "id": 20156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1799,
                      "src": "7476:21:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 20159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7476:41:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 20160,
                  "nodeType": "ExpressionStatement",
                  "src": "7476:41:118"
                }
              ]
            },
            "documentation": "@dev Executes action on relayed request to fix the failed transfer of tokens\n@param _recipient address of tokens receiver\n@param _value amount of fixed tokens",
            "id": 20162,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "executeActionOnFixedTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20149,
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 20162,
                  "src": "7421:18:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20148,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7421:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20151,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 20162,
                  "src": "7441:14:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20150,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7441:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7420:36:118"
            },
            "payable": false,
            "returnParameters": {
              "id": 20153,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7466:0:118"
            },
            "scope": 20163,
            "src": "7385:139:118",
            "stateMutability": "nonpayable",
            "superFunction": 16260,
            "visibility": "internal"
          }
        ],
        "scope": 20164,
        "src": "437:7089:118"
      }
    ],
    "src": "0:7527:118"
  },
  "legacyAST": {
    "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/amb_erc677_to_erc677/HomeStakeTokenMediator.sol",
    "exportedSymbols": {
      "HomeStakeTokenMediator": [
        20163
      ]
    },
    "id": 20164,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 19882,
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:118"
      },
      {
        "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/interfaces/IMintHandler.sol",
        "file": "../../interfaces/IMintHandler.sol",
        "id": 19883,
        "nodeType": "ImportDirective",
        "scope": 20164,
        "sourceUnit": 1801,
        "src": "25:43:118",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/amb_erc677_to_erc677/BasicStakeTokenMediator.sol",
        "file": "./BasicStakeTokenMediator.sol",
        "id": 19884,
        "nodeType": "ImportDirective",
        "scope": 20164,
        "sourceUnit": 19199,
        "src": "69:39:118",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/amb_erc677_to_erc677/HomeStakeTokenFeeManager.sol",
        "file": "./HomeStakeTokenFeeManager.sol",
        "id": 19885,
        "nodeType": "ImportDirective",
        "scope": 20164,
        "sourceUnit": 19881,
        "src": "109:40:118",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/interfaces/IBurnableMintableERC677Token.sol",
        "file": "../../interfaces/IBurnableMintableERC677Token.sol",
        "id": 19886,
        "nodeType": "ImportDirective",
        "scope": 20164,
        "sourceUnit": 1678,
        "src": "150:59:118",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 19887,
              "name": "BasicStakeTokenMediator",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19198,
              "src": "472:23:118",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BasicStakeTokenMediator_$19198",
                "typeString": "contract BasicStakeTokenMediator"
              }
            },
            "id": 19888,
            "nodeType": "InheritanceSpecifier",
            "src": "472:23:118"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 19889,
              "name": "HomeStakeTokenFeeManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19880,
              "src": "497:24:118",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HomeStakeTokenFeeManager_$19880",
                "typeString": "contract HomeStakeTokenFeeManager"
              }
            },
            "id": 19890,
            "nodeType": "InheritanceSpecifier",
            "src": "497:24:118"
          }
        ],
        "contractDependencies": [
          1500,
          9266,
          10090,
          10871,
          11468,
          12916,
          13008,
          13954,
          14052,
          14172,
          14357,
          14798,
          15318,
          15349,
          16261,
          16390,
          16409,
          16712,
          19169,
          19198,
          19880
        ],
        "contractKind": "contract",
        "documentation": "@title HomeStakeTokenMediator\n@dev Home side implementation for stake token mediator intended to work on top of AMB bridge.\nIt is designed to be used as an implementation contract of EternalStorageProxy contract.",
        "fullyImplemented": true,
        "id": 20163,
        "linearizedBaseContracts": [
          20163,
          19880,
          19198,
          19169,
          16261,
          16390,
          10090,
          13954,
          14357,
          1500,
          12916,
          14172,
          11468,
          15318,
          13008,
          10871,
          16712,
          14052,
          16409,
          15349,
          14798,
          9266
        ],
        "name": "HomeStakeTokenMediator",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 19893,
            "name": "MINT_HANDLER",
            "nodeType": "VariableDeclaration",
            "scope": 20163,
            "src": "528:107:118",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 19891,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "528:7:118",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307838613832333666383731663262626234346635396538633638623832663735383764313963393837653039616261333931343863633937656130303461333265",
              "id": 19892,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "569:66:118",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_62649242615281595315670923160557474808717154178045469792435621148543584346926_by_1",
                "typeString": "int_const 6264...(69 digits omitted)...6926"
              },
              "value": "0x8a8236f871f2bbb44f59e8c68b82f7587d19c987e09aba39148cc97ea004a32e"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 19936,
              "nodeType": "Block",
              "src": "1768:416:118",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 19922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 19918,
                        "name": "addressStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9253,
                        "src": "1778:14:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 19920,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 19919,
                        "name": "MINT_HANDLER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19893,
                        "src": "1793:12:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1778:28:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 19921,
                      "name": "_erc677token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19899,
                      "src": "1809:12:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1778:43:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 19923,
                  "nodeType": "ExpressionStatement",
                  "src": "1778:43:118"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 19926,
                        "name": "_bridgeContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19895,
                        "src": "1884:15:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19927,
                        "name": "_mediatorContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19897,
                        "src": "1917:17:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19928,
                        "name": "_erc677token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19899,
                        "src": "1952:12:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19929,
                        "name": "_dailyLimitMaxPerTxMinPerTxArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19903,
                        "src": "1982:32:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                          "typeString": "uint256[3] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19930,
                        "name": "_executionDailyLimitExecutionMaxPerTxArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19907,
                        "src": "2032:42:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19931,
                        "name": "_requestGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19909,
                        "src": "2092:16:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19932,
                        "name": "_decimalShift",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19911,
                        "src": "2126:13:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19933,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19913,
                        "src": "2157:6:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                          "typeString": "uint256[3] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 19924,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31041,
                        "src": "1850:5:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_HomeStakeTokenMediator_$20163",
                          "typeString": "contract super HomeStakeTokenMediator"
                        }
                      },
                      "id": 19925,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18873,
                      "src": "1850:16:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$3_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$_t_int256_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address,address,address,uint256[3] memory,uint256[2] memory,uint256,int256,address) returns (bool)"
                      }
                    },
                    "id": 19934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1850:327:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 19917,
                  "id": 19935,
                  "nodeType": "Return",
                  "src": "1831:346:118"
                }
              ]
            },
            "documentation": "Initializes home mediator\n@param _bridgeContract HomeAMB bridge contract\n@param _mediatorContract address of the mediator contract in the Foreign chain\n@param _erc677token address of STAKE token in the Home chain\n@param _dailyLimitMaxPerTxMinPerTxArray Home limits for outgoing transfers\n@param _executionDailyLimitExecutionMaxPerTxArray Home execution limits for incoming transfers\n@param _requestGasLimit gas limit used for AMB operations\n@param _decimalShift decimal shift for bridged STAKE token\n@param _owner address of new bridge owner",
            "id": 19937,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19914,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19895,
                  "name": "_bridgeContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 19937,
                  "src": "1338:23:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19894,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1338:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19897,
                  "name": "_mediatorContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 19937,
                  "src": "1371:25:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19896,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1371:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19899,
                  "name": "_erc677token",
                  "nodeType": "VariableDeclaration",
                  "scope": 19937,
                  "src": "1406:20:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19898,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1406:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19903,
                  "name": "_dailyLimitMaxPerTxMinPerTxArray",
                  "nodeType": "VariableDeclaration",
                  "scope": 19937,
                  "src": "1436:43:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                    "typeString": "uint256[3]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 19900,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1436:7:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 19902,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "33",
                      "id": 19901,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1444:1:118",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "3"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1436:10:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
                      "typeString": "uint256[3]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19907,
                  "name": "_executionDailyLimitExecutionMaxPerTxArray",
                  "nodeType": "VariableDeclaration",
                  "scope": 19937,
                  "src": "1542:53:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 19904,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1542:7:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 19906,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 19905,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1550:1:118",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1542:10:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19909,
                  "name": "_requestGasLimit",
                  "nodeType": "VariableDeclaration",
                  "scope": 19937,
                  "src": "1661:24:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19908,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1661:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19911,
                  "name": "_decimalShift",
                  "nodeType": "VariableDeclaration",
                  "scope": 19937,
                  "src": "1695:20:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 19910,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1695:6:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19913,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 19937,
                  "src": "1725:14:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19912,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1725:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1328:417:118"
            },
            "payable": false,
            "returnParameters": {
              "id": 19917,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19916,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 19937,
                  "src": "1762:4:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 19915,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1762:4:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1761:6:118"
            },
            "scope": 20163,
            "src": "1309:875:118",
            "stateMutability": "nonpayable",
            "superFunction": 18873,
            "visibility": "public"
          },
          {
            "body": {
              "id": 19985,
              "nodeType": "Block",
              "src": "3467:427:118",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 19967,
                        "name": "_fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19961,
                        "src": "3485:4:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 19966,
                      "name": "_setFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19844,
                      "src": "3477:7:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 19968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3477:13:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19969,
                  "nodeType": "ExpressionStatement",
                  "src": "3477:13:118"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 19971,
                        "name": "_blockReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19959,
                        "src": "3524:12:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 19970,
                      "name": "_setBlockRewardContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13007,
                      "src": "3500:23:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 19972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3500:37:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19973,
                  "nodeType": "ExpressionStatement",
                  "src": "3500:37:118"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 19975,
                        "name": "_bridgeContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19939,
                        "src": "3594:15:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19976,
                        "name": "_mediatorContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19941,
                        "src": "3627:17:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19977,
                        "name": "_erc677token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19943,
                        "src": "3662:12:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19978,
                        "name": "_dailyLimitMaxPerTxMinPerTxArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19947,
                        "src": "3692:32:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$3_calldata_ptr",
                          "typeString": "uint256[3] calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19979,
                        "name": "_executionDailyLimitExecutionMaxPerTxArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19951,
                        "src": "3742:42:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                          "typeString": "uint256[2] calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19980,
                        "name": "_requestGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19953,
                        "src": "3802:16:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19981,
                        "name": "_decimalShift",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19955,
                        "src": "3836:13:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19982,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19957,
                        "src": "3867:6:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$3_calldata_ptr",
                          "typeString": "uint256[3] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                          "typeString": "uint256[2] calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 19974,
                      "name": "initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19937
                      ],
                      "referencedDeclaration": 19937,
                      "src": "3566:10:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$3_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$_t_int256_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address,address,address,uint256[3] memory,uint256[2] memory,uint256,int256,address) returns (bool)"
                      }
                    },
                    "id": 19983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3566:321:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 19965,
                  "id": 19984,
                  "nodeType": "Return",
                  "src": "3547:340:118"
                }
              ]
            },
            "documentation": "Initializes rewardable home mediator\n@param _bridgeContract HomeAMB bridge contract\n@param _mediatorContract address of the mediator contract in the Foreign chain\n@param _erc677token address of STAKE token in the Home chain\n@param _dailyLimitMaxPerTxMinPerTxArray Home limits for outgoing transfers\n@param _executionDailyLimitExecutionMaxPerTxArray Home execution limits for incoming transfers\n@param _requestGasLimit gas limit used for AMB operations\n@param _decimalShift decimal shift for bridged STAKE token\n@param _owner address of new bridge owner\n@param _blockReward address of block reward contract used for fee distribution\n@param _fee initial home fee",
            "id": 19986,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "rewardableInitialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19962,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19939,
                  "name": "_bridgeContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 19986,
                  "src": "2983:23:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19938,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2983:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19941,
                  "name": "_mediatorContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 19986,
                  "src": "3016:25:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19940,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3016:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19943,
                  "name": "_erc677token",
                  "nodeType": "VariableDeclaration",
                  "scope": 19986,
                  "src": "3051:20:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19942,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3051:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19947,
                  "name": "_dailyLimitMaxPerTxMinPerTxArray",
                  "nodeType": "VariableDeclaration",
                  "scope": 19986,
                  "src": "3081:43:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$3_calldata_ptr",
                    "typeString": "uint256[3]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 19944,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3081:7:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 19946,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "33",
                      "id": 19945,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3089:1:118",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "3"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "3081:10:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
                      "typeString": "uint256[3]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19951,
                  "name": "_executionDailyLimitExecutionMaxPerTxArray",
                  "nodeType": "VariableDeclaration",
                  "scope": 19986,
                  "src": "3187:53:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 19948,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3187:7:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 19950,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 19949,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3195:1:118",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "3187:10:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19953,
                  "name": "_requestGasLimit",
                  "nodeType": "VariableDeclaration",
                  "scope": 19986,
                  "src": "3306:24:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19952,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3306:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19955,
                  "name": "_decimalShift",
                  "nodeType": "VariableDeclaration",
                  "scope": 19986,
                  "src": "3340:20:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 19954,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3340:6:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19957,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 19986,
                  "src": "3370:14:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19956,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3370:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19959,
                  "name": "_blockReward",
                  "nodeType": "VariableDeclaration",
                  "scope": 19986,
                  "src": "3394:20:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19958,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3394:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19961,
                  "name": "_fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 19986,
                  "src": "3424:12:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19960,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3424:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2973:469:118"
            },
            "payable": false,
            "returnParameters": {
              "id": 19965,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19964,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 19986,
                  "src": "3461:4:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 19963,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3461:4:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3460:6:118"
            },
            "scope": 20163,
            "src": "2944:950:118",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 20001,
              "nodeType": "Block",
              "src": "4273:65:118",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 19998,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19988,
                        "src": "4324:6:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 19994,
                              "name": "erc677token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18882,
                              "src": "4291:11:118",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ERC677_$1469_$",
                                "typeString": "function () view returns (contract ERC677)"
                              }
                            },
                            "id": 19995,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4291:13:118",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC677_$1469",
                              "typeString": "contract ERC677"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC677_$1469",
                              "typeString": "contract ERC677"
                            }
                          ],
                          "id": 19993,
                          "name": "Ownable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15318,
                          "src": "4283:7:118",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Ownable_$15318_$",
                            "typeString": "type(contract Ownable)"
                          }
                        },
                        "id": 19996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4283:22:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Ownable_$15318",
                          "typeString": "contract Ownable"
                        }
                      },
                      "id": 19997,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15291,
                      "src": "4283:40:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 19999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4283:48:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20000,
                  "nodeType": "ExpressionStatement",
                  "src": "4283:48:118"
                }
              ]
            },
            "documentation": "@dev Allows to transfer token ownership to different proxy contract.\nCan be called only once, when mediator is the current owner of a token.\nAll subsequent calls to erc677 token will be done through new proxy contract.\n@param _owner token proxy contract address",
            "id": 20002,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 19991,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 19990,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 15233,
                  "src": "4263:9:118",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4263:9:118"
              }
            ],
            "name": "transferTokenOwnership",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19989,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19988,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 20002,
                  "src": "4238:14:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19987,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4238:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4237:16:118"
            },
            "payable": false,
            "returnParameters": {
              "id": 19992,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4273:0:118"
            },
            "scope": 20163,
            "src": "4206:132:118",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 20022,
              "nodeType": "Block",
              "src": "4626:116:118",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 20012,
                            "name": "_mintHandler",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20004,
                            "src": "4668:12:118",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 20010,
                            "name": "AddressUtils",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29889,
                            "src": "4644:12:118",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AddressUtils_$29889_$",
                              "typeString": "type(library AddressUtils)"
                            }
                          },
                          "id": 20011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29888,
                          "src": "4644:23:118",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 20013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4644:37:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 20009,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        30716,
                        30717
                      ],
                      "referencedDeclaration": 30716,
                      "src": "4636:7:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 20014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4636:46:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20015,
                  "nodeType": "ExpressionStatement",
                  "src": "4636:46:118"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 20020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 20016,
                        "name": "addressStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9253,
                        "src": "4692:14:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 20018,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 20017,
                        "name": "MINT_HANDLER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19893,
                        "src": "4707:12:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4692:28:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 20019,
                      "name": "_mintHandler",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20004,
                      "src": "4723:12:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4692:43:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 20021,
                  "nodeType": "ExpressionStatement",
                  "src": "4692:43:118"
                }
              ]
            },
            "documentation": "@dev Updates address of contract used for handling mint operations,\nall subsequent mint operations will be called through this contract\n@param _mintHandler address of new contract",
            "id": 20023,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 20007,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 20006,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 15233,
                  "src": "4616:9:118",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4616:9:118"
              }
            ],
            "name": "setMintHandler",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20005,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20004,
                  "name": "_mintHandler",
                  "nodeType": "VariableDeclaration",
                  "scope": 20023,
                  "src": "4585:20:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20003,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4585:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4584:22:118"
            },
            "payable": false,
            "returnParameters": {
              "id": 20008,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4626:0:118"
            },
            "scope": 20163,
            "src": "4561:181:118",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 20034,
              "nodeType": "Block",
              "src": "4974:66:118",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 20029,
                          "name": "addressStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9253,
                          "src": "5004:14:118",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                            "typeString": "mapping(bytes32 => address)"
                          }
                        },
                        "id": 20031,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 20030,
                          "name": "MINT_HANDLER",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19893,
                          "src": "5019:12:118",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5004:28:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 20028,
                      "name": "IMintHandler",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1800,
                      "src": "4991:12:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IMintHandler_$1800_$",
                        "typeString": "type(contract IMintHandler)"
                      }
                    },
                    "id": 20032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4991:42:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMintHandler_$1800",
                      "typeString": "contract IMintHandler"
                    }
                  },
                  "functionReturnParameters": 20027,
                  "id": 20033,
                  "nodeType": "Return",
                  "src": "4984:49:118"
                }
              ]
            },
            "documentation": "@dev Retrieves currently used contract for handling mint operations, defaults to token itself\n@return address of mint handler contract",
            "id": 20035,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getMintHandler",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20024,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4936:2:118"
            },
            "payable": false,
            "returnParameters": {
              "id": 20027,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20026,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 20035,
                  "src": "4960:12:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IMintHandler_$1800",
                    "typeString": "contract IMintHandler"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 20025,
                    "name": "IMintHandler",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1800,
                    "src": "4960:12:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMintHandler_$1800",
                      "typeString": "contract IMintHandler"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4959:14:118"
            },
            "scope": 20163,
            "src": "4913:127:118",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 20066,
              "nodeType": "Block",
              "src": "5335:203:118",
              "statements": [
                {
                  "assignments": [
                    20043
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 20043,
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "scope": 20067,
                      "src": "5345:13:118",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 20042,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5345:7:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 20047,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20045,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20039,
                        "src": "5373:6:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 20044,
                      "name": "_shiftValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14130,
                      "src": "5361:11:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 20046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5361:19:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5345:35:118"
                },
                {
                  "assignments": [
                    20049
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 20049,
                      "name": "_messageId",
                      "nodeType": "VariableDeclaration",
                      "scope": 20067,
                      "src": "5390:18:118",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 20048,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5390:7:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 20052,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 20050,
                      "name": "messageId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11456,
                      "src": "5411:9:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
                        "typeString": "function () view returns (bytes32)"
                      }
                    },
                    "id": 20051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5411:11:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5390:32:118"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20056,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20037,
                        "src": "5454:10:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 20057,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20043,
                        "src": "5466:5:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 20053,
                          "name": "getMintHandler",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20035,
                          "src": "5432:14:118",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IMintHandler_$1800_$",
                            "typeString": "function () view returns (contract IMintHandler)"
                          }
                        },
                        "id": 20054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5432:16:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMintHandler_$1800",
                          "typeString": "contract IMintHandler"
                        }
                      },
                      "id": 20055,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1799,
                      "src": "5432:21:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 20058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5432:40:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 20059,
                  "nodeType": "ExpressionStatement",
                  "src": "5432:40:118"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20061,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20037,
                        "src": "5501:10:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 20062,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20043,
                        "src": "5513:5:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 20063,
                        "name": "_messageId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20049,
                        "src": "5520:10:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 20060,
                      "name": "TokensBridged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16056,
                      "src": "5487:13:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,uint256,bytes32)"
                      }
                    },
                    "id": 20064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5487:44:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20065,
                  "nodeType": "EmitStatement",
                  "src": "5482:49:118"
                }
              ]
            },
            "documentation": "@dev Executes action on the request to deposit tokens relayed from the other network\n@param _recipient address of tokens receiver\n@param _value amount of bridged tokens",
            "id": 20067,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "executeActionOnBridgedTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20040,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20037,
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 20067,
                  "src": "5290:18:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20036,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5290:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20039,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 20067,
                  "src": "5310:14:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20038,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5310:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5289:36:118"
            },
            "payable": false,
            "returnParameters": {
              "id": 20041,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5335:0:118"
            },
            "scope": 20163,
            "src": "5252:286:118",
            "stateMutability": "nonpayable",
            "superFunction": 16253,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 20131,
              "nodeType": "Block",
              "src": "5936:677:118",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 20080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "5950:7:118",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 20078,
                        "name": "lock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15336,
                        "src": "5951:4:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
                          "typeString": "function () returns (bool)"
                        }
                      },
                      "id": 20079,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5951:6:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 20130,
                  "nodeType": "IfStatement",
                  "src": "5946:661:118",
                  "trueBody": {
                    "id": 20129,
                    "nodeType": "Block",
                    "src": "5959:648:118",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 20085,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20073,
                              "src": "6055:6:118",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 20082,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 20069,
                                  "src": "6042:6:118",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC677_$1469",
                                    "typeString": "contract ERC677"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC677_$1469",
                                    "typeString": "contract ERC677"
                                  }
                                ],
                                "id": 20081,
                                "name": "IBurnableMintableERC677Token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1677,
                                "src": "6013:28:118",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IBurnableMintableERC677Token_$1677_$",
                                  "typeString": "type(contract IBurnableMintableERC677Token)"
                                }
                              },
                              "id": 20083,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6013:36:118",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IBurnableMintableERC677Token_$1677",
                                "typeString": "contract IBurnableMintableERC677Token"
                              }
                            },
                            "id": 20084,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "burn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1669,
                            "src": "6013:41:118",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 20086,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6013:49:118",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 20087,
                        "nodeType": "ExpressionStatement",
                        "src": "6013:49:118"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 20088,
                            "name": "isFeeCollectingActivated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19867,
                            "src": "6081:24:118",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 20089,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6081:26:118",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 20127,
                          "nodeType": "Block",
                          "src": "6508:89:118",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 20119,
                                    "name": "_from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 20071,
                                    "src": "6538:5:118",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 20121,
                                        "name": "_from",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 20071,
                                        "src": "6560:5:118",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "argumentTypes": null,
                                        "id": 20122,
                                        "name": "_data",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 20075,
                                        "src": "6567:5:118",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      ],
                                      "id": 20120,
                                      "name": "chooseReceiver",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 13948,
                                      "src": "6545:14:118",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$returns$_t_address_$",
                                        "typeString": "function (address,bytes memory) view returns (address)"
                                      }
                                    },
                                    "id": 20123,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6545:28:118",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 20124,
                                    "name": "_value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 20073,
                                    "src": "6575:6:118",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 20118,
                                  "name": "passMessage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 16103,
                                  "src": "6526:11:118",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 20125,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6526:56:118",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 20126,
                              "nodeType": "ExpressionStatement",
                              "src": "6526:56:118"
                            }
                          ]
                        },
                        "id": 20128,
                        "nodeType": "IfStatement",
                        "src": "6077:520:118",
                        "trueBody": {
                          "id": 20117,
                          "nodeType": "Block",
                          "src": "6109:393:118",
                          "statements": [
                            {
                              "assignments": [
                                20091
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 20091,
                                  "name": "fee",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 20132,
                                  "src": "6127:11:118",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 20090,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6127:7:118",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 20095,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 20093,
                                    "name": "_value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 20073,
                                    "src": "6154:6:118",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 20092,
                                  "name": "calculateFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 19810,
                                  "src": "6141:12:118",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256) view returns (uint256)"
                                  }
                                },
                                "id": 20094,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6141:20:118",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6127:34:118"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 20097,
                                    "name": "_from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 20071,
                                    "src": "6267:5:118",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 20099,
                                        "name": "_from",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 20071,
                                        "src": "6289:5:118",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "argumentTypes": null,
                                        "id": 20100,
                                        "name": "_data",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 20075,
                                        "src": "6296:5:118",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      ],
                                      "id": 20098,
                                      "name": "chooseReceiver",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 13948,
                                      "src": "6274:14:118",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$returns$_t_address_$",
                                        "typeString": "function (address,bytes memory) view returns (address)"
                                      }
                                    },
                                    "id": 20101,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6274:28:118",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 20104,
                                        "name": "fee",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 20091,
                                        "src": "6315:3:118",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 20102,
                                        "name": "_value",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 20073,
                                        "src": "6304:6:118",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 20103,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sub",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 29958,
                                      "src": "6304:10:118",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 20105,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6304:15:118",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 20096,
                                  "name": "passMessage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 16103,
                                  "src": "6255:11:118",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 20106,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6255:65:118",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 20107,
                              "nodeType": "ExpressionStatement",
                              "src": "6255:65:118"
                            },
                            {
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 20110,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 20108,
                                  "name": "fee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 20091,
                                  "src": "6342:3:118",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 20109,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6348:1:118",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "6342:7:118",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": null,
                              "id": 20116,
                              "nodeType": "IfStatement",
                              "src": "6338:150:118",
                              "trueBody": {
                                "id": 20115,
                                "nodeType": "Block",
                                "src": "6351:137:118",
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 20112,
                                          "name": "fee",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 20091,
                                          "src": "6465:3:118",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 20111,
                                        "name": "_distributeFee",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 19879,
                                        "src": "6450:14:118",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                                          "typeString": "function (uint256)"
                                        }
                                      },
                                      "id": 20113,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6450:19:118",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 20114,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6450:19:118"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev Executes action on withdrawal of bridged tokens\n@param _token address of token contract\n@param _from address of tokens sender\n@param _value requsted amount of bridged tokens\n@param _data alternative receiver, if specified",
            "id": 20132,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "bridgeSpecificActionsOnTokenTransfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20076,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20069,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 20132,
                  "src": "5868:13:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC677_$1469",
                    "typeString": "contract ERC677"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 20068,
                    "name": "ERC677",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1469,
                    "src": "5868:6:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC677_$1469",
                      "typeString": "contract ERC677"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20071,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 20132,
                  "src": "5883:13:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20070,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5883:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20073,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 20132,
                  "src": "5898:14:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20072,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5898:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20075,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 20132,
                  "src": "5914:11:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 20074,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5914:5:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5867:59:118"
            },
            "payable": false,
            "returnParameters": {
              "id": 20077,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5936:0:118"
            },
            "scope": 20163,
            "src": "5822:791:118",
            "stateMutability": "nonpayable",
            "superFunction": 10089,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 20146,
              "nodeType": "Block",
              "src": "6933:250:118",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20142,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20134,
                        "src": "7164:6:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 20143,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20136,
                        "src": "7172:3:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 20141,
                      "name": "claimValues",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14003,
                      "src": "7152:11:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 20144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7152:24:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20145,
                  "nodeType": "ExpressionStatement",
                  "src": "7152:24:118"
                }
              ]
            },
            "documentation": "@dev Withdraws the erc20 tokens or native coins from this contract.\n@param _token address of the claimed token or address(0) for native coins.\n@param _to address of the tokens/coins receiver.",
            "id": 20147,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 20139,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 20138,
                  "name": "onlyIfUpgradeabilityOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 16408,
                  "src": "6907:25:118",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6907:25:118"
              }
            ],
            "name": "claimTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20134,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 20147,
                  "src": "6869:14:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20133,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6869:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20136,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 20147,
                  "src": "6885:11:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20135,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6885:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6868:29:118"
            },
            "payable": false,
            "returnParameters": {
              "id": 20140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6933:0:118"
            },
            "scope": 20163,
            "src": "6848:335:118",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 20161,
              "nodeType": "Block",
              "src": "7466:58:118",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 20157,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20149,
                        "src": "7498:10:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 20158,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20151,
                        "src": "7510:6:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 20154,
                          "name": "getMintHandler",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20035,
                          "src": "7476:14:118",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IMintHandler_$1800_$",
                            "typeString": "function () view returns (contract IMintHandler)"
                          }
                        },
                        "id": 20155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7476:16:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMintHandler_$1800",
                          "typeString": "contract IMintHandler"
                        }
                      },
                      "id": 20156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1799,
                      "src": "7476:21:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 20159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7476:41:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 20160,
                  "nodeType": "ExpressionStatement",
                  "src": "7476:41:118"
                }
              ]
            },
            "documentation": "@dev Executes action on relayed request to fix the failed transfer of tokens\n@param _recipient address of tokens receiver\n@param _value amount of fixed tokens",
            "id": 20162,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "executeActionOnFixedTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20149,
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 20162,
                  "src": "7421:18:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20148,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7421:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20151,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 20162,
                  "src": "7441:14:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20150,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7441:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7420:36:118"
            },
            "payable": false,
            "returnParameters": {
              "id": 20153,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7466:0:118"
            },
            "scope": 20163,
            "src": "7385:139:118",
            "stateMutability": "nonpayable",
            "superFunction": 16260,
            "visibility": "internal"
          }
        ],
        "scope": 20164,
        "src": "437:7089:118"
      }
    ],
    "src": "0:7527:118"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-11-26T16:22:39.907Z",
  "devdoc": {
    "methods": {
      "blockRewardContract()": {
        "details": "Retrieves currently used block reward contract",
        "return": "configured block reward contract address"
      },
      "bridgeContract()": {
        "details": "Get the AMB interface for the bridge contract address",
        "return": "AMB interface for the bridge contract address"
      },
      "calculateFee(uint256)": {
        "details": "Calculates the fee amount to be subtracted from the value.",
        "params": {
          "_value": "the base value from which fees are calculated"
        }
      },
      "claimTokens(address,address)": {
        "details": "Withdraws the erc20 tokens or native coins from this contract.",
        "params": {
          "_to": "address of the tokens/coins receiver.",
          "_token": "address of the claimed token or address(0) for native coins."
        }
      },
      "decimalShift()": {
        "details": "Returns the value of foreign-to-home decimal shift.",
        "return": "decimal shift."
      },
      "erc677token()": {
        "details": "Public getter for token contract.",
        "return": "address of the used token contract"
      },
      "fixAssetsAboveLimits(bytes32,bool,uint256)": {
        "details": "Fixes locked tokens, that were out of execution limits during the call to handleBridgedTokens",
        "params": {
          "messageId": "reference for bridge operation that was out of execution limits",
          "unlockOnOtherSide": "true if fixed tokens should be unlocked to the other side of the bridge",
          "valueToUnlock": "unlocked amount of tokens, should be less than saved txAboveLimitsValue. Should be less than maxPerTx(), if tokens need to be unlocked on the other side."
        }
      },
      "fixFailedMessage(bytes32)": {
        "details": "Handles the request to fix transferred assets which bridged message execution failed on the other network. It uses the information stored by passMessage method when the assets were initially transferred",
        "params": {
          "_messageId": "id of the message which execution failed on the other network."
        }
      },
      "getFee()": {
        "details": "Retrieves current fee value",
        "return": "current value of fee, 1e18 is 100%"
      },
      "getMintHandler()": {
        "details": "Retrieves currently used contract for handling mint operations, defaults to token itself",
        "return": "address of mint handler contract"
      },
      "handleBridgedTokens(address,uint256)": {
        "details": "Handles the bridged tokens. Checks that the value is inside the execution limits and invokes the method to execute the Mint or Unlock accordingly.",
        "params": {
          "_recipient": "address that will receive the tokens",
          "_value": "amount of tokens to be received"
        }
      },
      "initialize(address,address,address,uint256[3],uint256[2],uint256,int256,address)": {
        "params": {
          "_bridgeContract": "HomeAMB bridge contract",
          "_dailyLimitMaxPerTxMinPerTxArray": "Home limits for outgoing transfers",
          "_decimalShift": "decimal shift for bridged STAKE token",
          "_erc677token": "address of STAKE token in the Home chain",
          "_executionDailyLimitExecutionMaxPerTxArray": "Home execution limits for incoming transfers",
          "_mediatorContract": "address of the mediator contract in the Foreign chain",
          "_owner": "address of new bridge owner",
          "_requestGasLimit": "gas limit used for AMB operations"
        }
      },
      "isFeeCollectingActivated()": {
        "details": "Returns the state of the fee manager configuration: whether it is ready to collect and distribute fee or not."
      },
      "maxAvailablePerTx()": {
        "details": "Retrieves maximum available bridge amount per one transaction taking into account maxPerTx() and dailyLimit() parameters.",
        "return": "minimum of maxPerTx parameter and remaining daily quota."
      },
      "mediatorContractOnOtherSide()": {
        "details": "Tells the mediator contract address from the other network.",
        "return": "the address of the mediator contract."
      },
      "messageFixed(bytes32)": {
        "details": "Tells if a message sent to the AMB bridge has been fixed.",
        "return": "bool indicating the status of the message."
      },
      "outOfLimitAmount()": {
        "details": "Total amount coins/tokens that were bridged from the other side and are out of execution limits.",
        "return": "total amount of all bridge operations above limits."
      },
      "owner()": {
        "details": "Tells the address of the owner",
        "return": "the address of the owner"
      },
      "relayTokens(address,uint256)": {
        "details": "Initiates the bridge operation that will lock the amount of tokens transferred and mint the tokens on the other network. The user should first call Approve method of the ERC677 token.",
        "params": {
          "_receiver": "address that will receive the minted tokens on the other network.",
          "_value": "amount of tokens to be transferred to the other network."
        }
      },
      "requestFailedMessageFix(bytes32)": {
        "details": "Method to be called when a bridged message execution failed. It will generate a new message requesting to fix/roll back the transferred assets on the other network.",
        "params": {
          "_messageId": "id of the message which execution failed."
        }
      },
      "requestGasLimit()": {
        "details": "Tells the gas limit to be used in the message execution by the AMB bridge on the other network.",
        "return": "the gas limit for the message execution."
      },
      "rewardableInitialize(address,address,address,uint256[3],uint256[2],uint256,int256,address,address,uint256)": {
        "params": {
          "_blockReward": "address of block reward contract used for fee distribution",
          "_bridgeContract": "HomeAMB bridge contract",
          "_dailyLimitMaxPerTxMinPerTxArray": "Home limits for outgoing transfers",
          "_decimalShift": "decimal shift for bridged STAKE token",
          "_erc677token": "address of STAKE token in the Home chain",
          "_executionDailyLimitExecutionMaxPerTxArray": "Home execution limits for incoming transfers",
          "_fee": "initial home fee",
          "_mediatorContract": "address of the mediator contract in the Foreign chain",
          "_owner": "address of new bridge owner",
          "_requestGasLimit": "gas limit used for AMB operations"
        }
      },
      "setBlockRewardContract(address)": {
        "details": "Updates address of currently used block reward contract",
        "params": {
          "_blockReward": "address of a new contract"
        }
      },
      "setBridgeContract(address)": {
        "details": "Sets the AMB bridge contract address. Only the owner can call this method.",
        "params": {
          "_bridgeContract": "the address of the bridge contract."
        }
      },
      "setFee(uint256)": {
        "details": "Sets the fee percentage amount for the mediator operations. Only the owner can call this method.",
        "params": {
          "_fee": "the fee percentage"
        }
      },
      "setMediatorContractOnOtherSide(address)": {
        "details": "Sets the mediator contract address from the other network. Only the owner can call this method.",
        "params": {
          "_mediatorContract": "the address of the mediator contract."
        }
      },
      "setMintHandler(address)": {
        "details": "Updates address of contract used for handling mint operations, all subsequent mint operations will be called through this contract",
        "params": {
          "_mintHandler": "address of new contract"
        }
      },
      "setRequestGasLimit(uint256)": {
        "details": "Sets the gas limit to be used in the message execution by the AMB bridge on the other network. This value can't exceed the parameter maxGasPerTx defined on the AMB bridge. Only the owner can call this method.",
        "params": {
          "_requestGasLimit": "the gas limit for the message execution."
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "the address to transfer ownership to."
        }
      },
      "transferTokenOwnership(address)": {
        "details": "Allows to transfer token ownership to different proxy contract. Can be called only once, when mediator is the current owner of a token. All subsequent calls to erc677 token will be done through new proxy contract.",
        "params": {
          "_owner": "token proxy contract address"
        }
      }
    },
    "title": "HomeStakeTokenMediator"
  },
  "userdoc": {
    "methods": {
      "initialize(address,address,address,uint256[3],uint256[2],uint256,int256,address)": {
        "notice": "Initializes home mediator"
      },
      "rewardableInitialize(address,address,address,uint256[3],uint256[2],uint256,int256,address,address,uint256)": {
        "notice": "Initializes rewardable home mediator"
      }
    }
  }
}