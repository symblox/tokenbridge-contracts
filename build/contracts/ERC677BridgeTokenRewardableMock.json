{
  "contractName": "ERC677BridgeTokenRewardableMock",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_bridge",
          "type": "address"
        }
      ],
      "name": "removeBridge",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "mintingFinished",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "result",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "setBridgeContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_blockRewardContract",
          "type": "address"
        }
      ],
      "name": "setBlockRewardContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "PERMIT_TYPEHASH",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "result",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "transferAndCall",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "bridgePointers",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "blockRewardContract",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "claimTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isBridge",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "finishMinting",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTokenInterfacesVersion",
      "outputs": [
        {
          "name": "major",
          "type": "uint64"
        },
        {
          "name": "minor",
          "type": "uint64"
        },
        {
          "name": "patch",
          "type": "uint64"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_holder",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_nonce",
          "type": "uint256"
        },
        {
          "name": "_expiry",
          "type": "uint256"
        },
        {
          "name": "_allowed",
          "type": "bool"
        },
        {
          "name": "_v",
          "type": "uint8"
        },
        {
          "name": "_r",
          "type": "bytes32"
        },
        {
          "name": "_s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mintReward",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_bridge",
          "type": "address"
        }
      ],
      "name": "addBridge",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "bridgeList",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_stakingContract",
          "type": "address"
        }
      ],
      "name": "setStakingContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_staker",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "push",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "move",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "F_ADDR",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "bridgeContract",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "stakingContract",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "pull",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "bridgeCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "expirations",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_name",
          "type": "string"
        },
        {
          "name": "_symbol",
          "type": "string"
        },
        {
          "name": "_decimals",
          "type": "uint8"
        },
        {
          "name": "_chainId",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "bridge",
          "type": "address"
        }
      ],
      "name": "BridgeAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "bridge",
          "type": "address"
        }
      ],
      "name": "BridgeRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "MintFinished",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "burner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_blockRewardContract",
          "type": "address"
        }
      ],
      "name": "setBlockRewardContractMock",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_stakingContract",
          "type": "address"
        }
      ],
      "name": "setStakingContractMock",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "setNow",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_bridge\",\"type\":\"address\"}],\"name\":\"removeBridge\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mintingFinished\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"result\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"setBridgeContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_blockRewardContract\",\"type\":\"address\"}],\"name\":\"setBlockRewardContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"result\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"bridgePointers\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"blockRewardContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"claimTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isBridge\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finishMinting\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTokenInterfacesVersion\",\"outputs\":[{\"name\":\"major\",\"type\":\"uint64\"},{\"name\":\"minor\",\"type\":\"uint64\"},{\"name\":\"patch\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_holder\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_nonce\",\"type\":\"uint256\"},{\"name\":\"_expiry\",\"type\":\"uint256\"},{\"name\":\"_allowed\",\"type\":\"bool\"},{\"name\":\"_v\",\"type\":\"uint8\"},{\"name\":\"_r\",\"type\":\"bytes32\"},{\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mintReward\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_bridge\",\"type\":\"address\"}],\"name\":\"addBridge\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_blockRewardContract\",\"type\":\"address\"}],\"name\":\"setBlockRewardContractMock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bridgeList\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_stakingContract\",\"type\":\"address\"}],\"name\":\"setStakingContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_stakingContract\",\"type\":\"address\"}],\"name\":\"setStakingContractMock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_staker\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"F_ADDR\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bridgeContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"setNow\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stakingContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bridgeCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"expirations\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_decimals\",\"type\":\"uint8\"},{\"name\":\"_chainId\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"bridge\",\"type\":\"address\"}],\"name\":\"BridgeAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"bridge\",\"type\":\"address\"}],\"name\":\"BridgeRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"MintFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"addBridge(address)\":{\"details\":\"Adds one more bridge contract into the list\",\"params\":{\"_bridge\":\"bridge contract address\"}},\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"_owner\":\"address The address which owns the funds.\",\"_spender\":\"address The address which will spend the funds.\"},\"return\":\"A uint256 specifying the amount of tokens still available for the spender.\"},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\",\"params\":{\"_to\":\"The address which will spend the funds.\",\"_value\":\"The amount of tokens to be spent.\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"_owner\":\"The address to query the the balance of.\"},\"return\":\"An uint256 representing the amount owned by the passed address.\"},\"bridgeContract()\":{\"details\":\"Removes unused getter from ERC677BridgeToken contract\"},\"bridgeList()\":{\"details\":\"Returns all recorded bridge contract addresses\",\"return\":\"address[] bridge contract addresses\"},\"burn(uint256)\":{\"details\":\"Burns a specific amount of tokens.\",\"params\":{\"_value\":\"The amount of token to be burned.\"}},\"claimTokens(address,address)\":{\"details\":\"Withdraws the erc20 tokens or native coins from this contract.\",\"params\":{\"_to\":\"address of the tokens/coins receiver.\",\"_token\":\"address of the claimed token or address(0) for native coins.\"}},\"decreaseApproval(address,uint256)\":{\"details\":\"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol\",\"params\":{\"_spender\":\"The address which will spend the funds.\",\"_subtractedValue\":\"The amount of tokens to decrease the allowance by.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to spender by the caller.\",\"params\":{\"_addedValue\":\"The amount of tokens to increase the allowance by.\",\"_to\":\"The address which will spend the funds.\"}},\"increaseApproval(address,uint256)\":{\"details\":\"Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol\",\"params\":{\"_addedValue\":\"The amount of tokens to increase the allowance by.\",\"_spender\":\"The address which will spend the funds.\"}},\"isBridge(address)\":{\"details\":\"Checks if given address is included into bridge contracts list\",\"params\":{\"_address\":\"bridge contract address\"},\"return\":\"bool true, if given address is a known bridge contract \"},\"mint(address,uint256)\":{\"details\":\"Function to mint tokens\",\"params\":{\"_amount\":\"The amount of tokens to mint.\",\"_to\":\"The address that will receive the minted tokens.\"},\"return\":\"A boolean that indicates if the operation was successful.\"},\"move(address,address,uint256)\":{\"details\":\"An alias for `transferFrom` function.\",\"params\":{\"_amount\":\"The value to transfer.\",\"_from\":\"The address of the sender.\",\"_to\":\"The address of the recipient.\"}},\"permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)\":{\"details\":\"Allows to spend holder's unlimited amount by the specified spender. The function can be called by anyone, but requires having allowance parameters signed by the holder according to EIP712.\",\"params\":{\"_allowed\":\"True to enable unlimited allowance for the spender by the holder. False to disable.\",\"_expiry\":\"The allowance expiration date (unix timestamp in UTC). Can be zero for no expiration. Forced to zero if `_allowed` is `false`. Note that timestamps are not precise, malicious miner/validator can manipulate them to some extend. Assume that there can be a 900 seconds time delta between the desired timestamp and the actual expiration.\",\"_holder\":\"The holder's address.\",\"_nonce\":\"The nonce taken from `nonces(_holder)` public getter.\",\"_r\":\"The first 32 bytes of signature (ECDSA component).\",\"_s\":\"The second 32 bytes of signature (ECDSA component).\",\"_spender\":\"The spender's address.\",\"_v\":\"A final byte of signature (ECDSA component).\"}},\"pull(address,uint256)\":{\"details\":\"Makes a request to transfer the specified amount from the specified address to the caller's address.\",\"params\":{\"_amount\":\"The value to transfer.\",\"_from\":\"The address of the holder.\"}},\"push(address,uint256)\":{\"details\":\"An alias for `transfer` function.\",\"params\":{\"_amount\":\"The value to transfer.\",\"_to\":\"The address of the recipient.\"}},\"removeBridge(address)\":{\"details\":\"Removes one existing bridge contract from the list\",\"params\":{\"_bridge\":\"bridge contract address\"}},\"setBlockRewardContract(address)\":{\"details\":\"Updates the address of the used block reward contract. Only the token owner can call this method.  Even though this function is inteded only for the initialization purpose, it is still possible to change the already used block reward contract. In this case users of the old contract won't lose their accumulated rewards, they can proceed with the withdrawal by calling the old block reward contract directly.\",\"params\":{\"_blockRewardContract\":\"address of the new block reward contract.\"}},\"setBridgeContract(address)\":{\"details\":\"Removes unused function from ERC677BridgeToken contract\"},\"setStakingContract(address)\":{\"details\":\"Updates the address of the used staking contract. Only the token owner can call this method.  Even though this function is inteded only for the initialization purpose, it is still possible to change the already used staking contract. In this case users of the old staking contract won't lose their tokens, they can proceed with the withdrawal by calling the old staking contract directly.\",\"params\":{\"_stakingContract\":\"address of the new staking contract.\"}},\"totalSupply()\":{\"details\":\"Total number of tokens in existence\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"_newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/mocks/ERC677BridgeTokenRewardableMock.sol\":\"ERC677BridgeTokenRewardableMock\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/ERC677BridgeToken.sol\":{\"keccak256\":\"0x8f4c0b4d7de43bc568e13320b8b796ae17ec97c56782f08e5e550e3024622ba7\",\"urls\":[\"bzzr://f031b1d67562d4259cbad1f6b9d856e49effa39f8f55498f2cd63fcdb6c8d0af\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/ERC677BridgeTokenRewardable.sol\":{\"keccak256\":\"0x02d8df00bb8e0133e806c536b45b6d71c968e51d7ecab45aa02736d5a5cced92\",\"urls\":[\"bzzr://851081089be8c465652af7f0d0078474d4448b69402bd4dd306ca02de3a1d814\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/ERC677MultiBridgeToken.sol\":{\"keccak256\":\"0x815b1a19ba7fe0b95985e4da74f3227d1cc45441e88fd7a0ecd2154c97fa52e2\",\"urls\":[\"bzzr://a5a6ba4133c30dae81448db566e67aa3db6448cd0a39cc5d0ec75bdb9af8a908\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/PermittableToken.sol\":{\"keccak256\":\"0x1220fdfd3662435d88a6b1b9af266730e1349361137dc60589eb2474f9be6675\",\"urls\":[\"bzzr://4d47cbe30840da78c6ed5948884b751e7833ceb1bc4f88c38d2a7dcb5c4ad38d\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/interfaces/ERC677.sol\":{\"keccak256\":\"0xa4252d5b9e3d1b536b6a5edce1b712530827fcc792438ca17fa60fb64d4463ca\",\"urls\":[\"bzzr://ca1db6e12bc9753410003682a5cb6ebfc87ee238e78ba4a3033f915c66c3c72b\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/interfaces/IBurnableMintableERC677Token.sol\":{\"keccak256\":\"0x74fd1c41330140ddd6dc29037ca04ee13a23a44c5c5b3c4ce284a99cc78484a1\",\"urls\":[\"bzzr://dff872387b862977ce1b000a31d08aaccb1ea3e43bf9b7403911841d1e3aabef\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/libraries/Address.sol\":{\"keccak256\":\"0x9d5d8f089aedf9dfa743c9bc66bc901db5da5be78892af178340800873e1c722\",\"urls\":[\"bzzr://97602c15f88d529b68d7929717afa75fd03cd0f23a1363c14cd263dbcc17599e\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/libraries/SafeERC20.sol\":{\"keccak256\":\"0xb1f0a33f17fee9d600a2269fecce80d79377af3aeb2922e903fe4e3b57dc0c4f\",\"urls\":[\"bzzr://e3b6f5e2a1e88e69d403cbf2925c92c662b4fe6ea28dee292948187203ac6c98\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/mocks/ERC677BridgeTokenRewardableMock.sol\":{\"keccak256\":\"0x8693384cd2500fcf23bdace43db035b1a34e777a2224d3b6c7e30f4d8aa1c0be\",\"urls\":[\"bzzr://558dd9d7ae576b7e28a450c82ec8788a14c4b33e70f278e7d71969bd7eaa3478\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/Claimable.sol\":{\"keccak256\":\"0xfe020277ad01d6e42674c0906fb33eeec54964e928208fdd7fc0ab68c2967773\",\"urls\":[\"bzzr://2d1d90cdfb9e0917f83bdfcc4f8398e3f035c4c62da4e79e81ad4c4252b1d979\"]},\"/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/upgradeable_contracts/Sacrifice.sol\":{\"keccak256\":\"0x2c8f9b5e39d33552cd16d3fdd84e58f2138042166ae9b351e97fe674f7e3f337\",\"urls\":[\"bzzr://a438edd320ea1fa8141d54002897c3a50cf6cb13b07b4088d01ffb099bb9e859\"]},\"openzeppelin-solidity/contracts/AddressUtils.sol\":{\"keccak256\":\"0x5ed3dc711dbb34917afff3c753adf3b0580514d1339cfedaa5a73645d8ac9b56\",\"urls\":[\"bzzr://d597eeb695a3d64766453239e973ddd65994c258ab8d5cab0d90103033ce85fc\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xa1c5e1d9ebbf654d332ca8e7a5c04a6a6a9d142eeaab3b988c2c909c81a62bef\",\"urls\":[\"bzzr://d062fb4a1b6de1f036ee0e73364a2532c4757eb68e95dd8c5cbb2d17b8732c6a\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x84c7090c27cf3657b73d9e26b6b316975fa0bd233b8169f254de0c3b3acfaefc\",\"urls\":[\"bzzr://b983355647976c1daa5de581a1b6a41be9c5adc17cce257b8679649db78f8a11\"]},\"openzeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":{\"keccak256\":\"0xdffdc2dfa309e52005c61eb8b736d2076cff33c4a132b91091091bdc94cf83f1\",\"urls\":[\"bzzr://f2a4fb0a2eafa756d47ccc08f63de8075c9756a4532b4ad05a073fcd6f42ac22\"]},\"openzeppelin-solidity/contracts/token/ERC20/BurnableToken.sol\":{\"keccak256\":\"0x778b4d37fcf8c94acb52b3cf086f3a4ebc5da2b38672590294a371391cd44648\",\"urls\":[\"bzzr://826669d1888f24b726bbbd09cbd83f21461f1148d0291b27d2259d73ae641044\"]},\"openzeppelin-solidity/contracts/token/ERC20/DetailedERC20.sol\":{\"keccak256\":\"0xa9927296145433fad9195e7ce0388d6f07cfeb6c1c45df07f1c800f4196dd272\",\"urls\":[\"bzzr://59df43cea2bdda3527bc27aa56ea1838ead92e1e6ebc8254034b619d6b97003e\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd5feb2643c87547e65b8d6f1af02539b1dee1ad53046945e237eaa8ba649c93b\",\"urls\":[\"bzzr://69768215a261b30a376a901b83b1e6716e3916c9fd791ac67450c283e62212ad\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol\":{\"keccak256\":\"0x516a17244073b518096ced7c8c94924cb29746ef0a4b6cc6cde125ac0406a419\",\"urls\":[\"bzzr://7addb1b5cad767651b9bcd688ba5b08769c1f3b70a470e34752a7717756d090d\"]},\"openzeppelin-solidity/contracts/token/ERC20/MintableToken.sol\":{\"keccak256\":\"0x08394b7d7e6327085c15e8b7652cc9f4f9ddf3a9c614d9c8c3a3cff04fb781bf\",\"urls\":[\"bzzr://a0d8fca9e3eb8900f618afce5012ba48c4c664ebb6bf8ac7536367120c43fde7\"]},\"openzeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":{\"keccak256\":\"0xf98b4a9eed5064ef6fa47c3250121cf03f4f6528a20706d7b99e6c1dc9c1bb98\",\"urls\":[\"bzzr://7979b5eadacec799f6337581fdecb2f925ffb0f320fda4402bda043af1cbe706\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106102425763ffffffff60e060020a60003504166304df017d811461024757806305d2035b1461026a57806306fdde0314610293578063095ea7b31461031d5780630b26cf661461034157806318160ddd1461036257806323b872dd1461038957806327a3e16b146103b357806330adf81f146103d4578063313ce567146103e95780633644e5151461041457806339509351146104295780634000aea01461044d57806340c10f191461047e57806342966c68146104a25780634bcb88bc146104ba57806354fd4d50146104f757806356b54bae1461050c578063661884631461052157806369ffa08a1461054557806370a082311461056c578063715018a61461058d578063726600ce146105a25780637d64bcb4146105c35780637ecebe00146105d8578063859ba28c146105f95780638da5cb5b1461063a5780638fcbaf0c1461064f57806391c0aabf1461068d57806395d89b41146106a55780639712fdf8146106ba5780639c55af4c146106db5780639da38e2f146106fc5780639dd373b914610761578063a457c2d714610782578063a6085128146107a6578063a9059cbb146107c7578063adc9772e146107eb578063b753a98c1461080f578063bb35783b14610833578063c794c7691461085d578063cd59658314610872578063d73dd62314610887578063dd62ed3e146108ab578063e380ae96146108d2578063ee99205c146108ea578063f2d5d56b146108ff578063f2fde38b14610923578063fbb2a53f14610944578063ff9e884d14610959575b600080fd5b34801561025357600080fd5b50610268600160a060020a0360043516610980565b005b34801561027657600080fd5b5061027f610aec565b604080519115158252519081900360200190f35b34801561029f57600080fd5b506102a8610b0d565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102e25781810151838201526020016102ca565b50505050905090810190601f16801561030f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561032957600080fd5b5061027f600160a060020a0360043516602435610b9b565b34801561034d57600080fd5b50610268600160a060020a0360043516610242565b34801561036e57600080fd5b50610377610bde565b60408051918252519081900360200190f35b34801561039557600080fd5b5061027f600160a060020a0360043581169060243516604435610be4565b3480156103bf57600080fd5b50610268600160a060020a0360043516610c30565b3480156103e057600080fd5b50610377610c8a565b3480156103f557600080fd5b506103fe610cae565b6040805160ff9092168252519081900360200190f35b34801561042057600080fd5b50610377610cb7565b34801561043557600080fd5b5061027f600160a060020a0360043516602435610cbd565b34801561045957600080fd5b5061027f60048035600160a060020a0316906024803591604435918201910135610d23565b34801561048a57600080fd5b5061027f600160a060020a0360043516602435610e34565b3480156104ae57600080fd5b50610268600435610f3f565b3480156104c657600080fd5b506104db600160a060020a0360043516610f4c565b60408051600160a060020a039092168252519081900360200190f35b34801561050357600080fd5b506102a8610f67565b34801561051857600080fd5b506104db610f9e565b34801561052d57600080fd5b5061027f600160a060020a0360043516602435610fad565b34801561055157600080fd5b50610268600160a060020a036004358116906024351661108a565b34801561057857600080fd5b50610377600160a060020a03600435166110af565b34801561059957600080fd5b506102686110ca565b3480156105ae57600080fd5b5061027f600160a060020a03600435166110e1565b3480156105cf57600080fd5b5061027f611118565b3480156105e457600080fd5b50610377600160a060020a036004351661111f565b34801561060557600080fd5b5061060e611131565b6040805167ffffffffffffffff9485168152928416602084015292168183015290519081900360600190f35b34801561064657600080fd5b506104db61113c565b34801561065b57600080fd5b50610268600160a060020a0360043581169060243516604435606435608435151560ff60a4351660c43560e43561114b565b34801561069957600080fd5b5061026860043561149f565b3480156106b157600080fd5b506102a8611599565b3480156106c657600080fd5b50610268600160a060020a03600435166115f3565b3480156106e757600080fd5b50610268600160a060020a0360043516610c5b565b34801561070857600080fd5b50610711611713565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561074d578181015183820152602001610735565b505050509050019250505060405180910390f35b34801561076d57600080fd5b50610268600160a060020a03600435166117e8565b34801561078e57600080fd5b5061027f600160a060020a0360043516602435611855565b3480156107b257600080fd5b50610268600160a060020a0360043516611826565b3480156107d357600080fd5b5061027f600160a060020a0360043516602435611868565b3480156107f757600080fd5b50610268600160a060020a03600435166024356118ab565b34801561081b57600080fd5b50610268600160a060020a0360043516602435611974565b34801561083f57600080fd5b50610268600160a060020a0360043581169060243516604435611984565b34801561086957600080fd5b506104db611995565b34801561087e57600080fd5b506104db611118565b34801561089357600080fd5b5061027f600160a060020a03600435166024356119a0565b3480156108b757600080fd5b50610377600160a060020a0360043581169060243516611a27565b3480156108de57600080fd5b50610268600435611a52565b3480156108f657600080fd5b506104db611a57565b34801561090b57600080fd5b50610268600160a060020a0360043516602435611a66565b34801561092f57600080fd5b50610268600160a060020a0360043516611a71565b34801561095057600080fd5b50610377611a91565b34801561096557600080fd5b50610377600160a060020a0360043581169060243516611a97565b60065460009081908190600160a060020a0316331461099e57600080fd5b6109a7846110e1565b15156109b257600080fd5b505050600160a060020a038082166000908152600b60205260408120549082905260008051602061237283398151915254908216919081168015156109f657600080fd5b600160a060020a0381811690851614610a5157600160a060020a038082166000908152600b6020526040902054919250908116908114801590610a415750600160a060020a03811615155b1515610a4c57600080fd5b6109f6565b600160a060020a038083166000908152600b6020526040808220805484881673ffffffffffffffffffffffffffffffffffffffff19918216179091559287168252902080549091169055600c54610aaf90600163ffffffff611ab416565b600c55604051600160a060020a038516907f5d9d5034656cb3ebfb0655057cd7f9b4077a9b42ff42ce223cbac5bc586d212690600090a250505050565b60065474010000000000000000000000000000000000000000900460ff1681565b6000805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610b935780601f10610b6857610100808354040283529160200191610b93565b820191906000526020600020905b815481529060010190602001808311610b7657829003601f168201915b505050505081565b6000610ba78383611ac6565b9050600019821415610bd857336000908152600a60209081526040808320600160a060020a03871684529091528120555b92915050565b60045490565b600d54600090600160a060020a0384811691161415610c0257600080fd5b600e54600160a060020a0384811691161415610c1d57600080fd5b610c28848484611b1a565b949350505050565b600654600160a060020a03163314610c4757600080fd5b610c5081611ce9565b1515610c5b57600080fd5b600d805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b7fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb81565b60025460ff1681565b60085481565b6000610cc98383611cf1565b336000908152600560209081526040808320600160a060020a03881684529091529020549091506000191415610bd857336000908152600a60209081526040808320600160a060020a038716845290915281205592915050565b600084600160a060020a03811615801590610d475750600160a060020a0381163014155b1515610d5257600080fd5b610d5c8686611cfd565b1515610d6757600080fd5b85600160a060020a031633600160a060020a03167fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16878787604051808481526020018060200182810382528484828181526020019250808284376040519201829003965090945050505050a3610ddc86611ce9565b15610e2857610e1d33878787878080601f01602080910402602001604051908101604052809392919081815260200183838082843750611d09945050505050565b1515610e2857600080fd5b50600195945050505050565b600654600090600160a060020a03163314610e4e57600080fd5b60065474010000000000000000000000000000000000000000900460ff1615610e7657600080fd5b600454610e89908363ffffffff611e8616565b600455600160a060020a038316600090815260036020526040902054610eb5908363ffffffff611e8616565b600160a060020a038416600081815260036020908152604091829020939093558051858152905191927f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688592918290030190a2604080518381529051600160a060020a038516916000916000805160206123928339815191529181900360200190a350600192915050565b610f493382611e93565b50565b600b60205260009081526040902054600160a060020a031681565b60408051808201909152600181527f3100000000000000000000000000000000000000000000000000000000000000602082015281565b600d54600160a060020a031681565b336000908152600560209081526040808320600160a060020a038616845290915281205480831061100157336000908152600560209081526040808320600160a060020a0388168452909152812055611036565b611011818463ffffffff611ab416565b336000908152600560209081526040808320600160a060020a03891684529091529020555b336000818152600560209081526040808320600160a060020a0389168085529083529281902054815190815290519293926000805160206123b2833981519152929181900390910190a35060019392505050565b600654600160a060020a031633146110a157600080fd5b6110ab8282611f82565b5050565b600160a060020a031660009081526003602052604090205490565b600654600160a060020a0316331461024257600080fd5b6000600160a060020a0382811614801590610bd8575050600160a060020a039081166000908152600b602052604090205416151590565b6000806000fd5b60096020526000908152604090205481565b600260046000909192565b600654600160a060020a031681565b600080600160a060020a038a16151561116357600080fd5b600160a060020a038916151561117857600080fd5b86158061118c575086611189611fc0565b11155b151561119757600080fd5b8460ff16601b14806111ac57508460ff16601c145b15156111b757600080fd5b7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156111e457600080fd5b600854604080517fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb602080830191909152600160a060020a03808f16838501528d166060830152608082018c905260a082018b905289151560c0808401919091528351808403909101815260e090920192839052815191929182918401908083835b602083106112855780518252601f199092019160209182019101611266565b51815160209384036101000a6000190180199092169116179052604080519290940182900382207f190100000000000000000000000000000000000000000000000000000000000083830152602283019790975260428083019790975283518083039097018752606290910192839052855192945084935085019190508083835b602083106113255780518252601f199092019160209182019101611306565b51815160209384036101000a600019018019909216911617905260408051929094018290038220600080845283830180875282905260ff8d1684870152606084018c9052608084018b905294519098506001965060a080840196509194601f19820194509281900390910191865af11580156113a5573d6000803e3d6000fd5b50505060206040510351600160a060020a03168a600160a060020a03161415156113ce57600080fd5b600160a060020a038a16600090815260096020526040902080546001810190915588146113fa57600080fd5b8561140657600061140a565b6000195b600160a060020a03808c166000908152600560209081526040808320938e16835292905220819055905085611440576000611442565b865b600160a060020a03808c166000818152600a60209081526040808320948f16808452948252918290209490945580518581529051929391926000805160206123b2833981519152929181900390910190a350505050505050505050565b600d54600090600160a060020a031633146114b957600080fd5b8115156114c5576110ab565b50600d54600454600160a060020a03909116906114e8908363ffffffff611e8616565b600455600160a060020a038116600090815260036020526040902054611514908363ffffffff611e8616565b600160a060020a038216600081815260036020908152604091829020939093558051858152905191927f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688592918290030190a2604080518381529051600160a060020a038316916000916000805160206123928339815191529181900360200190a35050565b60018054604080516020600284861615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610b935780601f10610b6857610100808354040283529160200191610b93565b600654600090600160a060020a0316331461160d57600080fd5b600c5460321161161c57600080fd5b61162582611ce9565b151561163057600080fd5b611639826110e1565b1561164357600080fd5b50600160a060020a036000819052600b602052600080516020612372833981519152541680151561167357600080fd5b600b602052600080516020612372833981519152805473ffffffffffffffffffffffffffffffffffffffff19908116600160a060020a038581169182179093556000908152604090208054909116918316919091179055600c546116d8906001611e86565b600c55604051600160a060020a038316907f3cda433c5679ae4c6a5dea50840e222a42cba3695e4663de4366be899348422190600090a25050565b606080600080600c54604051908082528060200260200182016040528015611745578160200160208202803883390190505b50600160a060020a036000818152600b60205260008051602061237283398151915254929550935016905080151561177c57600080fd5b600160a060020a03818116146117e05780838381518110151561179b57fe5b600160a060020a0392831660209182029092018101919091529181166000908152600b90925260409091205460019290920191168015156117db57600080fd5b61177c565b509092915050565b600654600160a060020a031633146117ff57600080fd5b61180881611ce9565b151561181357600080fd5b61181c816110af565b1561182657600080fd5b600e805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60006118618383610fad565b9392505050565b600d54600090600160a060020a038481169116141561188657600080fd5b600e54600160a060020a03848116911614156118a157600080fd5b6118618383611fdc565b600e54600160a060020a031633146118c257600080fd5b600160a060020a0382166000908152600360205260409020546118eb908263ffffffff611ab416565b600160a060020a0380841660009081526003602052604080822093909355600e5490911681522054611923908263ffffffff611e8616565b600e8054600160a060020a0390811660009081526003602090815260409182902094909455915482518581529251908216939186169260008051602061239283398151915292908290030190a35050565b61197f338383610be4565b505050565b61198f838383610be4565b50505050565b600160a060020a0381565b336000908152600560209081526040808320600160a060020a03861684529091528120546119d4908363ffffffff611e8616565b336000818152600560209081526040808320600160a060020a0389168085529083529281902085905580519485525191936000805160206123b2833981519152929081900390910190a350600192915050565b600160a060020a03918216600090815260056020908152604080832093909416825291909152205490565b600f55565b600e54600160a060020a031681565b61197f823383610be4565b600654600160a060020a03163314611a8857600080fd5b610f4981612007565b600c5481565b600a60209081526000928352604080842090915290825290205481565b600082821115611ac057fe5b50900390565b336000818152600560209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390926000805160206123b2833981519152928290030190a350600192915050565b600080600160a060020a0385161515611b3257600080fd5b600160a060020a0384161515611b4757600080fd5b600160a060020a038516600090815260036020526040902054611b70908463ffffffff611ab416565b600160a060020a038087166000908152600360205260408082209390935590861681522054611ba5908463ffffffff611e8616565b600160a060020a03808616600081815260036020908152604091829020949094558051878152905191939289169260008051602061239283398151915292918290030190a3600160a060020a0385163314611cd357611c048533611a27565b90506000198114611c6e57611c1f818463ffffffff611ab416565b600160a060020a0386166000818152600560209081526040808320338085529083529281902085905580519485525191936000805160206123b2833981519152929081900390910190a3611cd3565b600160a060020a0385166000908152600a602090815260408083203384529091529020541580611cc85750611ca1611fc0565b600160a060020a0386166000908152600a6020908152604080832033845290915290205410155b1515611cd357600080fd5b611cde858585612085565b506001949350505050565b6000903b1190565b600061186183836119a0565b600061186183836120bc565b600083600160a060020a031663a4c0ed3660e060020a028685856040516024018084600160a060020a0316600160a060020a0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611d81578181015183820152602001611d69565b50505050905090810190601f168015611dae5780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909916989098178852518151919790965086955093509150819050838360005b83811015611e3c578181015183820152602001611e24565b50505050905090810190601f168015611e695780820380516001836020036101000a031916815260200191505b509150506000604051808303816000865af1979650505050505050565b81810182811015610bd857fe5b600160a060020a038216600090815260036020526040902054811115611eb857600080fd5b600160a060020a038216600090815260036020526040902054611ee1908263ffffffff611ab416565b600160a060020a038316600090815260036020526040902055600454611f0d908263ffffffff611ab416565b600455604080518281529051600160a060020a038416917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a2604080518281529051600091600160a060020a038516916000805160206123928339815191529181900360200190a35050565b80600160a060020a0381161515611f9857600080fd5b600160a060020a0383161515611fb657611fb18261218b565b61197f565b61197f8383612197565b6000600f5460001415611fd35742611fd7565b600f545b905090565b6000611fe88383611cfd565b1515611ff357600080fd5b611ffe338484612085565b50600192915050565b600160a060020a038116151561201c57600080fd5b600654604051600160a060020a038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36006805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b61208e826110e1565b1561197f576040805160008152602081019091526120b190849084908490611d09565b151561197f57600080fd5b336000908152600360205260408120548211156120d857600080fd5b600160a060020a03831615156120ed57600080fd5b3360009081526003602052604090205461210d908363ffffffff611ab416565b3360009081526003602052604080822092909255600160a060020a0385168152205461213f908363ffffffff611e8616565b600160a060020a0384166000818152600360209081526040918290209390935580518581529051919233926000805160206123928339815191529281900390910190a350600192915050565b30316110ab8282612244565b604080517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290518391600091600160a060020a038416916370a0823191602480830192602092919082900301818787803b1580156121fc57600080fd5b505af1158015612210573d6000803e3d6000fd5b505050506040513d602081101561222657600080fd5b5051905061198f600160a060020a038516848363ffffffff6122ac16565b604051600160a060020a0383169082156108fc029083906000818181858888f1935050505015156110ab578082612279612341565b600160a060020a039091168152604051908190036020019082f0801580156122a5573d6000803e3d6000fd5b5050505050565b82600160a060020a031663a9059cbb83836040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050600060405180830381600087803b15801561230f57600080fd5b505af1158015612323573d6000803e3d6000fd5b505050503d1561197f5760206000803e600051151561197f57600080fd5b604051602180612351833901905600608060405260405160208060218339810160405251600160a060020a038116ff00bd0a91c9f9d084bad1a56f4df6c4c08bf6a3c9ff457e1c2f0ccbc02ffda9d3b1ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a165627a7a72305820ad4c262a74211105e0a1bcd34eeff2d19734436aecf17426d1620259bcab46050029",
  "sourceMap": "71:828:35:-;;;436:35:167;;;-1:-1:-1;;;;;;436:35:167;;;187:233:35;5:2:-1;;;;30:1;27;20:12;5:2;187:233:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;315:5;322:7;331:9;342:8;334:5:1;341:7;350:9;361:8;678:5:2;685:7;694:9;705:8;727:5:4;734:7;743:9;858:5:0;865:7;874:9;470:5:164;463:4;:12;;;;;;;;;;;;:::i;:::-;-1:-1:-1;481:16:164;;;;:6;;:16;;;;;:::i;:::-;-1:-1:-1;503:8:164;:20;;;;;;-1:-1:-1;;503:20:164;;;;;;;;;-1:-1:-1;;567:5:161;:18;;-1:-1:-1;;;;;;567:18:161;575:10;567:18;;;-1:-1:-1;;;776:13:4;;;768:22;;;;;;870:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;999:5;983:23;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;983:23:4;;;;;;;;;;;;1040:7;;;;;274:1:-1;1040:7:4;;;;;;;;;;1024:25;;983:23;;-1:-1:-1;983:23:4;;-1:-1:-1;1024:25:4;;;;-1:-1:-1;274:1;1024:25:4;1040:7;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1024:25:4;;;;;;;;;;;;842:278;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;842:278:4;;;;;;1101:4;842:278;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;842:278:4;;;;;;;;819:311;;842:278;;;;-1:-1:-1;819:311:4;;;-1:-1:-1;819:311:4;842:278;819:311;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;819:311:4;;;;;;;;;;;;;;;;800:16;:330;;;;;;;595:542;;;;-1:-1:-1;;;;;729:14:2;:22;-1:-1:-1;;;;;729:22:2;;-1:-1:-1;;;;;729:22:2;;;;;;;;;;;;;:31;;;;;-1:-1:-1;;;;;729:31:2;;;;;-1:-1:-1;;;;;729:31:2;;;;;;561:237;;;;211:228:1;;;;187:233:35;;;;71:828;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;71:828:35;;;-1:-1:-1;71:828:35;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "71:828:35:-;;;;;;;;;-1:-1:-1;;;71:828:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1834:609:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1834:609:2;-1:-1:-1;;;;;1834:609:2;;;;;;;436:35:167;;8:9:-1;5:2;;;30:1;27;20:12;5:2;436:35:167;;;;;;;;;;;;;;;;;;;;;;319:18:164;;8:9:-1;5:2;;;30:1;27;20:12;5:2;319:18:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;319:18:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3228:223:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3228:223:4;-1:-1:-1;;;;;3228:223:4;;;;;;;886:70:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;886:70:2;-1:-1:-1;;;;;886:70:2;;;;;389:83:162;;8:9:-1;5:2;;;30:1;27;20:12;5:2;389:83:162;;;;;;;;;;;;;;;;;;;;3202:236:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3202:236:1;-1:-1:-1;;;;;3202:236:1;;;;;;;;;;;;994:204;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;994:204:1;-1:-1:-1;;;;;994:204:1;;;;;360:108:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;360:108:4;;;;365:21:164;;8:9:-1;5:2;;;30:1;27;20:12;5:2;365:21:164;;;;;;;;;;;;;;;;;;;;;;;179:31:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;179:31:4;;;;3676:271;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3676:271:4;-1:-1:-1;;;;;3676:271:4;;;;;;;1425:365:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1425:365:0;;;;-1:-1:-1;;;;;1425:365:0;;;;;;;;;;;;;;;;854:312:167;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;854:312:167;-1:-1:-1;;;;;854:312:167;;;;;;;353:73:163;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;353:73:163;;;;;376:49:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;376:49:2;-1:-1:-1;;;;;376:49:2;;;;;;;;;-1:-1:-1;;;;;376:49:2;;;;;;;;;;;;;;113:36:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;113:36:4;;;;134:34:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;134:34:1;;;;3679:432:168;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3679:432:168;-1:-1:-1;;;;;3679:432:168;;;;;;;4178:110:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4178:110:0;-1:-1:-1;;;;;4178:110:0;;;;;;;;;;1149:99:162;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1149:99:162;-1:-1:-1;;;;;1149:99:162;;;;;3872:71:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3872:71:0;;;;3267:147:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3267:147:2;-1:-1:-1;;;;;3267:147:2;;;;;3794:72:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3794:72:0;;;;475:41:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;475:41:4;-1:-1:-1;;;;;475:41:4;;;;;1796:135:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1796:135:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;238:20:161;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:161;;;;5932:1069:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5932:1069:4;-1:-1:-1;;;;;5932:1069:4;;;;;;;;;;;;;;;;;;;;;;;;;;2245:388:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2245:388:1;;;;;341:20:164;;8:9:-1;5:2;;;30:1;27;20:12;5:2;341:20:164;;;;1246:460:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1246:460:2;-1:-1:-1;;;;;1246:460:2;;;;;426:132:35;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;426:132:35;-1:-1:-1;;;;;426:132:35;;;;;2572:484:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2572:484:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2572:484:2;;;;;;;;;;;;;;;;;1724:235:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1724:235:1;-1:-1:-1;;;;;1724:235:1;;;;;4453:163:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4453:163:0;-1:-1:-1;;;;;4453:163:0;;;;;;;564:116:35;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;564:116:35;-1:-1:-1;;;;;564:116:35;;;;;2990:206:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2990:206:1;-1:-1:-1;;;;;2990:206:1;;;;;;;2639:345;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2639:345:1;-1:-1:-1;;;;;2639:345:1;;;;;;;4095:106:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4095:106:4;-1:-1:-1;;;;;4095:106:4;;;;;;;4733:116;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4733:116:4;-1:-1:-1;;;;;4733:116:4;;;;;;;;;;;;247:75:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;247:75:2;;;;1042:83;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1042:83:2;;;;2926:296:168;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2926:296:168;-1:-1:-1;;;;;2926:296:168;;;;;;;2321:153;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2321:153:168;-1:-1:-1;;;;;2321:153:168;;;;;;;;;;686:88:35;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;686:88:35;;;;;174:30:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;174:30:1;;;;4423:110:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4423:110:4;-1:-1:-1;;;;;4423:110:4;;;;;;;1274:103:161;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1274:103:161;-1:-1:-1;;;;;1274:103:161;;;;;431:26:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;431:26:2;;;;522:66:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;522:66:4;-1:-1:-1;;;;;522:66:4;;;;;;;;;;1834:609:2;719:5:161;;1939:18:2;;;;;;-1:-1:-1;;;;;719:5:161;705:10;:19;697:28;;;;;;1910:17:2;1919:7;1910:8;:17::i;:::-;1902:26;;;;;;;;-1:-1:-1;;;;;;;;1960:23:2;;;;;;;:14;:23;;;;;;2040:21;;;;-1:-1:-1;;;;;;;;;;;2040:21:2;1960:23;;;;;2040:21;;2079:18;;;2071:27;;;;;;-1:-1:-1;;;;;2116:15:2;;;;;;;2109:163;;-1:-1:-1;;;;;2180:21:2;;;;;;;:14;:21;;;;;;2155:4;;-1:-1:-1;2180:21:2;;;;2224:14;;;;;:36;;-1:-1:-1;;;;;;2242:18:2;;;;2224:36;2216:45;;;;;;;;2109:163;;;-1:-1:-1;;;;;2282:21:2;;;;;;;:14;:21;;;;;;:34;;;;;-1:-1:-1;;2282:34:2;;;;;;;2333:23;;;;;;;2326:30;;;;;;;2380:11;;:18;;2282:34;2380:18;:15;:18;:::i;:::-;2366:11;:32;2414:22;;-1:-1:-1;;;;;2414:22:2;;;;;;;;1834:609;;;;:::o;436:35:167:-;;;;;;;;;:::o;319:18:164:-;;;;;;;;;;;;;;;-1:-1:-1;;319:18:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3228:223:4:-;3290:11;3322:26;3336:3;3341:6;3322:13;:26::i;:::-;3313:35;;-1:-1:-1;;3362:6:4;:21;3358:87;;;3418:10;3406:23;;;;:11;:23;;;;;;;;-1:-1:-1;;;;;3406:28:4;;;;;;;;;3399:35;3358:87;3228:223;;;;:::o;389:83:162:-;455:12;;389:83;:::o;3202:236:1:-;3315:19;;3284:4;;-1:-1:-1;;;;;3308:26:1;;;3315:19;;3308:26;;3300:35;;;;;;3360:15;;-1:-1:-1;;;;;3353:22:1;;;3360:15;;3353:22;;3345:31;;;;;;3393:38;3412:5;3419:3;3424:6;3393:18;:38::i;:::-;3386:45;3202:236;-1:-1:-1;;;;3202:236:1:o;994:204::-;719:5:161;;-1:-1:-1;;;;;719:5:161;705:10;:19;697:28;;;;;;1093:45:1;1117:20;1093:23;:45::i;:::-;1085:54;;;;;;;;1149:19;:42;;-1:-1:-1;;1149:42:1;-1:-1:-1;;;;;1149:42:1;;;;;;;;;;994:204::o;360:108:4:-;402:66;360:108;:::o;365:21:164:-;;;;;;:::o;179:31:4:-;;;;:::o;3676:271::-;3753:11;3785:41;3809:3;3814:11;3785:23;:41::i;:::-;3848:10;3840:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3840:24:4;;;;;;;;;;3776:50;;-1:-1:-1;;;3840:39:4;3836:105;;;3914:10;3902:23;;;;:11;:23;;;;;;;;-1:-1:-1;;;;;3902:28:4;;;;;;;;;3895:35;3676:271;;;;:::o;1425:365:0:-;1530:4;1516:3;-1:-1:-1;;;;;1312:24:0;;;;;;:55;;-1:-1:-1;;;;;;1340:27:0;;1362:4;1340:27;;1312:55;1304:64;;;;;;;;1554:26;1568:3;1573:6;1554:13;:26::i;:::-;1546:35;;;;;;;;1617:3;-1:-1:-1;;;;;1596:40:0;1605:10;-1:-1:-1;;;;;1596:40:0;;1622:6;1630:5;;1596:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1596:40:0;;-1:-1:-1;;;;;1596:40:0;1651:28;1675:3;1651:23;:28::i;:::-;1647:116;;;1703:48;1720:10;1732:3;1737:6;1745:5;;1703:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1703:16:0;;-1:-1:-1;;;;;1703:48:0:i;:::-;1695:57;;;;;;;;-1:-1:-1;1779:4:0;;1425:365;-1:-1:-1;;;;;1425:365:0:o;854:312:167:-;600:5;;968:4;;-1:-1:-1;;;;;600:5:167;586:10;:19;578:28;;;;;;511:15;;;;;;;510:16;502:25;;;;;;997:12;;:25;;1014:7;997:25;:16;:25;:::i;:::-;982:12;:40;-1:-1:-1;;;;;1044:13:167;;;;;;:8;:13;;;;;;:26;;1062:7;1044:26;:17;:26;:::i;:::-;-1:-1:-1;;;;;1028:13:167;;;;;;:8;:13;;;;;;;;;:42;;;;1081:18;;;;;;;1028:13;;1081:18;;;;;;;;;1110:34;;;;;;;;-1:-1:-1;;;;;1110:34:167;;;1127:1;;-1:-1:-1;;;;;;;;;;;1110:34:167;;;;;;;;-1:-1:-1;1157:4:167;854:312;;;;:::o;353:73:163:-;396:25;402:10;414:6;396:5;:25::i;:::-;353:73;:::o;376:49:2:-;;;;;;;;;;;;-1:-1:-1;;;;;376:49:2;;:::o;113:36:4:-;;;;;;;;;;;;;;;;;;;:::o;134:34:1:-;;;-1:-1:-1;;;;;134:34:1;;:::o;3679:432:168:-;3826:10;3785:4;3818:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3818:29:168;;;;;;;;;;3857:28;;;3853:165;;3903:10;3927:1;3895:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3895:29:168;;;;;;;;;:33;3853:165;;;3981:30;:8;3994:16;3981:30;:12;:30;:::i;:::-;3957:10;3949:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3949:29:168;;;;;;;;;:62;3853:165;4037:10;4059:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;4028:61:168;;4059:29;;;;;;;;;;;4028:61;;;;;;;;;4037:10;-1:-1:-1;;;;;;;;;;;4028:61:168;;;;;;;;;;-1:-1:-1;4102:4:168;;3679:432;-1:-1:-1;;;3679:432:168:o;4178:110:0:-;719:5:161;;-1:-1:-1;;;;;719:5:161;705:10;:19;697:28;;;;;;4257:24:0;4269:6;4277:3;4257:11;:24::i;:::-;4178:110;;:::o;1149:99:162:-;-1:-1:-1;;;;;1227:16:162;1205:7;1227:16;;;:8;:16;;;;;;;1149:99::o;3872:71:0:-;719:5:161;;-1:-1:-1;;;;;719:5:161;705:10;:19;697:28;;;;;3267:147:2;3324:4;-1:-1:-1;;;;;3347:18:2;;;;;;;:60;;-1:-1:-1;;;;;;;3369:24:2;;;3405:1;3369:24;;;:14;:24;;;;;;;:38;;;3267:147::o;3794:72:0:-;3835:4;3851:8;;;475:41:4;;;;;;;;;;;;;:::o;1796:135:0:-;1916:1;1919;1856:12;1796:135;;;:::o;238:20:161:-;;;-1:-1:-1;;;;;238:20:161;;:::o;5932:1069:4:-;6428:14;;-1:-1:-1;;;;;6162:21:4;;;;6154:30;;;;;;-1:-1:-1;;;;;6202:22:4;;;;6194:31;;;;;;6243:12;;;:33;;;6269:7;6259:6;:4;:6::i;:::-;:17;;6243:33;6235:42;;;;;;;;6296:2;:8;;6302:2;6296:8;:20;;;;6308:2;:8;;6314:2;6308:8;6296:20;6288:29;;;;;;;;6350:66;6335:81;;;6327:90;;;;;;6530:16;;6574:73;;;402:66;6574:73;;;;;;;;-1:-1:-1;;;;;6574:73:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;6574:73:4;;;;;;;;6564:84;;6574:73;;;;;6564:84;;;;6574:73;6564:84;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;6564:84:4;;;;;;;;;;;;6468:194;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;6468:194:4;;;;;;;;6445:227;;6468:194;;-1:-1:-1;6468:194:4;;-1:-1:-1;6445:227:4;;;;-1:-1:-1;6445:227:4;6468:194;6445:227;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;6445:227:4;;;;;;;;;;;;-1:-1:-1;6702:29:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6445:227;;-1:-1:-1;274:1;;-1:-1;6702:29:4;;;;;-1:-1:-1;263:2;;-1:-1;;6702:29:4;;;-1:-1:-1;6702:29:4;;;;;;;;274:1:-1;6702:29:4;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6702:29:4;;;;;;;;-1:-1:-1;;;;;6691:40:4;:7;-1:-1:-1;;;;;6691:40:4;;6683:49;;;;;;;;-1:-1:-1;;;;;6760:15:4;;;;;;:6;:15;;;;;:17;;;;;;;;6750:27;;6742:36;;;;;;6806:8;:26;;6831:1;6806:26;;;-1:-1:-1;;6806:26:4;-1:-1:-1;;;;;6843:16:4;;;;;;;:7;:16;;;;;;;;:26;;;;;;;;;:35;;;6789:43;-1:-1:-1;6921:8:4;:22;;6942:1;6921:22;;;6932:7;6921:22;-1:-1:-1;;;;;6888:20:4;;;;;;;:11;:20;;;;;;;;:30;;;;;;;;;;;;;:55;;;;6959:35;;;;;;;6888:30;;:20;;-1:-1:-1;;;;;;;;;;;6959:35:4;;;;;;;;;;5932:1069;;;;;;;;;;:::o;2245:388:1:-;2032:19;;2414:10;;-1:-1:-1;;;;;2032:19:1;2018:10;:33;2010:42;;;;;;2329:12;;2325:25;;;2343:7;;2325:25;-1:-1:-1;2427:19:1;;2471:12;;-1:-1:-1;;;;;2427:19:1;;;;2471:25;;2488:7;2471:25;:16;:25;:::i;:::-;2456:12;:40;-1:-1:-1;;;;;2521:12:1;;;;;;:8;:12;;;;;;:25;;2538:7;2521:25;:16;:25;:::i;:::-;-1:-1:-1;;;;;2506:12:1;;;;;;:8;:12;;;;;;;;;:40;;;;2561:17;;;;;;;2506:12;;2561:17;;;;;;;;;2593:33;;;;;;;;-1:-1:-1;;;;;2593:33:1;;;2610:1;;-1:-1:-1;;;;;;;;;;;2593:33:1;;;;;;;;2245:388;;:::o;341:20:164:-;;;;;;;;;;;;;;;-1:-1:-1;;341:20:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1246:460:2;719:5:161;;1444:19:2;;-1:-1:-1;;;;;719:5:161;705:10;:19;697:28;;;;;;1319:11:2;;368:2;-1:-1:-1;1311:34:2;;;;;;1363:32;1387:7;1363:23;:32::i;:::-;1355:41;;;;;;;;1415:17;1424:7;1415:8;:17::i;:::-;1414:18;1406:27;;;;;;-1:-1:-1;;;;;;1466:22:2;;;;:14;:22;;-1:-1:-1;;;;;;;;;;;1466:22:2;;1506:25;;;1498:34;;;;;;1542:14;:22;;-1:-1:-1;;;;;;;;;;;1542:32:2;;-1:-1:-1;;1542:32:2;;;-1:-1:-1;;;;;1542:32:2;;;;;;;;;-1:-1:-1;1584:23:2;;;1542:22;1584:23;;:37;;;;;;;;;;;;;;1645:11;;:18;;-1:-1:-1;1645:15:2;:18::i;:::-;1631:11;:32;1679:20;;-1:-1:-1;;;;;1679:20:2;;;;;;;;1246:460;;:::o;2572:484::-;2617:9;2638:21;2698:15;2727:18;2676:11;;2662:26;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;2662:26:2;-1:-1:-1;;;;;;2716:1:2;2748:22;;;:14;:22;;-1:-1:-1;;;;;;;;;;;2748:22:2;2638:50;;-1:-1:-1;2716:1:2;-1:-1:-1;2748:22:2;;-1:-1:-1;2788:24:2;;;2780:33;;;;;;-1:-1:-1;;;;;2831:20:2;;;;2824:204;;2883:10;2867:4;2872:7;2867:13;;;;;;;;;;-1:-1:-1;;;;;2867:26:2;;;:13;;;;;;;;;:26;;;;2920;;;;;;;:14;:26;;;;;;;;;2960:9;;;;;2920:26;2992:24;;;2984:33;;;;;;2824:204;;;-1:-1:-1;3045:4:2;;2572:484;-1:-1:-1;;2572:484:2:o;1724:235:1:-;719:5:161;;-1:-1:-1;;;;;719:5:161;705:10;:19;697:28;;;;;;1815:41:1;1839:16;1815:23;:41::i;:::-;1807:50;;;;;;;;1875:27;1885:16;1875:9;:27::i;:::-;:32;1867:41;;;;;;1918:15;:34;;-1:-1:-1;;1918:34:1;-1:-1:-1;;;;;1918:34:1;;;;;;;;;;1724:235::o;4453:163:0:-;4538:4;4561:48;4584:7;4593:15;4561:22;:48::i;:::-;4554:55;4453:163;-1:-1:-1;;;4453:163:0:o;2990:206:1:-;3084:19;;3053:4;;-1:-1:-1;;;;;3077:26:1;;;3084:19;;3077:26;;3069:35;;;;;;3129:15;;-1:-1:-1;;;;;3122:22:1;;;3129:15;;3122:22;;3114:31;;;;;;3162:27;3177:3;3182:6;3162:14;:27::i;2639:345::-;2172:15;;-1:-1:-1;;;;;2172:15:1;2158:10;:29;2150:38;;;;;;-1:-1:-1;;;;;2813:17:1;;;;;;:8;:17;;;;;;:30;;2835:7;2813:30;:21;:30;:::i;:::-;-1:-1:-1;;;;;2793:17:1;;;;;;;:8;:17;;;;;;:50;;;;2890:15;;;;;2881:25;;;;:38;;2911:7;2881:38;:29;:38;:::i;:::-;2862:15;;;-1:-1:-1;;;;;2862:15:1;;;2853:25;;;;:8;:25;;;;;;;;;:66;;;;2952:15;;2934:43;;;;;;;2952:15;;;;2934:43;;;;-1:-1:-1;;;;;;;;;;;2934:43:1;;;;;;;;2639:345;;:::o;4095:106:4:-;4156:38;4169:10;4181:3;4186:7;4156:12;:38::i;:::-;;4095:106;;:::o;4733:116::-;4809:33;4822:5;4829:3;4834:7;4809:12;:33::i;:::-;;4733:116;;;:::o;247:75:2:-;-1:-1:-1;;;;;247:75:2;:::o;2926:296:168:-;3089:10;3027:4;3081:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3081:29:168;;;;;;;;;;:46;;3115:11;3081:46;:33;:46;:::i;:::-;3049:10;3041:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3041:29:168;;;;;;;;;;;;:87;;;3139:61;;;;;;3041:29;;-1:-1:-1;;;;;;;;;;;3139:61:168;;;;;;;;;;-1:-1:-1;3213:4:168;2926:296;;;;:::o;2321:153::-;-1:-1:-1;;;;;2444:15:168;;;2420:7;2444:15;;;:7;:15;;;;;;;;:25;;;;;;;;;;;;;2321:153::o;686:88:35:-;739:15;:28;686:88::o;174:30:1:-;;;-1:-1:-1;;;;;174:30:1;;:::o;4423:110:4:-;4486:40;4499:5;4506:10;4518:7;4486:12;:40::i;1274:103:161:-;719:5;;-1:-1:-1;;;;;719:5:161;705:10;:19;697:28;;;;;;1343:29;1362:9;1343:18;:29::i;431:26:2:-;;;;:::o;522:66:4:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;1060:116:160:-;1120:7;1142:8;;;;1135:16;;;;-1:-1:-1;1164:7:160;;;1060:116::o;1814:188:168:-;1901:10;1881:4;1893:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;1893:29:168;;;;;;;;;;;:38;;;1942;;;;;;;1881:4;;1893:29;;1901:10;;-1:-1:-1;;;;;;;;;;;1942:38:168;;;;;;;-1:-1:-1;1993:4:168;1814:188;;;;:::o;1651:1351:4:-;1743:4;;-1:-1:-1;;;;;1767:21:4;;;;1759:30;;;;;;-1:-1:-1;;;;;1807:24:4;;;;1799:33;;;;;;-1:-1:-1;;;;;1863:17:4;;;;;;:8;:17;;;;;;:30;;1885:7;1863:30;:21;:30;:::i;:::-;-1:-1:-1;;;;;1843:17:4;;;;;;;:8;:17;;;;;;:50;;;;1926:20;;;;;;;:33;;1951:7;1926:33;:24;:33;:::i;:::-;-1:-1:-1;;;;;1903:20:4;;;;;;;:8;:20;;;;;;;;;:56;;;;1974:38;;;;;;;1903:20;;1974:38;;;;-1:-1:-1;;;;;;;;;;;1974:38:4;;;;;;;;-1:-1:-1;;;;;2027:21:4;;2038:10;2027:21;2023:894;;2088:30;2098:7;2107:10;2088:9;:30::i;:::-;2064:54;-1:-1:-1;;;2137:28:4;;2133:655;;2341:26;:13;2359:7;2341:26;:17;:26;:::i;:::-;-1:-1:-1;;;;;2310:16:4;;;;;;:7;:16;;;;;;;;2327:10;2310:28;;;;;;;;;;:57;;;2390:59;;;;;;2327:10;;-1:-1:-1;;;;;;;;;;;2390:59:4;;;;;;;;;;2133:655;;;-1:-1:-1;;;;;2689:20:4;;;;;;:11;:20;;;;;;;;2710:10;2689:32;;;;;;;;:37;;:83;;;2766:6;:4;:6::i;:::-;-1:-1:-1;;;;;2730:20:4;;;;;;:11;:20;;;;;;;;2751:10;2730:32;;;;;;;;:42;;2689:83;2681:92;;;;;;;;2927:47;2945:7;2954:10;2966:7;2927:17;:47::i;:::-;-1:-1:-1;2991:4:4;;1651:1351;-1:-1:-1;;;;1651:1351:4:o;438:578:159:-;496:4;971:18;;1003:8;;438:578::o;4294:153:0:-;4374:4;4397:43;4420:7;4429:10;4397:22;:43::i;1937:127::-;2007:4;2030:27;2045:3;2050:6;2030:14;:27::i;3585:203::-;3685:4;3708:3;-1:-1:-1;;;;;3708:8:0;677:10;-1:-1:-1;;;3740:17:0;3759:5;3766:6;3774:5;3717:63;;;;;;-1:-1:-1;;;;;3717:63:0;-1:-1:-1;;;;;3717:63:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3717:63:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3717:63:0;;;-1:-1:-1;;26:21;;;22:32;6:49;;3717:63:0;;;49:4:-1;25:18;;61:17;;3717:63:0;182:15:-1;3717:63:0;;;;179:29:-1;;;;160:49;;3708:73:0;;;3717:63;;3708:73;;-1:-1:-1;3708:73:0;;-1:-1:-1;25:18;-1:-1;3708:73:0;-1:-1:-1;3708:73:0;;-1:-1:-1;3708:73:0;25:18:-1;-1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3708:73:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3585:203;-1:-1:-1;;;;;;;3585:203:0:o;1238:128:160:-;1319:7;;;1339;;;;1332:15;;;430:438:163;-1:-1:-1;;;;;508:14:163;;;;;;:8;:14;;;;;;498:24;;;490:33;;;;;;-1:-1:-1;;;;;718:14:163;;;;;;:8;:14;;;;;;:26;;737:6;718:26;:18;:26;:::i;:::-;-1:-1:-1;;;;;701:14:163;;;;;;:8;:14;;;;;:43;765:12;;:24;;782:6;765:24;:16;:24;:::i;:::-;750:12;:39;800:18;;;;;;;;-1:-1:-1;;;;;800:18:163;;;;;;;;;;;;;829:34;;;;;;;;852:1;;-1:-1:-1;;;;;829:34:163;;;-1:-1:-1;;;;;;;;;;;829:34:163;;;;;;;;430:438;;:::o;892:225:78:-;964:3;-1:-1:-1;;;;;455:17:78;;;;447:26;;;;;;-1:-1:-1;;;;;983:20:78;;;979:132;;;1019:21;1036:3;1019:16;:21::i;:::-;979:132;;;1071:29;1088:6;1096:3;1071:16;:29::i;780:116:35:-;819:7;845:15;;864:1;845:20;;:44;;886:3;845:44;;;868:15;;845:44;838:51;;780:116;:::o;2070:194:0:-;2133:4;2157:26;2171:3;2176:6;2157:13;:26::i;:::-;2149:35;;;;;;;;2194:42;2212:10;2224:3;2229:6;2194:17;:42::i;:::-;-1:-1:-1;2253:4:0;2070:194;;;;:::o;1512:171:161:-;-1:-1:-1;;;;;1582:23:161;;;;1574:32;;;;;;1638:5;;1617:38;;-1:-1:-1;;;;;1617:38:161;;;;1638:5;;1617:38;;1638:5;;1617:38;1661:5;:17;;-1:-1:-1;;1661:17:161;-1:-1:-1;;;;;1661:17:161;;;;;;;;;;1512:171::o;2971:199:0:-;3065:13;3074:3;3065:8;:13::i;:::-;3061:103;;;3139:12;;;3149:1;3139:12;;;;;;;;3102:50;;3119:5;;3126:3;;3131:6;;3102:16;:50::i;:::-;3094:59;;;;;;;626:321:162;728:10;689:4;719:20;;;:8;:20;;;;;;709:30;;;701:39;;;;;;-1:-1:-1;;;;;754:17:162;;;;746:26;;;;;;811:10;802:20;;;;:8;:20;;;;;;:32;;827:6;802:32;:24;:32;:::i;:::-;788:10;779:20;;;;:8;:20;;;;;;:55;;;;-1:-1:-1;;;;;856:13:162;;;;;;:25;;874:6;856:25;:17;:25;:::i;:::-;-1:-1:-1;;;;;840:13:162;;;;;;:8;:13;;;;;;;;;:41;;;;892:33;;;;;;;840:13;;901:10;;-1:-1:-1;;;;;;;;;;;892:33:162;;;;;;;;;-1:-1:-1;938:4:162;626:321;;;;:::o;1270:145:78:-;1352:4;1344:21;1375:33;1397:3;1344:21;1375;:33::i;1656:210::-;1795:21;;;;;;1811:4;1795:21;;;;;;1760:6;;1730:16;;-1:-1:-1;;;;;1795:15:78;;;;;:21;;;;;;;;;;;;;;1730:16;1795:15;:21;;;5:2:-1;;;;30:1;27;20:12;5:2;1795:21:78;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1795:21:78;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1795:21:78;;-1:-1:-1;1826:33:78;-1:-1:-1;;;;;1826:19:78;;1846:3;1795:21;1826:33;:19;:33;:::i;431:177:18:-;513:22;;-1:-1:-1;;;;;513:14:18;;;:22;;;;;528:6;;513:22;;;;528:6;513:14;:22;;;;;;;512:23;508:94;;;573:6;581:9;551:40;;:::i;:::-;-1:-1:-1;;;;;551:40:18;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;;431:177:18;;:::o;579:339:22:-;677:6;-1:-1:-1;;;;;665:28:22;;694:3;699:6;665:41;;;;;-1:-1:-1;;;665:41:22;;;;;;;-1:-1:-1;;;;;665:41:22;-1:-1:-1;;;;;665:41:22;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;665:41:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;665:41:22;;;;742:14;739:2;;;796;793:1;790;775:24;832:1;826:8;819:16;816:2;;;868:1;865;858:12;71:828:35;;;;;;;;;;:::o",
  "source": "pragma solidity 0.4.24;\n\nimport \"../ERC677BridgeTokenRewardable.sol\";\n\ncontract ERC677BridgeTokenRewardableMock is ERC677BridgeTokenRewardable {\n    uint256 private _blockTimestamp;\n\n    constructor(string _name, string _symbol, uint8 _decimals, uint256 _chainId)\n        public\n        ERC677BridgeTokenRewardable(_name, _symbol, _decimals, _chainId)\n    {\n        // solhint-disable-previous-line no-empty-blocks\n    }\n\n    function setBlockRewardContractMock(address _blockRewardContract) public {\n        blockRewardContract = _blockRewardContract;\n    }\n\n    function setStakingContractMock(address _stakingContract) public {\n        stakingContract = _stakingContract;\n    }\n\n    function setNow(uint256 _timestamp) public {\n        _blockTimestamp = _timestamp;\n    }\n\n    function _now() internal view returns (uint256) {\n        return _blockTimestamp != 0 ? _blockTimestamp : now;\n    }\n\n}\n",
  "sourcePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/mocks/ERC677BridgeTokenRewardableMock.sol",
  "ast": {
    "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/mocks/ERC677BridgeTokenRewardableMock.sol",
    "exportedSymbols": {
      "ERC677BridgeTokenRewardableMock": [
        5463
      ]
    },
    "id": 5464,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5396,
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:35"
      },
      {
        "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/ERC677BridgeTokenRewardable.sol",
        "file": "../ERC677BridgeTokenRewardable.sol",
        "id": 5397,
        "nodeType": "ImportDirective",
        "scope": 5464,
        "sourceUnit": 590,
        "src": "25:44:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5398,
              "name": "ERC677BridgeTokenRewardable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 589,
              "src": "115:27:35",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC677BridgeTokenRewardable_$589",
                "typeString": "contract ERC677BridgeTokenRewardable"
              }
            },
            "id": 5399,
            "nodeType": "InheritanceSpecifier",
            "src": "115:27:35"
          }
        ],
        "contractDependencies": [
          348,
          589,
          894,
          1424,
          1469,
          1677,
          14052,
          30069,
          30165,
          30236,
          30270,
          30313,
          30345,
          30451,
          30698
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 5463,
        "linearizedBaseContracts": [
          5463,
          589,
          894,
          1424,
          348,
          14052,
          30451,
          30069,
          30698,
          30236,
          30165,
          30270,
          1677,
          1469,
          30313,
          30345
        ],
        "name": "ERC677BridgeTokenRewardableMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 5401,
            "name": "_blockTimestamp",
            "nodeType": "VariableDeclaration",
            "scope": 5463,
            "src": "149:31:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5400,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "149:7:35",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 5418,
              "nodeType": "Block",
              "src": "356:64:35",
              "statements": []
            },
            "documentation": null,
            "id": 5419,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 5412,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5403,
                    "src": "315:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 5413,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5405,
                    "src": "322:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 5414,
                    "name": "_decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5407,
                    "src": "331:9:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 5415,
                    "name": "_chainId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5409,
                    "src": "342:8:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 5416,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5411,
                  "name": "ERC677BridgeTokenRewardable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 589,
                  "src": "287:27:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC677BridgeTokenRewardable_$589_$",
                    "typeString": "type(contract ERC677BridgeTokenRewardable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "287:64:35"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5410,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5403,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 5419,
                  "src": "199:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5402,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "199:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5405,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 5419,
                  "src": "213:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5404,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "213:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5407,
                  "name": "_decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 5419,
                  "src": "229:15:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 5406,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "229:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5409,
                  "name": "_chainId",
                  "nodeType": "VariableDeclaration",
                  "scope": 5419,
                  "src": "246:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5408,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "246:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "198:65:35"
            },
            "payable": false,
            "returnParameters": {
              "id": 5417,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "356:0:35"
            },
            "scope": 5463,
            "src": "187:233:35",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5428,
              "nodeType": "Block",
              "src": "499:59:35",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5424,
                      "name": "blockRewardContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 355,
                      "src": "509:19:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 5425,
                      "name": "_blockRewardContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5421,
                      "src": "531:20:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "509:42:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5427,
                  "nodeType": "ExpressionStatement",
                  "src": "509:42:35"
                }
              ]
            },
            "documentation": null,
            "id": 5429,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "setBlockRewardContractMock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5422,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5421,
                  "name": "_blockRewardContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 5429,
                  "src": "462:28:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5420,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "462:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "461:30:35"
            },
            "payable": false,
            "returnParameters": {
              "id": 5423,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "499:0:35"
            },
            "scope": 5463,
            "src": "426:132:35",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5438,
              "nodeType": "Block",
              "src": "629:51:35",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5434,
                      "name": "stakingContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 357,
                      "src": "639:15:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 5435,
                      "name": "_stakingContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5431,
                      "src": "657:16:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "639:34:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5437,
                  "nodeType": "ExpressionStatement",
                  "src": "639:34:35"
                }
              ]
            },
            "documentation": null,
            "id": 5439,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "setStakingContractMock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5431,
                  "name": "_stakingContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 5439,
                  "src": "596:24:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5430,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "596:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "595:26:35"
            },
            "payable": false,
            "returnParameters": {
              "id": 5433,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "629:0:35"
            },
            "scope": 5463,
            "src": "564:116:35",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5448,
              "nodeType": "Block",
              "src": "729:45:35",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5444,
                      "name": "_blockTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5401,
                      "src": "739:15:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 5445,
                      "name": "_timestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5441,
                      "src": "757:10:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "739:28:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5447,
                  "nodeType": "ExpressionStatement",
                  "src": "739:28:35"
                }
              ]
            },
            "documentation": null,
            "id": 5449,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "setNow",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5442,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5441,
                  "name": "_timestamp",
                  "nodeType": "VariableDeclaration",
                  "scope": 5449,
                  "src": "702:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5440,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "702:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "701:20:35"
            },
            "payable": false,
            "returnParameters": {
              "id": 5443,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "729:0:35"
            },
            "scope": 5463,
            "src": "686:88:35",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5461,
              "nodeType": "Block",
              "src": "828:68:35",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 5456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 5454,
                        "name": "_blockTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5401,
                        "src": "845:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 5455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "864:1:35",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "845:20:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "id": 5458,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30715,
                      "src": "886:3:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 5459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "845:44:35",
                    "trueExpression": {
                      "argumentTypes": null,
                      "id": 5457,
                      "name": "_blockTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5401,
                      "src": "868:15:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5453,
                  "id": 5460,
                  "nodeType": "Return",
                  "src": "838:51:35"
                }
              ]
            },
            "documentation": null,
            "id": 5462,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "_now",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5450,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "793:2:35"
            },
            "payable": false,
            "returnParameters": {
              "id": 5453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5452,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5462,
                  "src": "819:7:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5451,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "819:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "818:9:35"
            },
            "scope": 5463,
            "src": "780:116:35",
            "stateMutability": "view",
            "superFunction": 1423,
            "visibility": "internal"
          }
        ],
        "scope": 5464,
        "src": "71:828:35"
      }
    ],
    "src": "0:900:35"
  },
  "legacyAST": {
    "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/mocks/ERC677BridgeTokenRewardableMock.sol",
    "exportedSymbols": {
      "ERC677BridgeTokenRewardableMock": [
        5463
      ]
    },
    "id": 5464,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5396,
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:35"
      },
      {
        "absolutePath": "/Users/max/Projects/Symblox/TokenBridge/tokenbridge/contracts/contracts/ERC677BridgeTokenRewardable.sol",
        "file": "../ERC677BridgeTokenRewardable.sol",
        "id": 5397,
        "nodeType": "ImportDirective",
        "scope": 5464,
        "sourceUnit": 590,
        "src": "25:44:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5398,
              "name": "ERC677BridgeTokenRewardable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 589,
              "src": "115:27:35",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC677BridgeTokenRewardable_$589",
                "typeString": "contract ERC677BridgeTokenRewardable"
              }
            },
            "id": 5399,
            "nodeType": "InheritanceSpecifier",
            "src": "115:27:35"
          }
        ],
        "contractDependencies": [
          348,
          589,
          894,
          1424,
          1469,
          1677,
          14052,
          30069,
          30165,
          30236,
          30270,
          30313,
          30345,
          30451,
          30698
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 5463,
        "linearizedBaseContracts": [
          5463,
          589,
          894,
          1424,
          348,
          14052,
          30451,
          30069,
          30698,
          30236,
          30165,
          30270,
          1677,
          1469,
          30313,
          30345
        ],
        "name": "ERC677BridgeTokenRewardableMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 5401,
            "name": "_blockTimestamp",
            "nodeType": "VariableDeclaration",
            "scope": 5463,
            "src": "149:31:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5400,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "149:7:35",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 5418,
              "nodeType": "Block",
              "src": "356:64:35",
              "statements": []
            },
            "documentation": null,
            "id": 5419,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 5412,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5403,
                    "src": "315:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 5413,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5405,
                    "src": "322:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 5414,
                    "name": "_decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5407,
                    "src": "331:9:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 5415,
                    "name": "_chainId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5409,
                    "src": "342:8:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 5416,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5411,
                  "name": "ERC677BridgeTokenRewardable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 589,
                  "src": "287:27:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC677BridgeTokenRewardable_$589_$",
                    "typeString": "type(contract ERC677BridgeTokenRewardable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "287:64:35"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5410,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5403,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 5419,
                  "src": "199:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5402,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "199:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5405,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 5419,
                  "src": "213:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5404,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "213:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5407,
                  "name": "_decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 5419,
                  "src": "229:15:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 5406,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "229:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5409,
                  "name": "_chainId",
                  "nodeType": "VariableDeclaration",
                  "scope": 5419,
                  "src": "246:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5408,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "246:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "198:65:35"
            },
            "payable": false,
            "returnParameters": {
              "id": 5417,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "356:0:35"
            },
            "scope": 5463,
            "src": "187:233:35",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5428,
              "nodeType": "Block",
              "src": "499:59:35",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5424,
                      "name": "blockRewardContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 355,
                      "src": "509:19:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 5425,
                      "name": "_blockRewardContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5421,
                      "src": "531:20:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "509:42:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5427,
                  "nodeType": "ExpressionStatement",
                  "src": "509:42:35"
                }
              ]
            },
            "documentation": null,
            "id": 5429,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "setBlockRewardContractMock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5422,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5421,
                  "name": "_blockRewardContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 5429,
                  "src": "462:28:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5420,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "462:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "461:30:35"
            },
            "payable": false,
            "returnParameters": {
              "id": 5423,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "499:0:35"
            },
            "scope": 5463,
            "src": "426:132:35",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5438,
              "nodeType": "Block",
              "src": "629:51:35",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5434,
                      "name": "stakingContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 357,
                      "src": "639:15:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 5435,
                      "name": "_stakingContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5431,
                      "src": "657:16:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "639:34:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5437,
                  "nodeType": "ExpressionStatement",
                  "src": "639:34:35"
                }
              ]
            },
            "documentation": null,
            "id": 5439,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "setStakingContractMock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5431,
                  "name": "_stakingContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 5439,
                  "src": "596:24:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5430,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "596:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "595:26:35"
            },
            "payable": false,
            "returnParameters": {
              "id": 5433,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "629:0:35"
            },
            "scope": 5463,
            "src": "564:116:35",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5448,
              "nodeType": "Block",
              "src": "729:45:35",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5444,
                      "name": "_blockTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5401,
                      "src": "739:15:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 5445,
                      "name": "_timestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5441,
                      "src": "757:10:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "739:28:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5447,
                  "nodeType": "ExpressionStatement",
                  "src": "739:28:35"
                }
              ]
            },
            "documentation": null,
            "id": 5449,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "setNow",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5442,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5441,
                  "name": "_timestamp",
                  "nodeType": "VariableDeclaration",
                  "scope": 5449,
                  "src": "702:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5440,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "702:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "701:20:35"
            },
            "payable": false,
            "returnParameters": {
              "id": 5443,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "729:0:35"
            },
            "scope": 5463,
            "src": "686:88:35",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5461,
              "nodeType": "Block",
              "src": "828:68:35",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 5456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 5454,
                        "name": "_blockTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5401,
                        "src": "845:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 5455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "864:1:35",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "845:20:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "id": 5458,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30715,
                      "src": "886:3:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 5459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "845:44:35",
                    "trueExpression": {
                      "argumentTypes": null,
                      "id": 5457,
                      "name": "_blockTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5401,
                      "src": "868:15:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5453,
                  "id": 5460,
                  "nodeType": "Return",
                  "src": "838:51:35"
                }
              ]
            },
            "documentation": null,
            "id": 5462,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "_now",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5450,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "793:2:35"
            },
            "payable": false,
            "returnParameters": {
              "id": 5453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5452,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5462,
                  "src": "819:7:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5451,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "819:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "818:9:35"
            },
            "scope": 5463,
            "src": "780:116:35",
            "stateMutability": "view",
            "superFunction": 1423,
            "visibility": "internal"
          }
        ],
        "scope": 5464,
        "src": "71:828:35"
      }
    ],
    "src": "0:900:35"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-11-26T16:22:39.663Z",
  "devdoc": {
    "methods": {
      "addBridge(address)": {
        "details": "Adds one more bridge contract into the list",
        "params": {
          "_bridge": "bridge contract address"
        }
      },
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "_owner": "address The address which owns the funds.",
          "_spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.",
        "params": {
          "_to": "The address which will spend the funds.",
          "_value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "_owner": "The address to query the the balance of."
        },
        "return": "An uint256 representing the amount owned by the passed address."
      },
      "bridgeContract()": {
        "details": "Removes unused getter from ERC677BridgeToken contract"
      },
      "bridgeList()": {
        "details": "Returns all recorded bridge contract addresses",
        "return": "address[] bridge contract addresses"
      },
      "burn(uint256)": {
        "details": "Burns a specific amount of tokens.",
        "params": {
          "_value": "The amount of token to be burned."
        }
      },
      "claimTokens(address,address)": {
        "details": "Withdraws the erc20 tokens or native coins from this contract.",
        "params": {
          "_to": "address of the tokens/coins receiver.",
          "_token": "address of the claimed token or address(0) for native coins."
        }
      },
      "decreaseApproval(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol",
        "params": {
          "_spender": "The address which will spend the funds.",
          "_subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to spender by the caller.",
        "params": {
          "_addedValue": "The amount of tokens to increase the allowance by.",
          "_to": "The address which will spend the funds."
        }
      },
      "increaseApproval(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol",
        "params": {
          "_addedValue": "The amount of tokens to increase the allowance by.",
          "_spender": "The address which will spend the funds."
        }
      },
      "isBridge(address)": {
        "details": "Checks if given address is included into bridge contracts list",
        "params": {
          "_address": "bridge contract address"
        },
        "return": "bool true, if given address is a known bridge contract "
      },
      "mint(address,uint256)": {
        "details": "Function to mint tokens",
        "params": {
          "_amount": "The amount of tokens to mint.",
          "_to": "The address that will receive the minted tokens."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "move(address,address,uint256)": {
        "details": "An alias for `transferFrom` function.",
        "params": {
          "_amount": "The value to transfer.",
          "_from": "The address of the sender.",
          "_to": "The address of the recipient."
        }
      },
      "permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)": {
        "details": "Allows to spend holder's unlimited amount by the specified spender. The function can be called by anyone, but requires having allowance parameters signed by the holder according to EIP712.",
        "params": {
          "_allowed": "True to enable unlimited allowance for the spender by the holder. False to disable.",
          "_expiry": "The allowance expiration date (unix timestamp in UTC). Can be zero for no expiration. Forced to zero if `_allowed` is `false`. Note that timestamps are not precise, malicious miner/validator can manipulate them to some extend. Assume that there can be a 900 seconds time delta between the desired timestamp and the actual expiration.",
          "_holder": "The holder's address.",
          "_nonce": "The nonce taken from `nonces(_holder)` public getter.",
          "_r": "The first 32 bytes of signature (ECDSA component).",
          "_s": "The second 32 bytes of signature (ECDSA component).",
          "_spender": "The spender's address.",
          "_v": "A final byte of signature (ECDSA component)."
        }
      },
      "pull(address,uint256)": {
        "details": "Makes a request to transfer the specified amount from the specified address to the caller's address.",
        "params": {
          "_amount": "The value to transfer.",
          "_from": "The address of the holder."
        }
      },
      "push(address,uint256)": {
        "details": "An alias for `transfer` function.",
        "params": {
          "_amount": "The value to transfer.",
          "_to": "The address of the recipient."
        }
      },
      "removeBridge(address)": {
        "details": "Removes one existing bridge contract from the list",
        "params": {
          "_bridge": "bridge contract address"
        }
      },
      "setBlockRewardContract(address)": {
        "details": "Updates the address of the used block reward contract. Only the token owner can call this method.  Even though this function is inteded only for the initialization purpose, it is still possible to change the already used block reward contract. In this case users of the old contract won't lose their accumulated rewards, they can proceed with the withdrawal by calling the old block reward contract directly.",
        "params": {
          "_blockRewardContract": "address of the new block reward contract."
        }
      },
      "setBridgeContract(address)": {
        "details": "Removes unused function from ERC677BridgeToken contract"
      },
      "setStakingContract(address)": {
        "details": "Updates the address of the used staking contract. Only the token owner can call this method.  Even though this function is inteded only for the initialization purpose, it is still possible to change the already used staking contract. In this case users of the old staking contract won't lose their tokens, they can proceed with the withdrawal by calling the old staking contract directly.",
        "params": {
          "_stakingContract": "address of the new staking contract."
        }
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "_newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}